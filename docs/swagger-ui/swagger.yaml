swagger: '2.0'
info:
  title: Celestia gRPC Gateway API
  version: null
consumes:
  - application/json
produces:
  - application/json
paths:
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      operationId: AppliedPlan_Z 3 S 4 U
      responses:
        '200':
          description: A successful response.
          schema: &ref_58
            type: object
            properties:
              height:
                type: string
                format: int64
                description: height is the block height at which the plan was applied.
            description: >-
              QueryAppliedPlanResponse is the response type for the
              Query/AppliedPlan RPC

              method.
        default:
          description: An unexpected error response.
          schema: &ref_0
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items: &ref_5
                  type: object
                  properties: &ref_1
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: name
          description: name is the name of the applied plan to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/upgrade/v1beta1/authority:
    get:
      summary: Returns the account with authority to conduct upgrades
      description: 'Since: cosmos-sdk 0.46'
      operationId: Authority_1 B M 2 9
      responses:
        '200':
          description: A successful response.
          schema: &ref_59
            type: object
            properties:
              address:
                type: string
            description: 'Since: cosmos-sdk 0.46'
            title: QueryAuthorityResponse is the response type for Query/Authority
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      summary: CurrentPlan queries the current upgrade plan.
      operationId: CurrentPlan_L Z W 2 W
      responses:
        '200':
          description: A successful response.
          schema: &ref_60
            type: object
            properties:
              plan:
                description: plan is the current upgrade plan.
                type: object
                properties: &ref_57
                  name:
                    type: string
                    description: >-
                      Sets the name for the upgrade. This name will be used by
                      the upgraded

                      version of the software to apply any special "on-upgrade"
                      commands during

                      the first BeginBlock method after the upgrade is applied.
                      It is also used

                      to detect whether a software version can handle a given
                      upgrade. If no

                      upgrade handler with this name has been set in the
                      software, it will be

                      assumed that the software is out-of-date when the upgrade
                      Time or Height is

                      reached and the software will exit.
                  time:
                    type: string
                    format: date-time
                    description: >-
                      Deprecated: Time based upgrades have been deprecated. Time
                      based upgrade logic

                      has been removed from the SDK.

                      If this field is not empty, an error will be thrown.
                  height:
                    type: string
                    format: int64
                    description: |-
                      The height at which the upgrade must be performed.
                      Only used if Time is not set.
                  info:
                    type: string
                    title: >-
                      Any application specific upgrade info to be included
                      on-chain

                      such as a git commit that validators could automatically
                      upgrade to
                  upgraded_client_state:
                    type: object
                    properties: *ref_1
                    description: >-
                      Deprecated: UpgradedClientState field has been deprecated.
                      IBC upgrade logic has been

                      moved to the IBC module in the sub module 02-client.

                      If this field is not empty, an error will be thrown.
            description: >-
              QueryCurrentPlanResponse is the response type for the
              Query/CurrentPlan RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      summary: ModuleVersions queries the list of module versions from state.
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions_T B P Z I
      responses:
        '200':
          description: A successful response.
          schema: &ref_61
            type: object
            properties:
              module_versions:
                type: array
                items: &ref_56
                  type: object
                  properties:
                    name:
                      type: string
                      title: name of the app module
                    version:
                      type: string
                      format: uint64
                      title: consensus version of the app module
                  description: |-
                    ModuleVersion specifies a module and its consensus version.

                    Since: cosmos-sdk 0.43
                description: >-
                  module_versions is a list of module names with their consensus
                  versions.
            description: >-
              QueryModuleVersionsResponse is the response type for the
              Query/ModuleVersions

              RPC method.


              Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: module_name
          description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      summary: >-
        UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      operationId: UpgradedConsensusState_2 0 7 L G
      responses:
        '200':
          description: A successful response.
          schema: &ref_62
            type: object
            properties:
              upgraded_consensus_state:
                type: string
                format: byte
                title: 'Since: cosmos-sdk 0.43'
            description: >-
              QueryUpgradedConsensusStateResponse is the response type for the
              Query/UpgradedConsensusState

              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: last_height
          description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      summary: Allowance returns fee granted to the grantee by the granter.
      operationId: Allowance_B Q B W S
      responses:
        '200':
          description: A successful response.
          schema: &ref_63
            type: object
            properties:
              allowance:
                description: allowance is a allowance granted for grantee by granter.
                type: object
                properties: &ref_2
                  granter:
                    type: string
                    description: >-
                      granter is the address of the user granting an allowance
                      of their funds.
                  grantee:
                    type: string
                    description: >-
                      grantee is the address of the user being granted an
                      allowance of another user's funds.
                  allowance:
                    type: object
                    properties: *ref_1
                    description: >-
                      allowance can be any of basic, periodic, allowed fee
                      allowance.
                title: >-
                  Grant is stored in the KVStore to record a grant with full
                  context
            description: >-
              QueryAllowanceResponse is the response type for the
              Query/Allowance RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: granter
          description: >-
            granter is the address of the user granting an allowance of their
            funds.
          in: path
          required: true
          type: string
        - name: grantee
          description: >-
            grantee is the address of the user being granted an allowance of
            another user's funds.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      summary: Allowances returns all the grants for address.
      operationId: Allowances_N X B 6 N
      responses:
        '200':
          description: A successful response.
          schema: &ref_65
            type: object
            properties:
              allowances:
                type: array
                items: &ref_3
                  type: object
                  properties: *ref_2
                  title: >-
                    Grant is stored in the KVStore to record a grant with full
                    context
                description: allowances are allowance's granted for grantee by granter.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties: &ref_4
                  next_key:
                    type: string
                    format: byte
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllowancesResponse is the response type for the
              Query/Allowances RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: grantee
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      summary: AllowancesByGranter returns all the grants given by an address
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter_I 5 N 4 M
      responses:
        '200':
          description: A successful response.
          schema: &ref_64
            type: object
            properties:
              allowances:
                type: array
                items: *ref_3
                description: allowances that have been issued by the granter.
              pagination:
                description: pagination defines an pagination for the response.
                type: object
                properties: *ref_4
            description: >-
              QueryAllowancesByGranterResponse is the response type for the
              Query/AllowancesByGranter RPC method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: granter
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      summary: AnnualProvisions returns the current annual provisions.
      operationId: AnnualProvisions_V N 5 E G
      responses:
        '200':
          description: A successful response.
          schema: &ref_263
            type: object
            properties:
              annual_provisions:
                type: string
                format: byte
                description: AnnualProvisions is the current annual provisions.
            description: |-
              QueryAnnualProvisionsResponse is the response type for the
              Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/mint/v1beta1/inflation:
    get:
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation_X Q V Y C
      responses:
        '200':
          description: A successful response.
          schema: &ref_67
            type: object
            properties:
              inflation:
                type: string
                format: byte
                description: inflation is the current minting inflation value.
            description: >-
              QueryInflationResponse is the response type for the
              Query/Inflation RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/mint/v1beta1/params:
    get:
      summary: Params returns the total set of minting parameters.
      operationId: Params_3 R 0 J 8
      responses:
        '200':
          description: A successful response.
          schema: &ref_68
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties: &ref_66
                  mint_denom:
                    type: string
                    title: type of coin to mint
                  inflation_rate_change:
                    type: string
                    title: maximum annual change in inflation rate
                  inflation_max:
                    type: string
                    title: maximum inflation rate
                  inflation_min:
                    type: string
                    title: minimum inflation rate
                  goal_bonded:
                    type: string
                    title: goal of percent bonded atoms
                  blocks_per_year:
                    type: string
                    format: uint64
                    title: expected blocks per year
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      summary: AllEvidence queries all evidence.
      operationId: AllEvidence_9 W I 3 N
      responses:
        '200':
          description: A successful response.
          schema: &ref_71
            type: object
            properties:
              evidence:
                type: array
                items: *ref_5
                description: evidence returns all evidences.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties: *ref_4
            description: >-
              QueryAllEvidenceResponse is the response type for the
              Query/AllEvidence RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence/{evidence_hash}:
    get:
      summary: Evidence queries evidence based on evidence hash.
      operationId: Evidence_L 6 N 2 N
      responses:
        '200':
          description: A successful response.
          schema: &ref_72
            type: object
            properties:
              evidence:
                type: object
                properties: *ref_1
                description: evidence returns the requested evidence.
            description: >-
              QueryEvidenceResponse is the response type for the Query/Evidence
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: evidence_hash
          description: evidence_hash defines the hash of the requested evidence.
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  /cosmos/nft/v1beta1/balance/{owner}/{class_id}:
    get:
      summary: >-
        Balance queries the number of NFTs of a given class owned by the owner,
        same as balanceOf in ERC721
      operationId: Balance_4 N N R X
      responses:
        '200':
          description: A successful response.
          schema: &ref_73
            type: object
            properties:
              amount:
                type: string
                format: uint64
            title: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: owner
          in: path
          required: true
          type: string
        - name: class_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/nft/v1beta1/classes:
    get:
      summary: Classes queries all NFT classes
      operationId: Classes_A 1 7 5 Q
      responses:
        '200':
          description: A successful response.
          schema: &ref_75
            type: object
            properties:
              classes:
                type: array
                items: &ref_6
                  type: object
                  properties:
                    id:
                      type: string
                      title: >-
                        id defines the unique identifier of the NFT
                        classification, similar to the contract address of
                        ERC721
                    name:
                      type: string
                      title: >-
                        name defines the human-readable name of the NFT
                        classification. Optional
                    symbol:
                      type: string
                      title: >-
                        symbol is an abbreviated name for nft classification.
                        Optional
                    description:
                      type: string
                      title: >-
                        description is a brief description of nft
                        classification. Optional
                    uri:
                      type: string
                      title: >-
                        uri for the class metadata stored off chain. It can
                        define schema for Class and NFT `Data` attributes.
                        Optional
                    uri_hash:
                      type: string
                      title: >-
                        uri_hash is a hash of the document pointed by uri.
                        Optional
                    data:
                      type: object
                      properties: *ref_1
                      title: >-
                        data is the app specific metadata of the NFT class.
                        Optional
                  description: Class defines the class of the nft type.
              pagination: &ref_7
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryClassesResponse is the response type for the Query/Classes
              RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/nft/v1beta1/classes/{class_id}:
    get:
      summary: Class queries an NFT class based on its id
      operationId: Class_I C T P 5
      responses:
        '200':
          description: A successful response.
          schema: &ref_74
            type: object
            properties:
              class: *ref_6
            title: >-
              QueryClassResponse is the response type for the Query/Class RPC
              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: class_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/nft/v1beta1/nfts:
    get:
      summary: >-
        NFTs queries all NFTs of a given class or owner,choose at least one of
        the two, similar to tokenByIndex in

        ERC721Enumerable
      operationId: NFTs_4 4 M F E
      responses:
        '200':
          description: A successful response.
          schema: &ref_77
            type: object
            properties:
              nfts:
                type: array
                items: &ref_8
                  type: object
                  properties:
                    class_id:
                      type: string
                      title: >-
                        class_id associated with the NFT, similar to the
                        contract address of ERC721
                    id:
                      type: string
                      title: id is a unique identifier of the NFT
                    uri:
                      type: string
                      title: uri for the NFT metadata stored off chain
                    uri_hash:
                      type: string
                      title: uri_hash is a hash of the document pointed by uri
                    data:
                      type: object
                      properties: *ref_1
                      title: data is an app specific data of the NFT. Optional
                  description: NFT defines the NFT.
              pagination: *ref_7
            title: >-
              QueryNFTsResponse is the response type for the Query/NFTs RPC
              methods
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: class_id
          in: query
          required: false
          type: string
        - name: owner
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/nft/v1beta1/nfts/{class_id}/{id}:
    get:
      summary: NFT queries an NFT based on its class and id.
      operationId: NFT_4 M R A C
      responses:
        '200':
          description: A successful response.
          schema: &ref_76
            type: object
            properties:
              nft: *ref_8
            title: QueryNFTResponse is the response type for the Query/NFT RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: class_id
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/nft/v1beta1/owner/{class_id}/{id}:
    get:
      summary: >-
        Owner queries the owner of the NFT based on its class and id, same as
        ownerOf in ERC721
      operationId: Owner_P E B V W
      responses:
        '200':
          description: A successful response.
          schema: &ref_78
            type: object
            properties:
              owner:
                type: string
            title: >-
              QueryOwnerResponse is the response type for the Query/Owner RPC
              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: class_id
          in: path
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/nft/v1beta1/supply/{class_id}:
    get:
      summary: >-
        Supply queries the number of NFTs from the given class, same as
        totalSupply of ERC721.
      operationId: Supply_W M N J W
      responses:
        '200':
          description: A successful response.
          schema: &ref_79
            type: object
            properties:
              amount:
                type: string
                format: uint64
            title: >-
              QuerySupplyResponse is the response type for the Query/Supply RPC
              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: class_id
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts:
    get:
      summary: Accounts returns all the existing accounts
      description: 'Since: cosmos-sdk 0.43'
      operationId: Accounts_U D 4 O R
      responses:
        '200':
          description: A successful response.
          schema: &ref_86
            type: object
            properties:
              accounts:
                type: array
                items: *ref_5
                title: accounts are the existing accounts
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryAccountsResponse is the response type for the Query/Accounts
              RPC method.


              Since: cosmos-sdk 0.43
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      summary: Account returns account details based on address.
      operationId: Account_4 K 6 G 3
      responses:
        '200':
          description: A successful response.
          schema: &ref_85
            type: object
            properties:
              account:
                type: object
                properties: *ref_1
                description: account defines the account of the corresponding address.
            description: >-
              QueryAccountResponse is the response type for the Query/Account
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: address defines the address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      summary: AccountAddressByID returns account address based on account number.
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID_C A I B V
      responses:
        '200':
          description: A successful response.
          schema: &ref_84
            type: object
            properties:
              account_address:
                type: string
            description: 'Since: cosmos-sdk 0.46.2'
            title: >-
              QueryAccountAddressByIDResponse is the response type for
              AccountAddressByID rpc method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: id
          description: |-
            id is the account number of the address to be queried. This field
            should have been an uint64 (like all account numbers), and will be
            updated to uint64 in a future version of the auth query.
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32:
    get:
      summary: Bech32Prefix queries bech32Prefix
      description: 'Since: cosmos-sdk 0.46'
      operationId: Bech32Prefix_0 Y P E W
      responses:
        '200':
          description: A successful response.
          schema: &ref_82
            type: object
            properties:
              bech32_prefix:
                type: string
            description: >-
              Bech32PrefixResponse is the response type for Bech32Prefix rpc
              method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      summary: AddressBytesToString converts Account Address bytes to string
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressBytesToString_8 7 J U P
      responses:
        '200':
          description: A successful response.
          schema: &ref_80
            type: object
            properties:
              address_string:
                type: string
            description: >-
              AddressBytesToStringResponse is the response type for
              AddressString rpc method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address_bytes
          in: path
          required: true
          type: string
          format: byte
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      summary: AddressStringToBytes converts Address string to bytes
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressStringToBytes_E S X V 2
      responses:
        '200':
          description: A successful response.
          schema: &ref_81
            type: object
            properties:
              address_bytes:
                type: string
                format: byte
            description: >-
              AddressStringToBytesResponse is the response type for AddressBytes
              rpc method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address_string
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      summary: ModuleAccounts returns all the existing module accounts.
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts_N X 8 E D
      responses:
        '200':
          description: A successful response.
          schema: &ref_88
            type: object
            properties:
              accounts:
                type: array
                items: *ref_5
            description: >-
              QueryModuleAccountsResponse is the response type for the
              Query/ModuleAccounts RPC method.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      summary: ModuleAccountByName returns the module account info by module name
      operationId: ModuleAccountByName_J P 7 3 F
      responses:
        '200':
          description: A successful response.
          schema: &ref_87
            type: object
            properties:
              account: *ref_5
            description: >-
              QueryModuleAccountByNameResponse is the response type for the
              Query/ModuleAccountByName RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: name
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/params:
    get:
      summary: Params queries all parameters.
      operationId: Params_D M J A T
      responses:
        '200':
          description: A successful response.
          schema: &ref_89
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties: &ref_83
                  max_memo_characters:
                    type: string
                    format: uint64
                  tx_sig_limit:
                    type: string
                    format: uint64
                  tx_size_cost_per_byte:
                    type: string
                    format: uint64
                  sig_verify_cost_ed25519:
                    type: string
                    format: uint64
                  sig_verify_cost_secp256k1:
                    type: string
                    format: uint64
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/group/v1/group_info/{group_id}:
    get:
      summary: GroupInfo queries group info based on group id.
      operationId: GroupInfo_O S P V U
      responses:
        '200':
          description: A successful response.
          schema: &ref_95
            type: object
            properties:
              info:
                description: info is the GroupInfo for the group.
                type: object
                properties: &ref_11
                  id:
                    type: string
                    format: uint64
                    description: id is the unique ID of the group.
                  admin:
                    type: string
                    description: admin is the account address of the group's admin.
                  metadata:
                    type: string
                    description: >-
                      metadata is any arbitrary metadata to attached to the
                      group.
                  version:
                    type: string
                    format: uint64
                    title: >-
                      version is used to track changes to a group's membership
                      structure that

                      would break existing proposals. Whenever any members
                      weight is changed,

                      or any member is added or removed this version is
                      incremented and will

                      cause proposals based on older versions of this group to
                      fail
                  total_weight:
                    type: string
                    description: total_weight is the sum of the group members' weights.
                  created_at:
                    type: string
                    format: date-time
                    description: >-
                      created_at is a timestamp specifying when a group was
                      created.
            description: QueryGroupInfoResponse is the Query/GroupInfo response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: group_id
          description: group_id is the unique ID of the group.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/group/v1/group_members/{group_id}:
    get:
      summary: GroupMembers queries members of a group
      operationId: GroupMembers_T V Y 9 K
      responses:
        '200':
          description: A successful response.
          schema: &ref_96
            type: object
            properties:
              members:
                type: array
                items: &ref_90
                  type: object
                  properties:
                    group_id:
                      type: string
                      format: uint64
                      description: group_id is the unique ID of the group.
                    member:
                      description: member is the member data.
                      type: object
                      properties: &ref_91
                        address:
                          type: string
                          description: address is the member's account address.
                        weight:
                          type: string
                          description: >-
                            weight is the member's voting weight that should be
                            greater than 0.
                        metadata:
                          type: string
                          description: >-
                            metadata is any arbitrary metadata attached to the
                            member.
                        added_at:
                          type: string
                          format: date-time
                          description: >-
                            added_at is a timestamp specifying when a member was
                            added.
                  description: >-
                    GroupMember represents the relationship between a group and
                    a member.
                description: members are the members of the group with given group_id.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGroupMembersResponse is the Query/GroupMembersResponse
              response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: group_id
          description: group_id is the unique ID of the group.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/group_policies_by_admin/{admin}:
    get:
      summary: GroupsByAdmin queries group policies by admin address.
      operationId: GroupPoliciesByAdmin_W L H 2 M
      responses:
        '200':
          description: A successful response.
          schema: &ref_97
            type: object
            properties:
              group_policies:
                type: array
                items: &ref_9
                  type: object
                  properties: &ref_10
                    address:
                      type: string
                      description: address is the account address of group policy.
                    group_id:
                      type: string
                      format: uint64
                      description: group_id is the unique ID of the group.
                    admin:
                      type: string
                      description: admin is the account address of the group admin.
                    metadata:
                      type: string
                      description: >-
                        metadata is any arbitrary metadata to attached to the
                        group policy.
                    version:
                      type: string
                      format: uint64
                      description: >-
                        version is used to track changes to a group's
                        GroupPolicyInfo structure that

                        would create a different result on a running proposal.
                    decision_policy:
                      type: object
                      properties: *ref_1
                      description: >-
                        decision_policy specifies the group policy's decision
                        policy.
                    created_at:
                      type: string
                      format: date-time
                      description: >-
                        created_at is a timestamp specifying when a group policy
                        was created.
                  description: >-
                    GroupPolicyInfo represents the high-level on-chain
                    information for a group policy.
                description: >-
                  group_policies are the group policies info with provided
                  admin.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGroupPoliciesByAdminResponse is the
              Query/GroupPoliciesByAdmin response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: admin
          description: admin is the admin address of the group policy.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/group_policies_by_group/{group_id}:
    get:
      summary: GroupPoliciesByGroup queries group policies by group id.
      operationId: GroupPoliciesByGroup_Q G 3 B 3
      responses:
        '200':
          description: A successful response.
          schema: &ref_98
            type: object
            properties:
              group_policies:
                type: array
                items: *ref_9
                description: >-
                  group_policies are the group policies info associated with the
                  provided group.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGroupPoliciesByGroupResponse is the
              Query/GroupPoliciesByGroup response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: group_id
          description: group_id is the unique ID of the group policy's group.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/group_policy_info/{address}:
    get:
      summary: >-
        GroupPolicyInfo queries group policy info based on account address of
        group policy.
      operationId: GroupPolicyInfo_1 0 1 Z L
      responses:
        '200':
          description: A successful response.
          schema: &ref_99
            type: object
            properties:
              info:
                type: object
                properties: *ref_10
                description: >-
                  GroupPolicyInfo represents the high-level on-chain information
                  for a group policy.
            description: >-
              QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response
              type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: address is the account address of the group policy.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/group/v1/groups:
    get:
      summary: Groups queries all groups in state.
      description: 'Since: cosmos-sdk 0.47.1'
      operationId: Groups_R 1 A G D
      responses:
        '200':
          description: A successful response.
          schema: &ref_102
            type: object
            properties:
              groups:
                type: array
                items: &ref_12
                  type: object
                  properties: *ref_11
                  description: >-
                    GroupInfo represents the high-level on-chain information for
                    a group.
                description: '`groups` is all the groups present in state.'
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: |-
              QueryGroupsResponse is the Query/Groups response type.

              Since: cosmos-sdk 0.47.1
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/groups_by_admin/{admin}:
    get:
      summary: GroupsByAdmin queries groups by admin address.
      operationId: GroupsByAdmin_W T H U 5
      responses:
        '200':
          description: A successful response.
          schema: &ref_100
            type: object
            properties:
              groups:
                type: array
                items: *ref_12
                description: groups are the groups info with the provided admin.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse
              response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: admin
          description: admin is the account address of a group's admin.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/groups_by_member/{address}:
    get:
      summary: GroupsByMember queries groups by member address.
      operationId: GroupsByMember_D N R R 8
      responses:
        '200':
          description: A successful response.
          schema: &ref_101
            type: object
            properties:
              groups:
                type: array
                items: *ref_12
                description: groups are the groups info with the provided group member.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGroupsByMemberResponse is the Query/GroupsByMember response
              type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: address is the group member address.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/proposal/{proposal_id}:
    get:
      summary: Proposal queries a proposal based on proposal id.
      operationId: Proposal_R B C 2 P
      responses:
        '200':
          description: A successful response.
          schema: &ref_103
            type: object
            properties:
              proposal:
                description: proposal is the proposal info.
                type: object
                properties: &ref_14
                  id:
                    type: string
                    format: uint64
                    description: id is the unique id of the proposal.
                  group_policy_address:
                    type: string
                    description: >-
                      group_policy_address is the account address of group
                      policy.
                  metadata:
                    type: string
                    description: >-
                      metadata is any arbitrary metadata to attached to the
                      proposal.
                  proposers:
                    type: array
                    items:
                      type: string
                    description: proposers are the account addresses of the proposers.
                  submit_time:
                    type: string
                    format: date-time
                    description: >-
                      submit_time is a timestamp specifying when a proposal was
                      submitted.
                  group_version:
                    type: string
                    format: uint64
                    description: >-
                      group_version tracks the version of the group at proposal
                      submission.

                      This field is here for informational purposes only.
                  group_policy_version:
                    type: string
                    format: uint64
                    description: >-
                      group_policy_version tracks the version of the group
                      policy at proposal submission.

                      When a decision policy is changed, existing proposals from
                      previous policy

                      versions will become invalid with the `ABORTED` status.

                      This field is here for informational purposes only.
                  status:
                    description: >-
                      status represents the high level position in the life
                      cycle of the proposal. Initial value is Submitted.
                    type: string
                    enum: &ref_94
                      - PROPOSAL_STATUS_UNSPECIFIED
                      - PROPOSAL_STATUS_SUBMITTED
                      - PROPOSAL_STATUS_ACCEPTED
                      - PROPOSAL_STATUS_REJECTED
                      - PROPOSAL_STATUS_ABORTED
                      - PROPOSAL_STATUS_WITHDRAWN
                    default: PROPOSAL_STATUS_UNSPECIFIED
                  final_tally_result:
                    description: >-
                      final_tally_result contains the sums of all weighted votes
                      for this

                      proposal for each vote option. It is empty at submission,
                      and only

                      populated after tallying, at voting period end or at
                      proposal execution,

                      whichever happens first.
                    type: object
                    properties: &ref_13
                      yes_count:
                        type: string
                        description: yes_count is the weighted sum of yes votes.
                      abstain_count:
                        type: string
                        description: abstain_count is the weighted sum of abstainers.
                      no_count:
                        type: string
                        description: no_count is the weighted sum of no votes.
                      no_with_veto_count:
                        type: string
                        description: no_with_veto_count is the weighted sum of veto.
                  voting_period_end:
                    type: string
                    format: date-time
                    description: >-
                      voting_period_end is the timestamp before which voting
                      must be done.

                      Unless a successfull MsgExec is called before (to execute
                      a proposal whose

                      tally is successful before the voting period ends),
                      tallying will be done

                      at this point, and the `final_tally_result`and `status`
                      fields will be

                      accordingly updated.
                  executor_result:
                    description: >-
                      executor_result is the final result of the proposal
                      execution. Initial value is NotRun.
                    type: string
                    enum: &ref_93
                      - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                      - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
                      - PROPOSAL_EXECUTOR_RESULT_SUCCESS
                      - PROPOSAL_EXECUTOR_RESULT_FAILURE
                    default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
                  messages:
                    type: array
                    items: *ref_5
                    description: >-
                      messages is a list of `sdk.Msg`s that will be executed if
                      the proposal passes.
            description: QueryProposalResponse is the Query/Proposal response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id is the unique ID of a proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/group/v1/proposals/{proposal_id}/tally:
    get:
      summary: >-
        TallyResult returns the tally result of a proposal. If the proposal is

        still in voting period, then this query computes the current tally
        state,

        which might not be final. On the other hand, if the proposal is final,

        then it simply returns the `final_tally_result` state stored in the

        proposal itself.
      operationId: TallyResult_K K O 3 V
      responses:
        '200':
          description: A successful response.
          schema: &ref_105
            type: object
            properties:
              tally:
                description: tally defines the requested tally.
                type: object
                properties: *ref_13
            description: QueryTallyResultResponse is the Query/TallyResult response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id is the unique id of a proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/group/v1/proposals_by_group_policy/{address}:
    get:
      summary: >-
        ProposalsByGroupPolicy queries proposals based on account address of
        group policy.
      operationId: ProposalsByGroupPolicy_3 B U O C
      responses:
        '200':
          description: A successful response.
          schema: &ref_104
            type: object
            properties:
              proposals:
                type: array
                items: &ref_92
                  type: object
                  properties: *ref_14
                  description: >-
                    Proposal defines a group proposal. Any member of a group can
                    submit a proposal

                    for a group policy to decide upon.

                    A proposal consists of a set of `sdk.Msg`s that will be
                    executed if the proposal

                    passes as well as some optional metadata associated with the
                    proposal.
                description: proposals are the proposals with given group policy.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryProposalsByGroupPolicyResponse is the
              Query/ProposalByGroupPolicy response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: >-
            address is the account address of the group policy related to
            proposals.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}:
    get:
      summary: VoteByProposalVoter queries a vote by proposal id and voter.
      operationId: VoteByProposalVoter_9 Q H W Y
      responses:
        '200':
          description: A successful response.
          schema: &ref_106
            type: object
            properties:
              vote:
                description: vote is the vote with given proposal_id and voter.
                type: object
                properties: &ref_15
                  proposal_id:
                    type: string
                    format: uint64
                    description: proposal is the unique ID of the proposal.
                  voter:
                    type: string
                    description: voter is the account address of the voter.
                  option:
                    description: option is the voter's choice on the proposal.
                    type: string
                    enum: &ref_109
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    default: VOTE_OPTION_UNSPECIFIED
                  metadata:
                    type: string
                    description: >-
                      metadata is any arbitrary metadata to attached to the
                      vote.
                  submit_time:
                    type: string
                    format: date-time
                    description: submit_time is the timestamp when the vote was submitted.
            description: >-
              QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter
              response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id is the unique ID of a proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: voter
          description: voter is a proposal voter account address.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/group/v1/votes_by_proposal/{proposal_id}:
    get:
      summary: VotesByProposal queries a vote by proposal.
      operationId: VotesByProposal_Y Z 9 O I
      responses:
        '200':
          description: A successful response.
          schema: &ref_107
            type: object
            properties:
              votes:
                type: array
                items: &ref_16
                  type: object
                  properties: *ref_15
                  description: Vote represents a vote for a proposal.
                description: votes are the list of votes for given proposal_id.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryVotesByProposalResponse is the Query/VotesByProposal response
              type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id is the unique ID of a proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/group/v1/votes_by_voter/{voter}:
    get:
      summary: VotesByVoter queries a vote by voter.
      operationId: VotesByVoter_O W M W Q
      responses:
        '200':
          description: A successful response.
          schema: &ref_108
            type: object
            properties:
              votes:
                type: array
                items: *ref_16
                description: votes are the list of votes by given voter.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: QueryVotesByVoterResponse is the Query/VotesByVoter response type.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: voter
          description: voter is a proposal voter account address.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      summary: AllBalances queries the balance of all coins for a single account.
      operationId: AllBalances_K L Y 4 N
      responses:
        '200':
          description: A successful response.
          schema: &ref_114
            type: object
            properties:
              balances:
                type: array
                items: &ref_19
                  type: object
                  properties: &ref_17
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: balances is the balances of all the coins.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryAllBalancesResponse is the response type for the
              Query/AllBalances RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      summary: Balance queries the balance of a single coin for a single account.
      operationId: Balance_L B S X 8
      responses:
        '200':
          description: A successful response.
          schema: &ref_115
            type: object
            properties:
              balance:
                type: object
                properties: *ref_17
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: denom
          description: denom is the coin denom to query balances for.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      summary: >-
        DenomOwners queries for all account addresses that own a particular
        token

        denomination.
      description: 'Since: cosmos-sdk 0.46'
      operationId: DenomOwners_N M W 9 S
      responses:
        '200':
          description: A successful response.
          schema: &ref_117
            type: object
            properties:
              denom_owners:
                type: array
                items: &ref_110
                  type: object
                  properties:
                    address:
                      type: string
                      description: >-
                        address defines the address that owns a particular
                        denomination.
                    balance:
                      type: object
                      properties: *ref_17
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    DenomOwner defines structure representing an account that
                    owns or holds a

                    particular denominated token. It contains the account
                    address and account

                    balance of the denominated token.


                    Since: cosmos-sdk 0.46
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryDenomOwnersResponse defines the RPC response of a DenomOwners
              RPC query.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: denom
          description: >-
            denom defines the coin denomination to query all account holders
            for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata_C 5 V 1 0
      responses:
        '200':
          description: A successful response.
          schema: &ref_118
            type: object
            properties:
              metadatas:
                type: array
                items: &ref_112
                  type: object
                  properties: &ref_18
                    description:
                      type: string
                    denom_units:
                      type: array
                      items: &ref_111
                        type: object
                        properties:
                          denom:
                            type: string
                            description: >-
                              denom represents the string name of the given
                              denom unit (e.g uatom).
                          exponent:
                            type: integer
                            format: int64
                            description: >-
                              exponent represents power of 10 exponent that one
                              must

                              raise the base_denom to in order to equal the
                              given DenomUnit's denom

                              1 denom = 10^exponent base_denom

                              (e.g. with a base_denom of uatom, one can create a
                              DenomUnit of 'atom' with

                              exponent = 6, thus: 1 atom = 10^6 uatom).
                          aliases:
                            type: array
                            items:
                              type: string
                            title: >-
                              aliases is a list of string aliases for the given
                              denom
                        description: |-
                          DenomUnit represents a struct that describes a given
                          denomination unit of the basic token.
                      title: >-
                        denom_units represents the list of DenomUnit's for a
                        given coin
                    base:
                      type: string
                      description: >-
                        base represents the base denom (should be the DenomUnit
                        with exponent = 0).
                    display:
                      type: string
                      description: |-
                        display indicates the suggested denom that should be
                        displayed in clients.
                    name:
                      type: string
                      description: 'Since: cosmos-sdk 0.43'
                      title: 'name defines the name of the token (eg: Cosmos Atom)'
                    symbol:
                      type: string
                      description: >-
                        symbol is the token symbol usually shown on exchanges
                        (eg: ATOM). This can

                        be the same as the display.


                        Since: cosmos-sdk 0.43
                    uri:
                      type: string
                      description: >-
                        URI to a document (on or off-chain) that contains
                        additional information. Optional.


                        Since: cosmos-sdk 0.46
                    uri_hash:
                      type: string
                      description: >-
                        URIHash is a sha256 hash of a document pointed by URI.
                        It's used to verify that

                        the document didn't change. Optional.


                        Since: cosmos-sdk 0.46
                  description: |-
                    Metadata represents a struct that describes
                    a basic token.
                description: >-
                  metadata provides the client information for all the
                  registered tokens.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryDenomsMetadataResponse is the response type for the
              Query/DenomsMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata_K L G 2 E
      responses:
        '200':
          description: A successful response.
          schema: &ref_116
            type: object
            properties:
              metadata:
                type: object
                properties: *ref_18
                description: |-
                  Metadata represents a struct that describes
                  a basic token.
            description: >-
              QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: denom
          description: denom is the coin denom to query the metadata for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/params:
    get:
      summary: Params queries the parameters of x/bank module.
      operationId: Params_T R M D E
      responses:
        '200':
          description: A successful response.
          schema: &ref_119
            type: object
            properties:
              params: &ref_113
                type: object
                properties:
                  send_enabled:
                    type: array
                    items: &ref_123
                      type: object
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      description: >-
                        SendEnabled maps coin denom to a send_enabled status
                        (whether a denom is

                        sendable).
                  default_send_enabled:
                    type: boolean
                description: Params defines the parameters for the bank module.
            description: >-
              QueryParamsResponse defines the response type for querying x/bank
              parameters.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      summary: |-
        SpendableBalances queries the spenable balance of all coins for a single
        account.
      description: 'Since: cosmos-sdk 0.46'
      operationId: SpendableBalances_9 V E W H
      responses:
        '200':
          description: A successful response.
          schema: &ref_120
            type: object
            properties:
              balances:
                type: array
                items: *ref_19
                description: balances is the spendable balances of all the coins.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QuerySpendableBalancesResponse defines the gRPC response structure
              for querying

              an account's spendable balances.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: address
          description: address is the address to query spendable balances for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/supply:
    get:
      summary: TotalSupply queries the total supply of all coins.
      operationId: TotalSupply_B X Y 1 Y
      responses:
        '200':
          description: A successful response.
          schema: &ref_122
            type: object
            properties:
              supply:
                type: array
                items: *ref_19
                title: supply is the supply of the coins
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryTotalSupplyResponse is the response type for the
              Query/TotalSupply RPC

              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      summary: SupplyOf queries the supply of a single coin.
      operationId: SupplyOf_7 M S G G
      responses:
        '200':
          description: A successful response.
          schema: &ref_121
            type: object
            properties:
              amount:
                type: object
                properties: *ref_17
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            description: >-
              QuerySupplyOfResponse is the response type for the Query/SupplyOf
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: denom
          description: denom is the coin denom to query balances for.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/community_pool:
    get:
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool_N W D 2 9
      responses:
        '200':
          description: A successful response.
          schema: &ref_126
            type: object
            properties:
              pool:
                type: array
                items: &ref_20
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: pool defines community pool's coins.
            description: >-
              QueryCommunityPoolResponse is the response type for the
              Query/CommunityPool

              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards_U 2 0 I W
      responses:
        '200':
          description: A successful response.
          schema: &ref_128
            type: object
            properties:
              rewards:
                type: array
                items: &ref_124
                  type: object
                  properties:
                    validator_address:
                      type: string
                    reward:
                      type: array
                      items: *ref_20
                  description: |-
                    DelegationDelegatorReward represents the properties
                    of a delegator's delegation reward.
                description: rewards defines all the rewards accrued by a delegator.
              total:
                type: array
                items: *ref_20
                description: total defines the sum of all the rewards.
            description: |-
              QueryDelegationTotalRewardsResponse is the response type for the
              Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards_W W Q S 2
      responses:
        '200':
          description: A successful response.
          schema: &ref_127
            type: object
            properties:
              rewards:
                type: array
                items: *ref_20
                description: rewards defines the rewards accrued by a delegation.
            description: |-
              QueryDelegationRewardsResponse is the response type for the
              Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DelegatorValidators_R Q 3 G I
      responses:
        '200':
          description: A successful response.
          schema: &ref_129
            type: object
            properties:
              validators:
                type: array
                items:
                  type: string
                description: >-
                  validators defines the validators a delegator is delegating
                  for.
            description: |-
              QueryDelegatorValidatorsResponse is the response type for the
              Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress_F X N 2 K
      responses:
        '200':
          description: A successful response.
          schema: &ref_130
            type: object
            properties:
              withdraw_address:
                type: string
                description: withdraw_address defines the delegator address to query for.
            description: |-
              QueryDelegatorWithdrawAddressResponse is the response type for the
              Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/params:
    get:
      summary: Params queries params of the distribution module.
      operationId: Params_V S 0 G L
      responses:
        '200':
          description: A successful response.
          schema: &ref_131
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties: &ref_125
                  community_tax:
                    type: string
                  base_proposer_reward:
                    type: string
                  bonus_proposer_reward:
                    type: string
                  withdraw_addr_enabled:
                    type: boolean
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission_L N H M H
      responses:
        '200':
          description: A successful response.
          schema: &ref_132
            type: object
            properties:
              commission:
                description: commission defines the commision the validator received.
                type: object
                properties: &ref_135
                  commission:
                    type: array
                    items: *ref_20
            title: |-
              QueryValidatorCommissionResponse is the response type for the
              Query/ValidatorCommission RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards_A B A O C
      responses:
        '200':
          description: A successful response.
          schema: &ref_133
            type: object
            properties:
              rewards: &ref_136
                type: object
                properties:
                  rewards:
                    type: array
                    items: *ref_20
                description: >-
                  ValidatorOutstandingRewards represents outstanding
                  (un-withdrawn) rewards

                  for a validator inexpensive to track, allows simple sanity
                  checks.
            description: >-
              QueryValidatorOutstandingRewardsResponse is the response type for
              the

              Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes_X 2 C 1 8
      responses:
        '200':
          description: A successful response.
          schema: &ref_134
            type: object
            properties:
              slashes:
                type: array
                items: &ref_137
                  type: object
                  properties:
                    validator_period:
                      type: string
                      format: uint64
                    fraction:
                      type: string
                  description: >-
                    ValidatorSlashEvent represents a validator slash event.

                    Height is implicit within the store key.

                    This is needed to calculate appropriate amount of staking
                    tokens

                    for delegations which are withdrawn after a slash has
                    occurred.
                description: slashes defines the slashes the validator received.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: |-
              QueryValidatorSlashesResponse is the response type for the
              Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: starting_height
          description: >-
            starting_height defines the optional starting height to query the
            slashes.
          in: query
          required: false
          type: string
          format: uint64
        - name: ending_height
          description: >-
            starting_height defines the optional ending height to query the
            slashes.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/tx/v1beta1/simulate:
    post:
      summary: Simulate simulates executing a transaction for estimating gas usage.
      operationId: Simulate_S U U 4 P
      responses:
        '200':
          description: A successful response.
          schema: &ref_159
            type: object
            properties:
              gas_info:
                description: gas_info is the information about gas used in the simulation.
                type: object
                properties: &ref_140
                  gas_wanted:
                    type: string
                    format: uint64
                    description: >-
                      GasWanted is the maximum units of work we allow this tx to
                      perform.
                  gas_used:
                    type: string
                    format: uint64
                    description: GasUsed is the amount of gas actually consumed.
              result:
                description: result is the result of the simulation.
                type: object
                properties: &ref_141
                  data:
                    type: string
                    format: byte
                    description: >-
                      Data is any data returned from message or handler
                      execution. It MUST be

                      length prefixed in order to separate data from multiple
                      message executions.

                      Deprecated. This field is still populated, but prefer
                      msg_response instead

                      because it also contains the Msg response typeURL.
                  log:
                    type: string
                    description: >-
                      Log contains the log information from message or handler
                      execution.
                  events:
                    type: array
                    items: &ref_23
                      type: object
                      properties:
                        type:
                          type: string
                        attributes:
                          type: array
                          items: &ref_162
                            type: object
                            properties:
                              key:
                                type: string
                                format: byte
                              value:
                                type: string
                                format: byte
                              index:
                                type: boolean
                            description: >-
                              EventAttribute is a single key-value pair,
                              associated with an event.
                      description: >-
                        Event allows application developers to attach additional
                        information to

                        ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx
                        and ResponseDeliverTx.

                        Later, transactions may be queried using these events.
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during message

                      or handler execution.
                  msg_responses:
                    type: array
                    items: *ref_5
                    description: >-
                      msg_responses contains the Msg handler responses type
                      packed in Anys.


                      Since: cosmos-sdk 0.46
            description: |-
              SimulateResponse is the response type for the
              Service.SimulateRPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: body
          in: body
          required: true
          schema: &ref_158
            type: object
            properties:
              tx:
                description: |-
                  tx is the transaction to simulate.
                  Deprecated. Send raw tx bytes instead.
                type: object
                properties: &ref_22
                  body:
                    title: body is the processable content of the transaction
                    type: object
                    properties: &ref_161
                      messages:
                        type: array
                        items: *ref_5
                        description: >-
                          messages is a list of messages to be executed. The
                          required signers of

                          those messages define the number and order of elements
                          in AuthInfo's

                          signer_infos and Tx's signatures. Each required signer
                          address is added to

                          the list only the first time it occurs.

                          By convention, the first required signer (usually from
                          the first message)

                          is referred to as the primary signer and pays the fee
                          for the whole

                          transaction.
                      memo:
                        type: string
                        description: >-
                          memo is any arbitrary note/comment to be added to the
                          transaction.

                          WARNING: in clients, any publicly exposed text should
                          not be called memo,

                          but should be called `note` instead (see
                          https://github.com/cosmos/cosmos-sdk/issues/9122).
                      timeout_height:
                        type: string
                        format: uint64
                        title: >-
                          timeout is the block height after which this
                          transaction will not

                          be processed by the chain
                      extension_options:
                        type: array
                        items: *ref_5
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, the transaction will be rejected
                      non_critical_extension_options:
                        type: array
                        items: *ref_5
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, they will be ignored
                    description: >-
                      TxBody is the body of a transaction that all signers sign
                      over.
                  auth_info:
                    title: >-
                      auth_info is the authorization related content of the
                      transaction,

                      specifically signers, signer modes and fee
                    type: object
                    properties: &ref_146
                      signer_infos:
                        type: array
                        items: &ref_157
                          type: object
                          properties:
                            public_key:
                              type: object
                              properties: *ref_1
                              description: >-
                                public_key is the public key of the signer. It
                                is optional for accounts

                                that already exist in state. If unset, the
                                verifier can use the required \

                                signer address for this position and lookup the
                                public key.
                            mode_info:
                              title: >-
                                mode_info describes the signing mode of the
                                signer and is a nested

                                structure to support nested multisig pubkey's
                              type: object
                              properties: &ref_21
                                single:
                                  title: single represents a single signer
                                  type: object
                                  properties: &ref_156
                                    mode:
                                      title: >-
                                        mode is the signing mode of the single
                                        signer
                                      type: string
                                      enum: &ref_145
                                        - SIGN_MODE_UNSPECIFIED
                                        - SIGN_MODE_DIRECT
                                        - SIGN_MODE_TEXTUAL
                                        - SIGN_MODE_DIRECT_AUX
                                        - SIGN_MODE_LEGACY_AMINO_JSON
                                        - SIGN_MODE_EIP_191
                                      default: SIGN_MODE_UNSPECIFIED
                                      description: >-
                                        SignMode represents a signing mode with
                                        its own security guarantees.


                                        This enum should be considered a
                                        registry of all known sign modes

                                        in the Cosmos ecosystem. Apps are not
                                        expected to support all known

                                        sign modes. Apps that would like to
                                        support custom  sign modes are

                                        encouraged to open a small PR against
                                        this file to add a new case

                                        to this SignMode enum describing their
                                        sign mode so that different

                                        apps have a consistent version of this
                                        enum.

                                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                        rejected.
                                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                        verified with raw bytes from Tx.
                                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                        human-readable textual representation on
                                        top of the binary representation

                                        from SIGN_MODE_DIRECT. It is currently
                                        not supported.
                                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                        SignDocDirectAux. As opposed to
                                        SIGN_MODE_DIRECT, this sign mode does
                                        not

                                        require signers signing over other
                                        signers' `signer_info`. It also allows

                                        for adding Tips in transactions.


                                        Since: cosmos-sdk 0.46
                                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                        Amino JSON and will be removed in the
                                        future.
                                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                        SDK. Ref:
                                        https://eips.ethereum.org/EIPS/eip-191


                                        Currently, SIGN_MODE_EIP_191 is
                                        registered as a SignMode enum variant,

                                        but is not implemented on the SDK by
                                        default. To enable EIP-191, you need

                                        to pass a custom `TxConfig` that has an
                                        implementation of

                                        `SignModeHandler` for EIP-191. The SDK
                                        may decide to fully support

                                        EIP-191 in the future.


                                        Since: cosmos-sdk 0.45.2
                                multi:
                                  title: multi represents a nested multisig signer
                                  type: object
                                  properties: &ref_155
                                    bitarray:
                                      title: >-
                                        bitarray specifies which keys within the
                                        multisig are signing
                                      type: object
                                      properties: &ref_144
                                        extra_bits_stored:
                                          type: integer
                                          format: int64
                                        elems:
                                          type: string
                                          format: byte
                                      description: >-
                                        CompactBitArray is an implementation of
                                        a space efficient bit array.

                                        This is used to ensure that the encoded
                                        data takes up a minimal amount of

                                        space after proto encoding.

                                        This is not thread safe, and is not
                                        intended for concurrent usage.
                                    mode_infos:
                                      type: array
                                      items: &ref_154
                                        type: object
                                        properties: *ref_21
                                        description: >-
                                          ModeInfo describes the signing mode of a
                                          single or nested multisig signer.
                                      title: >-
                                        mode_infos is the corresponding modes of
                                        the signers of the multisig

                                        which could include nested multisig
                                        public keys
                              description: >-
                                ModeInfo describes the signing mode of a single
                                or nested multisig signer.
                            sequence:
                              type: string
                              format: uint64
                              description: >-
                                sequence is the sequence of the account, which
                                describes the

                                number of committed transactions signed by a
                                given address. It is used to

                                prevent replay attacks.
                          description: >-
                            SignerInfo describes the public key and signing mode
                            of a single top-level

                            signer.
                        description: >-
                          signer_infos defines the signing modes for the
                          required signers. The number

                          and order of elements must match the required signers
                          from TxBody's

                          messages. The first element is the primary signer and
                          the one which pays

                          the fee.
                      fee:
                        description: >-
                          Fee is the fee and gas limit for the transaction. The
                          first signer is the

                          primary signer and the one which pays the fee. The fee
                          can be calculated

                          based on the cost of evaluating the body and doing
                          signature verification

                          of the signers. This can be estimated via simulation.
                        type: object
                        properties: &ref_150
                          amount:
                            type: array
                            items: *ref_19
                            title: amount is the amount of coins to be paid as a fee
                          gas_limit:
                            type: string
                            format: uint64
                            title: >-
                              gas_limit is the maximum gas that can be used in
                              transaction processing

                              before an out of gas error occurs
                          payer:
                            type: string
                            description: >-
                              if unset, the first signer is responsible for
                              paying the fees. If set, the specified account
                              must pay the fees.

                              the payer must be a tx signer (and thus have
                              signed this field in AuthInfo).

                              setting this field does *not* change the ordering
                              of required signers for the transaction.
                          granter:
                            type: string
                            title: >-
                              if set, the fee payer (either the first signer or
                              the value of the payer field) requests that a fee
                              grant be used

                              to pay fees instead of the fee payer's own
                              balance. If an appropriate fee grant does not
                              exist or the chain does

                              not support fee grants, this will fail
                      tip:
                        description: >-
                          Tip is the optional tip used for transactions fees
                          paid in another denom.


                          This field is ignored if the chain didn't enable tips,
                          i.e. didn't add the

                          `TipDecorator` in its posthandler.


                          Since: cosmos-sdk 0.46
                        type: object
                        properties: &ref_160
                          amount:
                            type: array
                            items: *ref_19
                            title: amount is the amount of the tip
                          tipper:
                            type: string
                            title: >-
                              tipper is the address of the account paying for
                              the tip
                    description: >-
                      AuthInfo describes the fee and signer modes that are used
                      to sign a

                      transaction.
                  signatures:
                    type: array
                    items:
                      type: string
                      format: byte
                    description: >-
                      signatures is a list of signatures that matches the length
                      and order of

                      AuthInfo's signer_infos to allow connecting signature meta
                      information like

                      public key and signing mode by position.
              tx_bytes:
                type: string
                format: byte
                description: |-
                  tx_bytes is the raw transaction.

                  Since: cosmos-sdk 0.43
            description: |-
              SimulateRequest is the request type for the Service.Simulate
              RPC method.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs:
    get:
      summary: GetTxsEvent fetches txs by event.
      operationId: GetTxsEvent_X 9 A B 1
      responses:
        '200':
          description: A successful response.
          schema: &ref_153
            type: object
            properties:
              txs:
                type: array
                items: &ref_25
                  type: object
                  properties: *ref_22
                  description: Tx is the standard type used for broadcasting transactions.
                description: txs is the list of queried transactions.
              tx_responses:
                type: array
                items: &ref_143
                  type: object
                  properties: &ref_24
                    height:
                      type: string
                      format: int64
                      title: The block height
                    txhash:
                      type: string
                      description: The transaction hash.
                    codespace:
                      type: string
                      title: Namespace for the Code
                    code:
                      type: integer
                      format: int64
                      description: Response code.
                    data:
                      type: string
                      description: Result bytes, if any.
                    raw_log:
                      type: string
                      description: >-
                        The output of the application's logger (raw string). May
                        be

                        non-deterministic.
                    logs:
                      type: array
                      items: &ref_138
                        type: object
                        properties:
                          msg_index:
                            type: integer
                            format: int64
                          log:
                            type: string
                          events:
                            type: array
                            items: &ref_142
                              type: object
                              properties:
                                type:
                                  type: string
                                attributes:
                                  type: array
                                  items: &ref_139
                                    type: object
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    description: >-
                                      Attribute defines an attribute wrapper
                                      where the key and value are

                                      strings instead of raw bytes.
                              description: >-
                                StringEvent defines en Event object wrapper
                                where all the attributes

                                contain key/value pairs that are strings instead
                                of raw bytes.
                            description: >-
                              Events contains a slice of Event objects that were
                              emitted during some

                              execution.
                        description: >-
                          ABCIMessageLog defines a structure containing an
                          indexed tx ABCI message log.
                      description: >-
                        The output of the application's logger (typed). May be
                        non-deterministic.
                    info:
                      type: string
                      description: Additional information. May be non-deterministic.
                    gas_wanted:
                      type: string
                      format: int64
                      description: Amount of gas requested for transaction.
                    gas_used:
                      type: string
                      format: int64
                      description: Amount of gas consumed by transaction.
                    tx:
                      type: object
                      properties: *ref_1
                      description: The request transaction bytes.
                    timestamp:
                      type: string
                      description: >-
                        Time of the previous block. For heights > 1, it's the
                        weighted median of

                        the timestamps of the valid votes in the
                        block.LastCommit. For height == 1,

                        it's genesis time.
                    events:
                      type: array
                      items: *ref_23
                      description: >-
                        Events defines all the events emitted by processing a
                        transaction. Note,

                        these events include those emitted by processing all the
                        messages and those

                        emitted from the ante. Whereas Logs contains the events,
                        with

                        additional metadata, emitted only by processing the
                        messages.


                        Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                  description: >-
                    TxResponse defines a structure containing relevant tx data
                    and metadata. The

                    tags are stringified and the log is JSON decoded.
                description: tx_responses is the list of queried TxResponses.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
              total:
                type: string
                format: uint64
                title: total is total number of results available
            description: >-
              GetTxsEventResponse is the response type for the
              Service.TxsByEvents

              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: events
          description: events is the list of transaction event type.
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
        - name: order_by
          description: |2-
             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          in: query
          required: false
          type: string
          enum:
            - ORDER_BY_UNSPECIFIED
            - ORDER_BY_ASC
            - ORDER_BY_DESC
          default: ORDER_BY_UNSPECIFIED
        - name: page
          description: >-
            page is the page number to query, starts at 1. If not provided, will
            default to first page.
          in: query
          required: false
          type: string
          format: uint64
        - name: limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Service
    post:
      summary: BroadcastTx broadcast transaction.
      operationId: BroadcastTx_S V U G J
      responses:
        '200':
          description: A successful response.
          schema: &ref_149
            type: object
            properties:
              tx_response:
                type: object
                properties: *ref_24
                description: >-
                  TxResponse defines a structure containing relevant tx data and
                  metadata. The

                  tags are stringified and the log is JSON decoded.
            description: |-
              BroadcastTxResponse is the response type for the
              Service.BroadcastTx method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: body
          in: body
          required: true
          schema: &ref_148
            type: object
            properties:
              tx_bytes:
                type: string
                format: byte
                description: tx_bytes is the raw transaction.
              mode: &ref_147
                type: string
                enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
                default: BROADCAST_MODE_UNSPECIFIED
                description: >-
                  BroadcastMode specifies the broadcast mode for the
                  TxService.Broadcast RPC method.

                   - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                   - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for
                  the tx to be committed in a block.
                   - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for
                  a CheckTx execution response only.
                   - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns
                  immediately.
            description: >-
              BroadcastTxRequest is the request type for the
              Service.BroadcastTxRequest

              RPC method.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      summary: GetBlockWithTxs fetches a block with decoded txs.
      description: 'Since: cosmos-sdk 0.45.2'
      operationId: GetBlockWithTxs_K F 4 Z Q
      responses:
        '200':
          description: A successful response.
          schema: &ref_151
            type: object
            properties:
              txs:
                type: array
                items: *ref_25
                description: txs are the transactions in the block.
              block_id: &ref_27
                type: object
                properties: &ref_26
                  hash:
                    type: string
                    format: byte
                  part_set_header: &ref_172
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
                title: BlockID
              block: &ref_164
                type: object
                properties: &ref_41
                  header: &ref_29
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties: &ref_42
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties: *ref_26
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        format: byte
                    description: Header defines the structure of a block header.
                  data: &ref_43
                    type: object
                    properties:
                      txs:
                        type: array
                        items:
                          type: string
                          format: byte
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                    title: >-
                      Data contains the set of transactions included in the
                      block
                  evidence: &ref_169
                    type: object
                    properties:
                      evidence:
                        type: array
                        items: &ref_168
                          type: object
                          properties:
                            duplicate_vote_evidence: &ref_167
                              type: object
                              properties:
                                vote_a: &ref_28
                                  type: object
                                  properties:
                                    type: &ref_174
                                      type: string
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                    height:
                                      type: string
                                      format: int64
                                    round:
                                      type: integer
                                      format: int32
                                    block_id: *ref_27
                                    timestamp:
                                      type: string
                                      format: date-time
                                    validator_address:
                                      type: string
                                      format: byte
                                    validator_index:
                                      type: integer
                                      format: int32
                                    signature:
                                      type: string
                                      format: byte
                                  description: >-
                                    Vote represents a prevote, precommit, or
                                    commit vote from validators for

                                    consensus.
                                vote_b: *ref_28
                                total_voting_power:
                                  type: string
                                  format: int64
                                validator_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                            light_client_attack_evidence: &ref_171
                              type: object
                              properties:
                                conflicting_block: &ref_170
                                  type: object
                                  properties:
                                    signed_header: &ref_173
                                      type: object
                                      properties:
                                        header: *ref_29
                                        commit: &ref_31
                                          type: object
                                          properties:
                                            height:
                                              type: string
                                              format: int64
                                            round:
                                              type: integer
                                              format: int32
                                            block_id: *ref_27
                                            signatures:
                                              type: array
                                              items: &ref_166
                                                type: object
                                                properties:
                                                  block_id_flag: &ref_165
                                                    type: string
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    title: >-
                                                      BlockIdFlag indicates which BlcokID the
                                                      signature is for
                                                  validator_address:
                                                    type: string
                                                    format: byte
                                                  timestamp:
                                                    type: string
                                                    format: date-time
                                                  signature:
                                                    type: string
                                                    format: byte
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                    validator_set: &ref_175
                                      type: object
                                      properties:
                                        validators:
                                          type: array
                                          items: &ref_30
                                            type: object
                                            properties:
                                              address:
                                                type: string
                                                format: byte
                                              pub_key: &ref_163
                                                type: object
                                                properties:
                                                  ed25519:
                                                    type: string
                                                    format: byte
                                                  secp256k1:
                                                    type: string
                                                    format: byte
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Validators
                                              voting_power:
                                                type: string
                                                format: int64
                                              proposer_priority:
                                                type: string
                                                format: int64
                                        proposer: *ref_30
                                        total_voting_power:
                                          type: string
                                          format: int64
                                common_height:
                                  type: string
                                  format: int64
                                byzantine_validators:
                                  type: array
                                  items: *ref_30
                                total_voting_power:
                                  type: string
                                  format: int64
                                timestamp:
                                  type: string
                                  format: date-time
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                  last_commit: *ref_31
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              GetBlockWithTxsResponse is the response type for the
              Service.GetBlockWithTxs method.


              Since: cosmos-sdk 0.45.2
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: height
          description: height is the height of the block to query.
          in: path
          required: true
          type: string
          format: int64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      summary: GetTx fetches a tx by hash.
      operationId: GetTx_F B H D U
      responses:
        '200':
          description: A successful response.
          schema: &ref_152
            type: object
            properties:
              tx:
                type: object
                properties: *ref_22
                description: Tx is the standard type used for broadcasting transactions.
              tx_response:
                type: object
                properties: *ref_24
                description: >-
                  TxResponse defines a structure containing relevant tx data and
                  metadata. The

                  tags are stringified and the log is JSON decoded.
            description: GetTxResponse is the response type for the Service.GetTx method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: hash
          description: hash is the tx hash to query, encoded as a hex string.
          in: path
          required: true
          type: string
      tags:
        - Service
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      summary: >-
        DelegatorDelegations queries all delegations of a given delegator
        address.
      operationId: DelegatorDelegations_D H Y 5 D
      responses:
        '200':
          description: A successful response.
          schema: &ref_185
            type: object
            properties:
              delegation_responses:
                type: array
                items: &ref_35
                  type: object
                  properties: &ref_36
                    delegation: &ref_179
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: >-
                            delegator_address is the bech32-encoded address of
                            the delegator.
                        validator_address:
                          type: string
                          description: >-
                            validator_address is the bech32-encoded address of
                            the validator.
                        shares:
                          type: string
                          description: shares define the delegation shares received.
                      description: >-
                        Delegation represents the bond with tokens held by an
                        account. It is

                        owned by one delegator, and is associated with the
                        voting power of one

                        validator.
                    balance: *ref_19
                  description: >-
                    DelegationResponse is equivalent to Delegation except that
                    it contains a

                    balance in addition to shares which is more suitable for
                    client responses.
                description: >-
                  delegation_responses defines all the delegations' info of a
                  delegator.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: |-
              QueryDelegatorDelegationsResponse is response type for the
              Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      summary: Redelegations queries redelegations of given address.
      operationId: Redelegations_X T 2 P A
      responses:
        '200':
          description: A successful response.
          schema: &ref_192
            type: object
            properties:
              redelegation_responses:
                type: array
                items: &ref_200
                  type: object
                  properties:
                    redelegation: &ref_198
                      type: object
                      properties:
                        delegator_address:
                          type: string
                          description: >-
                            delegator_address is the bech32-encoded address of
                            the delegator.
                        validator_src_address:
                          type: string
                          description: >-
                            validator_src_address is the validator redelegation
                            source operator address.
                        validator_dst_address:
                          type: string
                          description: >-
                            validator_dst_address is the validator redelegation
                            destination operator address.
                        entries:
                          type: array
                          items: &ref_32
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                                description: >-
                                  creation_height  defines the height which the
                                  redelegation took place.
                              completion_time:
                                type: string
                                format: date-time
                                description: >-
                                  completion_time defines the unix time for
                                  redelegation completion.
                              initial_balance:
                                type: string
                                description: >-
                                  initial_balance defines the initial balance
                                  when redelegation started.
                              shares_dst:
                                type: string
                                description: >-
                                  shares_dst is the amount of
                                  destination-validator shares created by
                                  redelegation.
                            description: >-
                              RedelegationEntry defines a redelegation object
                              with relevant metadata.
                          description: entries are the redelegation entries.
                      description: >-
                        Redelegation contains the list of a particular
                        delegator's redelegating bonds

                        from a particular source validator to a particular
                        destination validator.
                    entries:
                      type: array
                      items: &ref_199
                        type: object
                        properties:
                          redelegation_entry: *ref_32
                          balance:
                            type: string
                        description: >-
                          RedelegationEntryResponse is equivalent to a
                          RedelegationEntry except that it

                          contains a balance in addition to shares which is more
                          suitable for client

                          responses.
                  description: >-
                    RedelegationResponse is equivalent to a Redelegation except
                    that its entries

                    contain a balance in addition to shares which is more
                    suitable for client

                    responses.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryRedelegationsResponse is response type for the
              Query/Redelegations RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: src_validator_addr
          description: src_validator_addr defines the validator address to redelegate from.
          in: query
          required: false
          type: string
        - name: dst_validator_addr
          description: dst_validator_addr defines the validator address to redelegate to.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      summary: >-
        DelegatorUnbondingDelegations queries all unbonding delegations of a
        given

        delegator address.
      operationId: DelegatorUnbondingDelegations_U K 9 Q Z
      responses:
        '200':
          description: A successful response.
          schema: &ref_186
            type: object
            properties:
              unbonding_responses:
                type: array
                items: &ref_38
                  type: object
                  properties: &ref_37
                    delegator_address:
                      type: string
                      description: >-
                        delegator_address is the bech32-encoded address of the
                        delegator.
                    validator_address:
                      type: string
                      description: >-
                        validator_address is the bech32-encoded address of the
                        validator.
                    entries:
                      type: array
                      items: &ref_201
                        type: object
                        properties:
                          creation_height:
                            type: string
                            format: int64
                            description: >-
                              creation_height is the height which the unbonding
                              took place.
                          completion_time:
                            type: string
                            format: date-time
                            description: >-
                              completion_time is the unix time for unbonding
                              completion.
                          initial_balance:
                            type: string
                            description: >-
                              initial_balance defines the tokens initially
                              scheduled to receive at completion.
                          balance:
                            type: string
                            description: >-
                              balance defines the tokens to receive at
                              completion.
                        description: >-
                          UnbondingDelegationEntry defines an unbonding object
                          with relevant metadata.
                      description: entries are the unbonding delegation entries.
                  description: >-
                    UnbondingDelegation stores all of a single delegator's
                    unbonding bonds

                    for a single validator in an time-ordered list.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryUnbondingDelegatorDelegationsResponse is response type for
              the

              Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      operationId: DelegatorValidators_O O Q I B
      responses:
        '200':
          description: A successful response.
          schema: &ref_188
            type: object
            properties:
              validators:
                type: array
                items: &ref_34
                  type: object
                  properties: &ref_33
                    operator_address:
                      type: string
                      description: >-
                        operator_address defines the address of the validator's
                        operator; bech encoded in JSON.
                    consensus_pubkey:
                      type: object
                      properties: *ref_1
                      description: >-
                        consensus_pubkey is the consensus public key of the
                        validator, as a Protobuf Any.
                    jailed:
                      type: boolean
                      description: >-
                        jailed defined whether the validator has been jailed
                        from bonded status or not.
                    status:
                      description: >-
                        status is the validator status
                        (bonded/unbonding/unbonded).
                      type: string
                      enum: &ref_176
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      default: BOND_STATUS_UNSPECIFIED
                    tokens:
                      type: string
                      description: >-
                        tokens define the delegated tokens (incl.
                        self-delegation).
                    delegator_shares:
                      type: string
                      description: >-
                        delegator_shares defines total shares issued to a
                        validator's delegators.
                    description:
                      description: >-
                        description defines the description terms for the
                        validator.
                      type: object
                      properties: &ref_180
                        moniker:
                          type: string
                          description: >-
                            moniker defines a human-readable name for the
                            validator.
                        identity:
                          type: string
                          description: >-
                            identity defines an optional identity signature (ex.
                            UPort or Keybase).
                        website:
                          type: string
                          description: website defines an optional website link.
                        security_contact:
                          type: string
                          description: >-
                            security_contact defines an optional email for
                            security contact.
                        details:
                          type: string
                          description: details define other optional details.
                    unbonding_height:
                      type: string
                      format: int64
                      description: >-
                        unbonding_height defines, if unbonding, the height at
                        which this validator has begun unbonding.
                    unbonding_time:
                      type: string
                      format: date-time
                      description: >-
                        unbonding_time defines, if unbonding, the min time for
                        the validator to complete unbonding.
                    commission:
                      description: commission defines the commission parameters.
                      type: object
                      properties: &ref_177
                        commission_rates:
                          description: >-
                            commission_rates defines the initial commission
                            rates to be used for creating a validator.
                          type: object
                          properties: &ref_178
                            rate:
                              type: string
                              description: >-
                                rate is the commission rate charged to
                                delegators, as a fraction.
                            max_rate:
                              type: string
                              description: >-
                                max_rate defines the maximum commission rate
                                which validator can ever charge, as a fraction.
                            max_change_rate:
                              type: string
                              description: >-
                                max_change_rate defines the maximum daily
                                increase of the validator commission, as a
                                fraction.
                        update_time:
                          type: string
                          format: date-time
                          description: >-
                            update_time is the last time the commission rate was
                            changed.
                    min_self_delegation:
                      type: string
                      description: >-
                        min_self_delegation is the validator's self declared
                        minimum self delegation.


                        Since: cosmos-sdk 0.46
                  description: >-
                    Validator defines a validator, together with the total
                    amount of the

                    Validator's bond shares and their exchange rate to coins.
                    Slashing results in

                    a decrease in the exchange rate, allowing correct
                    calculation of future

                    undelegations without iterating over delegators. When coins
                    are delegated to

                    this validator, the validator is credited with a delegation
                    whose number of

                    bond shares is based on the amount of coins delegated
                    divided by the current

                    exchange rate. Voting power can be calculated as total
                    bonded shares

                    multiplied by exchange rate.
                description: validators defines the validators' info of a delegator.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: |-
              QueryDelegatorValidatorsResponse is response type for the
              Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator_0 D O C U
      responses:
        '200':
          description: A successful response.
          schema: &ref_187
            type: object
            properties:
              validator:
                type: object
                properties: *ref_33
                description: >-
                  Validator defines a validator, together with the total amount
                  of the

                  Validator's bond shares and their exchange rate to coins.
                  Slashing results in

                  a decrease in the exchange rate, allowing correct calculation
                  of future

                  undelegations without iterating over delegators. When coins
                  are delegated to

                  this validator, the validator is credited with a delegation
                  whose number of

                  bond shares is based on the amount of coins delegated divided
                  by the current

                  exchange rate. Voting power can be calculated as total bonded
                  shares

                  multiplied by exchange rate.
            description: |-
              QueryDelegatorValidatorResponse response type for the
              Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo_0 W G T 0
      responses:
        '200':
          description: A successful response.
          schema: &ref_189
            type: object
            properties:
              hist:
                description: hist defines the historical info at the given height.
                type: object
                properties: &ref_181
                  header: *ref_29
                  valset:
                    type: array
                    items: *ref_34
            description: >-
              QueryHistoricalInfoResponse is response type for the
              Query/HistoricalInfo RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: height
          description: height defines at which height to query the historical info.
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /cosmos/staking/v1beta1/params:
    get:
      summary: Parameters queries the staking parameters.
      operationId: Params_U H Z M F
      responses:
        '200':
          description: A successful response.
          schema: &ref_190
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties: &ref_182
                  unbonding_time:
                    type: string
                    description: unbonding_time is the time duration of unbonding.
                  max_validators:
                    type: integer
                    format: int64
                    description: max_validators is the maximum number of validators.
                  max_entries:
                    type: integer
                    format: int64
                    description: >-
                      max_entries is the max entries for either unbonding
                      delegation or redelegation (per pair/trio).
                  historical_entries:
                    type: integer
                    format: int64
                    description: >-
                      historical_entries is the number of historical entries to
                      persist.
                  bond_denom:
                    type: string
                    description: bond_denom defines the bondable coin denomination.
                  min_commission_rate:
                    type: string
                    title: >-
                      min_commission_rate is the chain-wide minimum commission
                      rate that a validator can charge their delegators
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/staking/v1beta1/pool:
    get:
      summary: Pool queries the pool info.
      operationId: Pool_J Z M X 1
      responses:
        '200':
          description: A successful response.
          schema: &ref_191
            type: object
            properties:
              pool:
                description: pool defines the pool info.
                type: object
                properties: &ref_183
                  not_bonded_tokens:
                    type: string
                  bonded_tokens:
                    type: string
            description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/staking/v1beta1/validators:
    get:
      summary: Validators queries all validators that match the given status.
      operationId: Validators_P U P X K
      responses:
        '200':
          description: A successful response.
          schema: &ref_197
            type: object
            properties:
              validators:
                type: array
                items: *ref_34
                description: validators contains all the queried validators.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: >-
              QueryValidatorsResponse is response type for the Query/Validators
              RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: status
          description: status enables to query for validators matching a given status.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      summary: Validator queries validator info for given validator address.
      operationId: Validator_O 7 A F D
      responses:
        '200':
          description: A successful response.
          schema: &ref_195
            type: object
            properties:
              validator:
                type: object
                properties: *ref_33
                description: >-
                  Validator defines a validator, together with the total amount
                  of the

                  Validator's bond shares and their exchange rate to coins.
                  Slashing results in

                  a decrease in the exchange rate, allowing correct calculation
                  of future

                  undelegations without iterating over delegators. When coins
                  are delegated to

                  this validator, the validator is credited with a delegation
                  whose number of

                  bond shares is based on the amount of coins delegated divided
                  by the current

                  exchange rate. Voting power can be calculated as total bonded
                  shares

                  multiplied by exchange rate.
            title: >-
              QueryValidatorResponse is response type for the Query/Validator
              RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      summary: ValidatorDelegations queries delegate info for given validator.
      operationId: ValidatorDelegations_H L U C X
      responses:
        '200':
          description: A successful response.
          schema: &ref_194
            type: object
            properties:
              delegation_responses:
                type: array
                items: *ref_35
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            title: |-
              QueryValidatorDelegationsResponse is response type for the
              Query/ValidatorDelegations RPC method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation_W L G Z 9
      responses:
        '200':
          description: A successful response.
          schema: &ref_184
            type: object
            properties:
              delegation_response:
                type: object
                properties: *ref_36
                description: >-
                  DelegationResponse is equivalent to Delegation except that it
                  contains a

                  balance in addition to shares which is more suitable for
                  client responses.
            description: >-
              QueryDelegationResponse is response type for the Query/Delegation
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation_Q 7 0 X V
      responses:
        '200':
          description: A successful response.
          schema: &ref_193
            type: object
            properties:
              unbond:
                type: object
                properties: *ref_37
                description: >-
                  UnbondingDelegation stores all of a single delegator's
                  unbonding bonds

                  for a single validator in an time-ordered list.
            description: >-
              QueryDelegationResponse is response type for the
              Query/UnbondingDelegation

              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      summary: >-
        ValidatorUnbondingDelegations queries unbonding delegations of a
        validator.
      operationId: ValidatorUnbondingDelegations_V 7 E Y 9
      responses:
        '200':
          description: A successful response.
          schema: &ref_196
            type: object
            properties:
              unbonding_responses:
                type: array
                items: *ref_38
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryValidatorUnbondingDelegationsResponse is response type for
              the

              Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/params/v1beta1/params:
    get:
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      operationId: Params_1 I C 8 N
      responses:
        '200':
          description: A successful response.
          schema: &ref_203
            type: object
            properties:
              param:
                description: param defines the queried parameter.
                type: object
                properties: &ref_202
                  subspace:
                    type: string
                  key:
                    type: string
                  value:
                    type: string
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: subspace
          description: subspace defines the module to query the parameter for.
          in: query
          required: false
          type: string
        - name: key
          description: key defines the key of the parameter in the subspace.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/params/v1beta1/subspaces:
    get:
      summary: >-
        Subspaces queries for all registered subspaces and all keys for a
        subspace.
      description: 'Since: cosmos-sdk 0.46'
      operationId: Subspaces_O A T V 8
      responses:
        '200':
          description: A successful response.
          schema: &ref_204
            type: object
            properties:
              subspaces:
                type: array
                items: &ref_205
                  type: object
                  properties:
                    subspace:
                      type: string
                    keys:
                      type: array
                      items:
                        type: string
                  description: >-
                    Subspace defines a parameter subspace name and all the keys
                    that exist for

                    the subspace.


                    Since: cosmos-sdk 0.46
            description: >-
              QuerySubspacesResponse defines the response types for querying for
              all

              registered subspaces and all keys for a subspace.


              Since: cosmos-sdk 0.46
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/authz/v1beta1/grants:
    get:
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      operationId: Grants_Z A I 1 S
      responses:
        '200':
          description: A successful response.
          schema: &ref_209
            type: object
            properties:
              grants:
                type: array
                items: &ref_206
                  type: object
                  properties:
                    authorization: *ref_5
                    expiration:
                      type: string
                      format: date-time
                      title: >-
                        time when the grant will expire and will be pruned. If
                        null, then the grant

                        doesn't have a time expiration (other conditions  in
                        `authorization`

                        may apply to invalidate the grant)
                  description: |-
                    Grant gives permissions to execute
                    the provide method with expiration time.
                description: >-
                  authorizations is a list of grants granted for grantee by
                  granter.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGrantsResponse is the response type for the
              Query/Authorizations RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: granter
          in: query
          required: false
          type: string
        - name: grantee
          in: query
          required: false
          type: string
        - name: msg_type_url
          description: >-
            Optional, msg_type_url, when set, will query only grants matching
            given msg type.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants_3 O Q I X
      responses:
        '200':
          description: A successful response.
          schema: &ref_207
            type: object
            properties:
              grants:
                type: array
                items: &ref_39
                  type: object
                  properties:
                    granter:
                      type: string
                    grantee:
                      type: string
                    authorization: *ref_5
                    expiration:
                      type: string
                      format: date-time
                  title: >-
                    GrantAuthorization extends a grant with both the addresses
                    of the grantee and granter.

                    It is used in genesis.proto and query.proto
                description: grants is a list of grants granted to the grantee.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGranteeGrantsResponse is the response type for the
              Query/GranteeGrants RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: grantee
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants_6 1 H M R
      responses:
        '200':
          description: A successful response.
          schema: &ref_208
            type: object
            properties:
              grants:
                type: array
                items: *ref_39
                description: grants is a list of grants granted by the granter.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryGranterGrantsResponse is the response type for the
              Query/GranterGrants RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: granter
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/slashing/v1beta1/params:
    get:
      summary: Params queries the parameters of slashing module
      operationId: Params_U I Q F 7
      responses:
        '200':
          description: A successful response.
          schema: &ref_211
            type: object
            properties:
              params: &ref_210
                type: object
                properties:
                  signed_blocks_window:
                    type: string
                    format: int64
                  min_signed_per_window:
                    type: string
                    format: byte
                  downtime_jail_duration:
                    type: string
                  slash_fraction_double_sign:
                    type: string
                    format: byte
                  slash_fraction_downtime:
                    type: string
                    format: byte
                description: >-
                  Params represents the parameters used for by the slashing
                  module.
            title: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      summary: SigningInfos queries signing info of all validators
      operationId: SigningInfos_K 5 5 9 Z
      responses:
        '200':
          description: A successful response.
          schema: &ref_213
            type: object
            properties:
              info:
                type: array
                items: &ref_214
                  type: object
                  properties: &ref_40
                    address:
                      type: string
                    start_height:
                      type: string
                      format: int64
                      title: >-
                        Height at which validator was first a candidate OR was
                        unjailed
                    index_offset:
                      type: string
                      format: int64
                      description: >-
                        Index which is incremented each time the validator was a
                        bonded

                        in a block and may have signed a precommit or not. This
                        in conjunction with the

                        `SignedBlocksWindow` param determines the index in the
                        `MissedBlocksBitArray`.
                    jailed_until:
                      type: string
                      format: date-time
                      description: >-
                        Timestamp until which the validator is jailed due to
                        liveness downtime.
                    tombstoned:
                      type: boolean
                      description: >-
                        Whether or not a validator has been tombstoned (killed
                        out of validator set). It is set

                        once the validator commits an equivocation or for any
                        other configured misbehiavor.
                    missed_blocks_counter:
                      type: string
                      format: int64
                      description: >-
                        A counter kept to avoid unnecessary array reads.

                        Note that `Sum(MissedBlocksBitArray)` always equals
                        `MissedBlocksCounter`.
                  description: >-
                    ValidatorSigningInfo defines a validator's signing info for
                    monitoring their

                    liveness activity.
                title: info is the signing info of all validators
              pagination: *ref_7
            title: >-
              QuerySigningInfosResponse is the response type for the
              Query/SigningInfos RPC

              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      summary: SigningInfo queries the signing info of given cons address
      operationId: SigningInfo_H K 5 F 3
      responses:
        '200':
          description: A successful response.
          schema: &ref_212
            type: object
            properties:
              val_signing_info:
                type: object
                properties: *ref_40
                description: >-
                  ValidatorSigningInfo defines a validator's signing info for
                  monitoring their

                  liveness activity.
                title: >-
                  val_signing_info is the signing info of requested val cons
                  address
            title: >-
              QuerySigningInfoResponse is the response type for the
              Query/SigningInfo RPC

              method
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: cons_address
          description: cons_address is the address to query signing info of
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      summary: >-
        ABCIQuery defines a query handler that supports ABCI queries directly to

        the application, bypassing Tendermint completely. The ABCI query must

        contain a valid and supported path, including app, custom, p2p, and
        store.
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery_N A 2 1 A
      responses:
        '200':
          description: A successful response.
          schema: &ref_215
            type: object
            properties:
              code:
                type: integer
                format: int64
              log:
                type: string
              info:
                type: string
              index:
                type: string
                format: int64
              key:
                type: string
                format: byte
              value:
                type: string
                format: byte
              proof_ops: &ref_225
                type: object
                properties:
                  ops:
                    type: array
                    items: &ref_224
                      type: object
                      properties:
                        type:
                          type: string
                        key:
                          type: string
                          format: byte
                        data:
                          type: string
                          format: byte
                      description: >-
                        ProofOp defines an operation used for calculating Merkle
                        root. The data could

                        be arbitrary format, providing nessecary data for
                        example neighbouring node

                        hash.


                        Note: This type is a duplicate of the ProofOp proto type
                        defined in

                        Tendermint.
                description: >-
                  ProofOps is Merkle proof defined by the list of ProofOps.


                  Note: This type is a duplicate of the ProofOps proto type
                  defined in

                  Tendermint.
              height:
                type: string
                format: int64
              codespace:
                type: string
            description: >-
              ABCIQueryResponse defines the response structure for the ABCIQuery
              gRPC

              query.


              Note: This type is a duplicate of the ResponseQuery proto type
              defined in

              Tendermint.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: data
          in: query
          required: false
          type: string
          format: byte
        - name: path
          in: query
          required: false
          type: string
        - name: height
          in: query
          required: false
          type: string
          format: int64
        - name: prove
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      summary: GetLatestBlock returns the latest block.
      operationId: GetLatestBlock_I 3 U A O
      responses:
        '200':
          description: A successful response.
          schema: &ref_217
            type: object
            properties:
              block_id: *ref_27
              block:
                type: object
                properties: *ref_41
                title: 'Deprecated: please use `sdk_block` instead'
              sdk_block:
                title: 'Since: cosmos-sdk 0.47'
                type: object
                properties: &ref_44
                  header: &ref_222
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties: *ref_42
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        type: object
                        properties: *ref_26
                        title: BlockID
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        description: >-
                          proposer_address is the original block proposer
                          address, formatted as a Bech32 string.

                          In Tendermint, this type is `bytes`, but in the SDK,
                          we convert it to a Bech32 string

                          for better UX.
                    description: Header defines the structure of a Tendermint block header.
                  data: *ref_43
                  last_commit: *ref_31
                description: >-
                  Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.
            description: >-
              GetLatestBlockResponse is the response type for the
              Query/GetLatestBlock RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      summary: GetBlockByHeight queries block for given height.
      operationId: GetBlockByHeight_O L H P V
      responses:
        '200':
          description: A successful response.
          schema: &ref_216
            type: object
            properties:
              block_id: *ref_27
              block:
                type: object
                properties: *ref_41
                title: 'Deprecated: please use `sdk_block` instead'
              sdk_block:
                title: 'Since: cosmos-sdk 0.47'
                type: object
                properties: *ref_44
                description: >-
                  Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.
            description: >-
              GetBlockByHeightResponse is the response type for the
              Query/GetBlockByHeight

              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: height
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      summary: GetNodeInfo queries the current node info.
      operationId: GetNodeInfo_R R O N U
      responses:
        '200':
          description: A successful response.
          schema: &ref_219
            type: object
            properties:
              default_node_info: &ref_227
                type: object
                properties:
                  protocol_version: &ref_229
                    type: object
                    properties:
                      p2p:
                        type: string
                        format: uint64
                      block:
                        type: string
                        format: uint64
                      app:
                        type: string
                        format: uint64
                  default_node_id:
                    type: string
                  listen_addr:
                    type: string
                  network:
                    type: string
                  version:
                    type: string
                  channels:
                    type: string
                    format: byte
                  moniker:
                    type: string
                  other: &ref_228
                    type: object
                    properties:
                      tx_index:
                        type: string
                      rpc_address:
                        type: string
              application_version: &ref_226
                type: object
                properties:
                  name:
                    type: string
                  app_name:
                    type: string
                  version:
                    type: string
                  git_commit:
                    type: string
                  build_tags:
                    type: string
                  go_version:
                    type: string
                  build_deps:
                    type: array
                    items: &ref_223
                      type: object
                      properties:
                        path:
                          type: string
                          title: module path
                        version:
                          type: string
                          title: module version
                        sum:
                          type: string
                          title: checksum
                      title: Module is the type for VersionInfo
                  cosmos_sdk_version:
                    type: string
                    title: 'Since: cosmos-sdk 0.43'
                description: VersionInfo is the type for the GetNodeInfoResponse message.
            description: >-
              GetNodeInfoResponse is the response type for the Query/GetNodeInfo
              RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      summary: GetSyncing queries node syncing.
      operationId: GetSyncing_D A I G 1
      responses:
        '200':
          description: A successful response.
          schema: &ref_220
            type: object
            properties:
              syncing:
                type: boolean
            description: >-
              GetSyncingResponse is the response type for the Query/GetSyncing
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      summary: GetLatestValidatorSet queries latest validator-set.
      operationId: GetLatestValidatorSet_I W L W I
      responses:
        '200':
          description: A successful response.
          schema: &ref_218
            type: object
            properties:
              block_height:
                type: string
                format: int64
              validators:
                type: array
                items: &ref_45
                  type: object
                  properties:
                    address:
                      type: string
                    pub_key: *ref_5
                    voting_power:
                      type: string
                      format: int64
                    proposer_priority:
                      type: string
                      format: int64
                  description: Validator is the type for the validator-set.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: |-
              GetLatestValidatorSetResponse is the response type for the
              Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      operationId: GetValidatorSetByHeight_J 9 1 1 W
      responses:
        '200':
          description: A successful response.
          schema: &ref_221
            type: object
            properties:
              block_height:
                type: string
                format: int64
              validators:
                type: array
                items: *ref_45
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: |-
              GetValidatorSetByHeightResponse is the response type for the
              Query/GetValidatorSetByHeight RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: height
          in: path
          required: true
          type: string
          format: int64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Service
  /cosmos/base/node/v1beta1/config:
    get:
      summary: Config queries for the operator configuration.
      operationId: Config_4 K I A L
      responses:
        '200':
          description: A successful response.
          schema: &ref_230
            type: object
            properties:
              minimum_gas_price:
                type: string
            description: >-
              ConfigResponse defines the response structure for the Config gRPC
              query.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Service
  /cosmos/gov/v1/params/{params_type}:
    get:
      summary: Params queries all parameters of the gov module.
      operationId: Params_2 4 3 7 7
      responses:
        '200':
          description: A successful response.
          schema: &ref_236
            type: object
            properties:
              voting_params:
                description: voting_params defines the parameters related to voting.
                type: object
                properties: &ref_245
                  voting_period:
                    type: string
                    description: Length of the voting period.
              deposit_params:
                description: deposit_params defines the parameters related to deposit.
                type: object
                properties: &ref_232
                  min_deposit:
                    type: array
                    items: *ref_19
                    description: Minimum deposit for a proposal to enter voting period.
                  max_deposit_period:
                    type: string
                    description: >-
                      Maximum period for Atom holders to deposit on a proposal.
                      Initial value: 2
                       months.
              tally_params:
                description: tally_params defines the parameters related to tally.
                type: object
                properties: &ref_242
                  quorum:
                    type: string
                    description: >-
                      Minimum percentage of total stake needed to vote for a
                      result to be
                       considered valid.
                  threshold:
                    type: string
                    description: >-
                      Minimum proportion of Yes votes for proposal to pass.
                      Default value: 0.5.
                  veto_threshold:
                    type: string
                    description: >-
                      Minimum value of Veto votes to Total votes ratio for
                      proposal to be
                       vetoed. Default value: 1/3.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: params_type
          description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1/proposals:
    get:
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals_2 W 2 1 8
      responses:
        '200':
          description: A successful response.
          schema: &ref_238
            type: object
            properties:
              proposals:
                type: array
                items: &ref_46
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    messages:
                      type: array
                      items: *ref_5
                    status: &ref_233
                      type: string
                      enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      description: >-
                        ProposalStatus enumerates the valid statuses of a
                        proposal.

                         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
                         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                        period.
                         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                        period.
                         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                        passed.
                         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                        been rejected.
                         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                        failed.
                    final_tally_result:
                      description: >-
                        final_tally_result is the final tally result of the
                        proposal. When

                        querying a proposal via gRPC, this field is not
                        populated until the

                        proposal's voting period has ended.
                      type: object
                      properties: &ref_48
                        yes_count:
                          type: string
                        abstain_count:
                          type: string
                        no_count:
                          type: string
                        no_with_veto_count:
                          type: string
                    submit_time:
                      type: string
                      format: date-time
                    deposit_end_time:
                      type: string
                      format: date-time
                    total_deposit:
                      type: array
                      items: *ref_19
                    voting_start_time:
                      type: string
                      format: date-time
                    voting_end_time:
                      type: string
                      format: date-time
                    metadata:
                      type: string
                      description: >-
                        metadata is any arbitrary metadata attached to the
                        proposal.
                  description: >-
                    Proposal defines the core field members of a governance
                    proposal.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryProposalsResponse is the response type for the
              Query/Proposals RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_status
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          required: false
          type: string
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          default: PROPOSAL_STATUS_UNSPECIFIED
        - name: voter
          description: voter defines the voter address for the proposals.
          in: query
          required: false
          type: string
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      summary: Proposal queries proposal details based on ProposalID.
      operationId: Proposal_S Y W 4 Y
      responses:
        '200':
          description: A successful response.
          schema: &ref_237
            type: object
            properties:
              proposal: *ref_46
            description: >-
              QueryProposalResponse is the response type for the Query/Proposal
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits_I I T K B
      responses:
        '200':
          description: A successful response.
          schema: &ref_235
            type: object
            properties:
              deposits:
                type: array
                items: &ref_231
                  type: object
                  properties: &ref_47
                    proposal_id:
                      type: string
                      format: uint64
                    depositor:
                      type: string
                    amount:
                      type: array
                      items: *ref_19
                  description: >-
                    Deposit defines an amount deposited by an account address to
                    an active

                    proposal.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryDepositsResponse is the response type for the Query/Deposits
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      summary: >-
        Deposit queries single deposit information based proposalID,
        depositAddr.
      operationId: Deposit_F U Z J J
      responses:
        '200':
          description: A successful response.
          schema: &ref_234
            type: object
            properties:
              deposit:
                type: object
                properties: *ref_47
                description: >-
                  Deposit defines an amount deposited by an account address to
                  an active

                  proposal.
            description: >-
              QueryDepositResponse is the response type for the Query/Deposit
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      summary: TallyResult queries the tally of a proposal vote.
      operationId: TallyResult_U 2 U 2 V
      responses:
        '200':
          description: A successful response.
          schema: &ref_239
            type: object
            properties:
              tally:
                description: tally defines the requested tally.
                type: object
                properties: *ref_48
            description: >-
              QueryTallyResultResponse is the response type for the Query/Tally
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      summary: Votes queries votes of a given proposal.
      operationId: Votes_N C 1 H Z
      responses:
        '200':
          description: A successful response.
          schema: &ref_241
            type: object
            properties:
              votes:
                type: array
                items: &ref_243
                  type: object
                  properties: &ref_49
                    proposal_id:
                      type: string
                      format: uint64
                    voter:
                      type: string
                    options:
                      type: array
                      items: &ref_246
                        type: object
                        properties:
                          option: &ref_244
                            type: string
                            enum:
                              - VOTE_OPTION_UNSPECIFIED
                              - VOTE_OPTION_YES
                              - VOTE_OPTION_ABSTAIN
                              - VOTE_OPTION_NO
                              - VOTE_OPTION_NO_WITH_VETO
                            default: VOTE_OPTION_UNSPECIFIED
                            description: >-
                              VoteOption enumerates the valid vote options for a
                              given governance proposal.

                               - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                               - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                               - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                               - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                               - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                          weight:
                            type: string
                        description: >-
                          WeightedVoteOption defines a unit of vote for vote
                          split.
                    metadata:
                      type: string
                      description: >-
                        metadata is any  arbitrary metadata to attached to the
                        vote.
                  description: >-
                    Vote defines a vote on a governance proposal.

                    A Vote consists of a proposal ID, the voter, and the vote
                    option.
                description: votes defined the queried votes.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryVotesResponse is the response type for the Query/Votes RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: Vote_Q C C T N
      responses:
        '200':
          description: A successful response.
          schema: &ref_240
            type: object
            properties:
              vote:
                type: object
                properties: *ref_49
                description: >-
                  Vote defines a vote on a governance proposal.

                  A Vote consists of a proposal ID, the voter, and the vote
                  option.
            description: >-
              QueryVoteResponse is the response type for the Query/Vote RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: voter
          description: voter defines the voter address for the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      summary: Params queries all parameters of the gov module.
      operationId: Params_Q D L B X
      responses:
        '200':
          description: A successful response.
          schema: &ref_252
            type: object
            properties:
              voting_params:
                description: voting_params defines the parameters related to voting.
                type: object
                properties: &ref_261
                  voting_period:
                    type: string
                    description: Length of the voting period.
              deposit_params:
                description: deposit_params defines the parameters related to deposit.
                type: object
                properties: &ref_248
                  min_deposit:
                    type: array
                    items: *ref_19
                    description: Minimum deposit for a proposal to enter voting period.
                  max_deposit_period:
                    type: string
                    description: >-
                      Maximum period for Atom holders to deposit on a proposal.
                      Initial value: 2
                       months.
              tally_params:
                description: tally_params defines the parameters related to tally.
                type: object
                properties: &ref_258
                  quorum:
                    type: string
                    format: byte
                    description: >-
                      Minimum percentage of total stake needed to vote for a
                      result to be
                       considered valid.
                  threshold:
                    type: string
                    format: byte
                    description: >-
                      Minimum proportion of Yes votes for proposal to pass.
                      Default value: 0.5.
                  veto_threshold:
                    type: string
                    format: byte
                    description: >-
                      Minimum value of Veto votes to Total votes ratio for
                      proposal to be
                       vetoed. Default value: 1/3.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: params_type
          description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals:
    get:
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals_B A H A 3
      responses:
        '200':
          description: A successful response.
          schema: &ref_254
            type: object
            properties:
              proposals:
                type: array
                items: &ref_50
                  type: object
                  properties:
                    proposal_id:
                      type: string
                      format: uint64
                    content: *ref_5
                    status: &ref_249
                      type: string
                      enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      description: >-
                        ProposalStatus enumerates the valid statuses of a
                        proposal.

                         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
                         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                        period.
                         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                        period.
                         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                        passed.
                         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                        been rejected.
                         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                        failed.
                    final_tally_result:
                      description: >-
                        final_tally_result is the final tally result of the
                        proposal. When

                        querying a proposal via gRPC, this field is not
                        populated until the

                        proposal's voting period has ended.
                      type: object
                      properties: &ref_52
                        'yes':
                          type: string
                        abstain:
                          type: string
                        'no':
                          type: string
                        no_with_veto:
                          type: string
                    submit_time:
                      type: string
                      format: date-time
                    deposit_end_time:
                      type: string
                      format: date-time
                    total_deposit:
                      type: array
                      items: *ref_19
                    voting_start_time:
                      type: string
                      format: date-time
                    voting_end_time:
                      type: string
                      format: date-time
                  description: >-
                    Proposal defines the core field members of a governance
                    proposal.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryProposalsResponse is the response type for the
              Query/Proposals RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_status
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          required: false
          type: string
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          default: PROPOSAL_STATUS_UNSPECIFIED
        - name: voter
          description: voter defines the voter address for the proposals.
          in: query
          required: false
          type: string
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      summary: Proposal queries proposal details based on ProposalID.
      operationId: Proposal_X R D D X
      responses:
        '200':
          description: A successful response.
          schema: &ref_253
            type: object
            properties:
              proposal: *ref_50
            description: >-
              QueryProposalResponse is the response type for the Query/Proposal
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits_8 G S T 3
      responses:
        '200':
          description: A successful response.
          schema: &ref_251
            type: object
            properties:
              deposits:
                type: array
                items: &ref_247
                  type: object
                  properties: &ref_51
                    proposal_id:
                      type: string
                      format: uint64
                    depositor:
                      type: string
                    amount:
                      type: array
                      items: *ref_19
                  description: >-
                    Deposit defines an amount deposited by an account address to
                    an active

                    proposal.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryDepositsResponse is the response type for the Query/Deposits
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      summary: >-
        Deposit queries single deposit information based proposalID,
        depositAddr.
      operationId: Deposit_F M E 6 F
      responses:
        '200':
          description: A successful response.
          schema: &ref_250
            type: object
            properties:
              deposit:
                type: object
                properties: *ref_51
                description: >-
                  Deposit defines an amount deposited by an account address to
                  an active

                  proposal.
            description: >-
              QueryDepositResponse is the response type for the Query/Deposit
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      summary: TallyResult queries the tally of a proposal vote.
      operationId: TallyResult_J D S D Q
      responses:
        '200':
          description: A successful response.
          schema: &ref_255
            type: object
            properties:
              tally:
                description: tally defines the requested tally.
                type: object
                properties: *ref_52
            description: >-
              QueryTallyResultResponse is the response type for the Query/Tally
              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      summary: Votes queries votes of a given proposal.
      operationId: Votes_Z P 5 B F
      responses:
        '200':
          description: A successful response.
          schema: &ref_257
            type: object
            properties:
              votes:
                type: array
                items: &ref_259
                  type: object
                  properties: &ref_54
                    proposal_id:
                      type: string
                      format: uint64
                    voter:
                      type: string
                    option:
                      description: >-
                        Deprecated: Prefer to use `options` instead. This field
                        is set in queries

                        if and only if `len(options) == 1` and that option has
                        weight 1. In all

                        other cases, this field will default to
                        VOTE_OPTION_UNSPECIFIED.
                      type: string
                      enum: &ref_53
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      default: VOTE_OPTION_UNSPECIFIED
                    options:
                      type: array
                      items: &ref_262
                        type: object
                        properties:
                          option: &ref_260
                            type: string
                            enum: *ref_53
                            default: VOTE_OPTION_UNSPECIFIED
                            description: >-
                              VoteOption enumerates the valid vote options for a
                              given governance proposal.

                               - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                               - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                               - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                               - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                               - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                          weight:
                            type: string
                        description: >-
                          WeightedVoteOption defines a unit of vote for vote
                          split.


                          Since: cosmos-sdk 0.43
                      title: 'Since: cosmos-sdk 0.43'
                  description: >-
                    Vote defines a vote on a governance proposal.

                    A Vote consists of a proposal ID, the voter, and the vote
                    option.
                description: votes defined the queried votes.
              pagination:
                type: object
                properties: *ref_4
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryVotesResponse is the response type for the Query/Votes RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      summary: Vote queries voted information based on proposalID, voterAddr.
      operationId: Vote_H K D X C
      responses:
        '200':
          description: A successful response.
          schema: &ref_256
            type: object
            properties:
              vote:
                type: object
                properties: *ref_54
                description: >-
                  Vote defines a vote on a governance proposal.

                  A Vote consists of a proposal ID, the voter, and the vote
                  option.
            description: >-
              QueryVoteResponse is the response type for the Query/Vote RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: voter
          description: voter defines the voter address for the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/mint/v1beta1/genesis_time:
    get:
      summary: GenesisTime returns the genesis time.
      operationId: GenesisTime_A 0 L F Z
      responses:
        '200':
          description: A successful response.
          schema: &ref_264
            type: object
            properties:
              genesis_time:
                type: string
                format: date-time
                description: GenesisTime is the timestamp associated with the first block.
            description: >-
              QueryGenesisTimeResponse is the response type for the
              Query/GenesisTime RPC

              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /cosmos/mint/v1beta1/inflation_rate:
    get:
      summary: InflationRate returns the current inflation rate.
      operationId: InflationRate_N P K B 6
      responses:
        '200':
          description: A successful response.
          schema: &ref_265
            type: object
            properties:
              inflation_rate:
                type: string
                format: byte
                description: InflationRate is the current inflation rate.
            description: >-
              QueryInflationRateResponse is the response type for the
              Query/InflationRate

              RPC method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /qgb/v1/attestations/nonce/earliest:
    get:
      summary: EarliestAttestationNonce queries the earliest attestation nonce.
      operationId: EarliestAttestationNonce_S 9 Q O 7
      responses:
        '200':
          description: A successful response.
          schema: &ref_271
            type: object
            properties:
              nonce:
                type: string
                format: uint64
            title: >-
              QueryEarliestAttestationNonceResponse earliest attestation nonce
              response
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /qgb/v1/attestations/nonce/latest:
    get:
      summary: LatestAttestationNonce queries latest attestation nonce.
      operationId: LatestAttestationNonce_4 M D V D
      responses:
        '200':
          description: A successful response.
          schema: &ref_272
            type: object
            properties:
              nonce:
                type: string
                format: uint64
            title: >-
              QueryLatestAttestationNonceResponse latest attestation nonce
              response
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /qgb/v1/attestations/requests/{nonce}:
    get:
      summary: |-
        AttestationRequestByNonce queries attestation request by nonce.
        Returns nil if not found.
      operationId: AttestationRequestByNonce_S I O G D
      responses:
        '200':
          description: A successful response.
          schema: &ref_268
            type: object
            properties:
              attestation:
                type: object
                properties: *ref_1
                title: >-
                  AttestationRequestI is either a Data Commitment or a Valset.

                  This was decided as part of the universal nonce approach
                  under:

                  https://github.com/celestiaorg/celestia-app/issues/468#issuecomment-1156887715
            title: QueryAttestationRequestByNonceResponse
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: nonce
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /qgb/v1/data_commitment/latest:
    get:
      summary: LatestDataCommitment returns the latest data commitment in store
      operationId: LatestDataCommitment_G F L 6 K
      responses:
        '200':
          description: A successful response.
          schema: &ref_273
            type: object
            properties:
              data_commitment: &ref_55
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                    title: |-
                      Universal nonce defined under:
                      https://github.com/celestiaorg/celestia-app/pull/464
                  begin_block:
                    type: string
                    format: uint64
                    description: >-
                      First block defining the ordered set of blocks used to
                      create the

                      commitment.
                  end_block:
                    type: string
                    format: uint64
                    description: >-
                      End exclusive last block defining the ordered set of
                      blocks used to create

                      the commitment.
                  time:
                    type: string
                    format: date-time
                    title: Block time where this data commitment was created
                description: >-
                  DataCommitment is the data commitment request message that
                  will be signed

                  using orchestrators.

                  It does not contain a `commitment` field as this message will
                  be created

                  inside the state machine and it doesn't make sense to ask
                  tendermint for the

                  commitment there.

                  The range defined by begin_block and end_block is end
                  exclusive.
            title: QueryLatestDataCommitmentResponse
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /qgb/v1/data_commitment/range/height:
    get:
      summary: |-
        DataCommitmentRangeForHeight returns the data commitment window
        that includes the provided height
      operationId: DataCommitmentRangeForHeight_7 J C O X
      responses:
        '200':
          description: A successful response.
          schema: &ref_269
            type: object
            properties:
              data_commitment: *ref_55
            title: QueryDataCommitmentRangeForHeightResponse
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: height
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Query
  /qgb/v1/evm_address:
    get:
      summary: |-
        EVMAddress returns the evm address associated with a supplied
        validator address
      operationId: EVMAddress_T X M H I
      responses:
        '200':
          description: A successful response.
          schema: &ref_270
            type: object
            properties:
              evm_address:
                type: string
            title: QueryEVMAddressResponse
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: validator_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /qgb/v1/params:
    get:
      summary: Params queries the current parameters for the blobstream module
      operationId: Params_W I Z 1 0
      responses:
        '200':
          description: A successful response.
          schema: &ref_276
            type: object
            properties:
              params: &ref_267
                type: object
                properties:
                  data_commitment_window:
                    type: string
                    format: uint64
                description: Params represent Blobstream genesis and store parameters.
            title: QueryParamsResponse
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /qgb/v1/unbonding:
    get:
      summary: LatestUnbondingHeight returns the latest unbonding height
      operationId: LatestUnbondingHeight_K 2 G K 2
      responses:
        '200':
          description: A successful response.
          schema: &ref_274
            type: object
            properties:
              height:
                type: string
                format: uint64
            title: QueryLatestUnbondingHeightResponse
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
  /qgb/v1/valset/request/before/{nonce}:
    get:
      summary: >-
        LatestValsetRequestBeforeNonce Queries latest Valset request before
        nonce.

        And, even if the current nonce is a valset, it will return the previous

        one.

        If the provided nonce is 1, it will return an error, because, there is

        no valset before nonce 1.
      operationId: LatestValsetRequestBeforeNonce_A P E 3 7
      responses:
        '200':
          description: A successful response.
          schema: &ref_275
            type: object
            properties:
              valset: &ref_277
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                    title: |-
                      Universal nonce defined under:
                      https://github.com/celestiaorg/celestia-app/pull/464
                  members:
                    type: array
                    items: &ref_266
                      type: object
                      properties:
                        power:
                          type: string
                          format: uint64
                          description: Voting power of the validator.
                        evm_address:
                          type: string
                          description: >-
                            EVM address that will be used by the validator to
                            sign messages.
                      title: >-
                        BridgeValidator represents a validator's ETH address and
                        its power
                    description: >-
                      List of BridgeValidator containing the current validator
                      set.
                  height:
                    type: string
                    format: uint64
                    title: Current chain height
                  time:
                    type: string
                    format: date-time
                    title: Block time where this valset was created
                title: >-
                  Valset is the EVM Bridge Multsig Set, each Blobstream
                  validator also

                  maintains an ETH key to sign messages, these are used to check
                  signatures on

                  ETH because of the significant gas savings
            title: >-
              QueryLatestValsetRequestBeforeNonceResponse latest Valset request
              before

              height response
        default:
          description: An unexpected error response.
          schema: *ref_0
      parameters:
        - name: nonce
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /blob/v1/params:
    get:
      summary: Params queries the parameters of the module.
      operationId: Params_K N N D C
      responses:
        '200':
          description: A successful response.
          schema: &ref_279
            type: object
            properties:
              params: &ref_278
                type: object
                properties:
                  gas_per_blob_byte:
                    type: integer
                    format: int64
                  gov_max_square_size:
                    type: string
                    format: uint64
                description: Params defines the parameters for the module.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema: *ref_0
      tags:
        - Query
definitions:
  cosmos.upgrade.v1beta1.ModuleVersion: *ref_56
  cosmos.upgrade.v1beta1.Plan:
    type: object
    properties: *ref_57
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse: *ref_58
  cosmos.upgrade.v1beta1.QueryAuthorityResponse: *ref_59
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse: *ref_60
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse: *ref_61
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse: *ref_62
  google.protobuf.Any: *ref_5
  grpc.gateway.runtime.Error: *ref_0
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
      reverse:
        type: boolean
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse: *ref_7
  cosmos.feegrant.v1beta1.Grant: *ref_3
  cosmos.feegrant.v1beta1.QueryAllowanceResponse: *ref_63
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse: *ref_64
  cosmos.feegrant.v1beta1.QueryAllowancesResponse: *ref_65
  cosmos.mint.v1beta1.Params:
    type: object
    properties: *ref_66
    description: Params holds parameters for the mint module.
  cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
    type: object
    properties:
      annual_provisions:
        type: string
        format: byte
        description: annual_provisions is the current minting annual provisions value.
    description: |-
      QueryAnnualProvisionsResponse is the response type for the
      Query/AnnualProvisions RPC method.
  cosmos.mint.v1beta1.QueryInflationResponse: *ref_67
  cosmos.mint.v1beta1.QueryParamsResponse: *ref_68
  cosmos.app.v1alpha1.Config:
    type: object
    properties: &ref_70
      modules:
        type: array
        items: &ref_69
          type: object
          properties:
            name:
              type: string
              description: >-
                name is the unique name of the module within the app. It should
                be a name

                that persists between different versions of a module so that
                modules

                can be smoothly upgraded to new versions.


                For example, for the module cosmos.bank.module.v1.Module, we may
                chose

                to simply name the module "bank" in the app. When we upgrade to

                cosmos.bank.module.v2.Module, the app-specific name "bank" stays
                the same

                and the framework knows that the v2 module should receive all
                the same state

                that the v1 module had. Note: modules should provide info on
                which versions

                they can migrate from in the ModuleDescriptor.can_migration_from
                field.
            config:
              type: object
              properties: *ref_1
              description: >-
                config is the config object for the module. Module config
                messages should

                define a ModuleDescriptor using the
                cosmos.app.v1alpha1.is_module extension.
          description: ModuleConfig is a module configuration for an app.
        description: modules are the module configurations for the app.
    description: >-
      Config represents the configuration for a Cosmos SDK ABCI app.

      It is intended that all state machine logic including the version of

      baseapp and tx handlers (and possibly even Tendermint) that an app needs

      can be described in a config object. For compatibility, the framework
      should

      allow a mixture of declarative and imperative app wiring, however, apps

      that strive for the maximum ease of maintainability should be able to
      describe

      their state machine with a config object alone.
  cosmos.app.v1alpha1.ModuleConfig: *ref_69
  cosmos.app.v1alpha1.QueryConfigResponse:
    type: object
    properties:
      config:
        description: config is the current app config.
        type: object
        properties: *ref_70
    description: QueryConfigRequest is the Query/Config response type.
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse: *ref_71
  cosmos.evidence.v1beta1.QueryEvidenceResponse: *ref_72
  cosmos.nft.v1beta1.Class: *ref_6
  cosmos.nft.v1beta1.NFT: *ref_8
  cosmos.nft.v1beta1.QueryBalanceResponse: *ref_73
  cosmos.nft.v1beta1.QueryClassResponse: *ref_74
  cosmos.nft.v1beta1.QueryClassesResponse: *ref_75
  cosmos.nft.v1beta1.QueryNFTResponse: *ref_76
  cosmos.nft.v1beta1.QueryNFTsResponse: *ref_77
  cosmos.nft.v1beta1.QueryOwnerResponse: *ref_78
  cosmos.nft.v1beta1.QuerySupplyResponse: *ref_79
  cosmos.auth.v1beta1.AddressBytesToStringResponse: *ref_80
  cosmos.auth.v1beta1.AddressStringToBytesResponse: *ref_81
  cosmos.auth.v1beta1.Bech32PrefixResponse: *ref_82
  cosmos.auth.v1beta1.Params:
    type: object
    properties: *ref_83
    description: Params defines the parameters for the auth module.
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse: *ref_84
  cosmos.auth.v1beta1.QueryAccountResponse: *ref_85
  cosmos.auth.v1beta1.QueryAccountsResponse: *ref_86
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse: *ref_87
  cosmos.auth.v1beta1.QueryModuleAccountsResponse: *ref_88
  cosmos.auth.v1beta1.QueryParamsResponse: *ref_89
  cosmos.group.v1.GroupInfo: *ref_12
  cosmos.group.v1.GroupMember: *ref_90
  cosmos.group.v1.GroupPolicyInfo: *ref_9
  cosmos.group.v1.Member:
    type: object
    properties: *ref_91
    description: |-
      Member represents a group member with an account address,
      non-zero weight, metadata and added_at timestamp.
  cosmos.group.v1.Proposal: *ref_92
  cosmos.group.v1.ProposalExecutorResult:
    type: string
    enum: *ref_93
    default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
    description: |-
      ProposalExecutorResult defines types of proposal executor results.

       - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.
       - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.
       - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.
       - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state.
  cosmos.group.v1.ProposalStatus:
    type: string
    enum: *ref_94
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus defines proposal statuses.

       - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.
       - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.
       - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome
      passes the group policy's decision policy.
       - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome
      is rejected by the group policy's decision policy.
       - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the
      final tally.
       - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.
      When this happens the final status is Withdrawn.
  cosmos.group.v1.QueryGroupInfoResponse: *ref_95
  cosmos.group.v1.QueryGroupMembersResponse: *ref_96
  cosmos.group.v1.QueryGroupPoliciesByAdminResponse: *ref_97
  cosmos.group.v1.QueryGroupPoliciesByGroupResponse: *ref_98
  cosmos.group.v1.QueryGroupPolicyInfoResponse: *ref_99
  cosmos.group.v1.QueryGroupsByAdminResponse: *ref_100
  cosmos.group.v1.QueryGroupsByMemberResponse: *ref_101
  cosmos.group.v1.QueryGroupsResponse: *ref_102
  cosmos.group.v1.QueryProposalResponse: *ref_103
  cosmos.group.v1.QueryProposalsByGroupPolicyResponse: *ref_104
  cosmos.group.v1.QueryTallyResultResponse: *ref_105
  cosmos.group.v1.QueryVoteByProposalVoterResponse: *ref_106
  cosmos.group.v1.QueryVotesByProposalResponse: *ref_107
  cosmos.group.v1.QueryVotesByVoterResponse: *ref_108
  cosmos.group.v1.TallyResult:
    type: object
    properties: *ref_13
    description: TallyResult represents the sum of weighted votes for each vote option.
  cosmos.group.v1.Vote: *ref_16
  cosmos.group.v1.VoteOption:
    type: string
    enum: *ref_109
    default: VOTE_OPTION_UNSPECIFIED
    description: |-
      VoteOption enumerates the valid vote options for a given proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will
      return an error.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  cosmos.bank.v1beta1.DenomOwner: *ref_110
  cosmos.bank.v1beta1.DenomUnit: *ref_111
  cosmos.bank.v1beta1.Metadata: *ref_112
  cosmos.bank.v1beta1.Params: *ref_113
  cosmos.bank.v1beta1.QueryAllBalancesResponse: *ref_114
  cosmos.bank.v1beta1.QueryBalanceResponse: *ref_115
  cosmos.bank.v1beta1.QueryDenomMetadataResponse: *ref_116
  cosmos.bank.v1beta1.QueryDenomOwnersResponse: *ref_117
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse: *ref_118
  cosmos.bank.v1beta1.QueryParamsResponse: *ref_119
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse: *ref_120
  cosmos.bank.v1beta1.QuerySupplyOfResponse: *ref_121
  cosmos.bank.v1beta1.QueryTotalSupplyResponse: *ref_122
  cosmos.bank.v1beta1.SendEnabled: *ref_123
  cosmos.base.v1beta1.Coin: *ref_19
  cosmos.base.v1beta1.DecCoin: *ref_20
  cosmos.distribution.v1beta1.DelegationDelegatorReward: *ref_124
  cosmos.distribution.v1beta1.Params:
    type: object
    properties: *ref_125
    description: Params defines the set of params for the distribution module.
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse: *ref_126
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse: *ref_127
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse: *ref_128
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse: *ref_129
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse: *ref_130
  cosmos.distribution.v1beta1.QueryParamsResponse: *ref_131
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse: *ref_132
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse: *ref_133
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse: *ref_134
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    type: object
    properties: *ref_135
    description: |-
      ValidatorAccumulatedCommission represents accumulated commission
      for a validator kept as a running counter, can be withdrawn at any time.
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards: *ref_136
  cosmos.distribution.v1beta1.ValidatorSlashEvent: *ref_137
  cosmos.base.abci.v1beta1.ABCIMessageLog: *ref_138
  cosmos.base.abci.v1beta1.Attribute: *ref_139
  cosmos.base.abci.v1beta1.GasInfo:
    type: object
    properties: *ref_140
    description: GasInfo defines tx execution gas context.
  cosmos.base.abci.v1beta1.Result:
    type: object
    properties: *ref_141
    description: Result is the union of ResponseFormat and ResponseCheckTx.
  cosmos.base.abci.v1beta1.StringEvent: *ref_142
  cosmos.base.abci.v1beta1.TxResponse: *ref_143
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    type: object
    properties: *ref_144
    description: |-
      CompactBitArray is an implementation of a space efficient bit array.
      This is used to ensure that the encoded data takes up a minimal amount of
      space after proto encoding.
      This is not thread safe, and is not intended for concurrent usage.
  cosmos.tx.signing.v1beta1.SignMode:
    type: string
    enum: *ref_145
    default: SIGN_MODE_UNSPECIFIED
    description: |-
      SignMode represents a signing mode with its own security guarantees.

      This enum should be considered a registry of all known sign modes
      in the Cosmos ecosystem. Apps are not expected to support all known
      sign modes. Apps that would like to support custom  sign modes are
      encouraged to open a small PR against this file to add a new case
      to this SignMode enum describing their sign mode so that different
      apps have a consistent version of this enum.

       - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
      rejected.
       - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
      verified with raw bytes from Tx.
       - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
      human-readable textual representation on top of the binary representation
      from SIGN_MODE_DIRECT. It is currently not supported.
       - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
      SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
      require signers signing over other signers' `signer_info`. It also allows
      for adding Tips in transactions.

      Since: cosmos-sdk 0.46
       - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
      Amino JSON and will be removed in the future.
       - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
      SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

      Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
      but is not implemented on the SDK by default. To enable EIP-191, you need
      to pass a custom `TxConfig` that has an implementation of
      `SignModeHandler` for EIP-191. The SDK may decide to fully support
      EIP-191 in the future.

      Since: cosmos-sdk 0.45.2
  cosmos.tx.v1beta1.AuthInfo:
    type: object
    properties: *ref_146
    description: |-
      AuthInfo describes the fee and signer modes that are used to sign a
      transaction.
  cosmos.tx.v1beta1.BroadcastMode: *ref_147
  cosmos.tx.v1beta1.BroadcastTxRequest: *ref_148
  cosmos.tx.v1beta1.BroadcastTxResponse: *ref_149
  cosmos.tx.v1beta1.Fee:
    type: object
    properties: *ref_150
    description: >-
      Fee includes the amount of coins paid in fees and the maximum

      gas to be used by the transaction. The ratio yields an effective
      "gasprice",

      which must be above some miminum to be accepted into the mempool.
  cosmos.tx.v1beta1.GetBlockWithTxsResponse: *ref_151
  cosmos.tx.v1beta1.GetTxResponse: *ref_152
  cosmos.tx.v1beta1.GetTxsEventResponse: *ref_153
  cosmos.tx.v1beta1.ModeInfo: *ref_154
  cosmos.tx.v1beta1.ModeInfo.Multi:
    type: object
    properties: *ref_155
    title: Multi is the mode info for a multisig public key
  cosmos.tx.v1beta1.ModeInfo.Single:
    type: object
    properties: *ref_156
    title: |-
      Single is the mode info for a single signer. It is structured as a message
      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
      future
  cosmos.tx.v1beta1.OrderBy:
    type: string
    enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    default: ORDER_BY_UNSPECIFIED
    description: >-
      - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting
      order. OrderBy defaults to ASC in this case.
       - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
       - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
    title: OrderBy defines the sorting order
  cosmos.tx.v1beta1.SignerInfo: *ref_157
  cosmos.tx.v1beta1.SimulateRequest: *ref_158
  cosmos.tx.v1beta1.SimulateResponse: *ref_159
  cosmos.tx.v1beta1.Tip:
    type: object
    properties: *ref_160
    description: |-
      Tip is the tip used for meta-transactions.

      Since: cosmos-sdk 0.46
  cosmos.tx.v1beta1.Tx: *ref_25
  cosmos.tx.v1beta1.TxBody:
    type: object
    properties: *ref_161
    description: TxBody is the body of a transaction that all signers sign over.
  tendermint.abci.Event: *ref_23
  tendermint.abci.EventAttribute: *ref_162
  tendermint.crypto.PublicKey: *ref_163
  tendermint.types.Block: *ref_164
  tendermint.types.BlockID: *ref_27
  tendermint.types.BlockIDFlag: *ref_165
  tendermint.types.Commit: *ref_31
  tendermint.types.CommitSig: *ref_166
  tendermint.types.Data: *ref_43
  tendermint.types.DuplicateVoteEvidence: *ref_167
  tendermint.types.Evidence: *ref_168
  tendermint.types.EvidenceList: *ref_169
  tendermint.types.Header: *ref_29
  tendermint.types.LightBlock: *ref_170
  tendermint.types.LightClientAttackEvidence: *ref_171
  tendermint.types.PartSetHeader: *ref_172
  tendermint.types.SignedHeader: *ref_173
  tendermint.types.SignedMsgType: *ref_174
  tendermint.types.Validator: *ref_30
  tendermint.types.ValidatorSet: *ref_175
  tendermint.types.Vote: *ref_28
  tendermint.version.Consensus:
    type: object
    properties: *ref_42
    description: >-
      Consensus captures the consensus rules for processing a block in the
      blockchain,

      including all blockchain data structures and the rules of the
      application's

      state transition machine.
  cosmos.staking.v1beta1.BondStatus:
    type: string
    enum: *ref_176
    default: BOND_STATUS_UNSPECIFIED
    description: |-
      BondStatus is the status of a validator.

       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
  cosmos.staking.v1beta1.Commission:
    type: object
    properties: *ref_177
    description: Commission defines commission parameters for a given validator.
  cosmos.staking.v1beta1.CommissionRates:
    type: object
    properties: *ref_178
    description: >-
      CommissionRates defines the initial commission rates to be used for
      creating

      a validator.
  cosmos.staking.v1beta1.Delegation: *ref_179
  cosmos.staking.v1beta1.DelegationResponse: *ref_35
  cosmos.staking.v1beta1.Description:
    type: object
    properties: *ref_180
    description: Description defines a validator description.
  cosmos.staking.v1beta1.HistoricalInfo:
    type: object
    properties: *ref_181
    description: >-
      HistoricalInfo contains header and validator information for a given
      block.

      It is stored as part of staking module's state, which persists the `n`
      most

      recent HistoricalInfo

      (`n` is set by the staking module's `historical_entries` parameter).
  cosmos.staking.v1beta1.Params:
    type: object
    properties: *ref_182
    description: Params defines the parameters for the staking module.
  cosmos.staking.v1beta1.Pool:
    type: object
    properties: *ref_183
    description: |-
      Pool is used for tracking bonded and not-bonded token supply of the bond
      denomination.
  cosmos.staking.v1beta1.QueryDelegationResponse: *ref_184
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse: *ref_185
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse: *ref_186
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse: *ref_187
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse: *ref_188
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse: *ref_189
  cosmos.staking.v1beta1.QueryParamsResponse: *ref_190
  cosmos.staking.v1beta1.QueryPoolResponse: *ref_191
  cosmos.staking.v1beta1.QueryRedelegationsResponse: *ref_192
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse: *ref_193
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse: *ref_194
  cosmos.staking.v1beta1.QueryValidatorResponse: *ref_195
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse: *ref_196
  cosmos.staking.v1beta1.QueryValidatorsResponse: *ref_197
  cosmos.staking.v1beta1.Redelegation: *ref_198
  cosmos.staking.v1beta1.RedelegationEntry: *ref_32
  cosmos.staking.v1beta1.RedelegationEntryResponse: *ref_199
  cosmos.staking.v1beta1.RedelegationResponse: *ref_200
  cosmos.staking.v1beta1.UnbondingDelegation: *ref_38
  cosmos.staking.v1beta1.UnbondingDelegationEntry: *ref_201
  cosmos.staking.v1beta1.Validator: *ref_34
  cosmos.params.v1beta1.ParamChange:
    type: object
    properties: *ref_202
    description: |-
      ParamChange defines an individual parameter change, for use in
      ParameterChangeProposal.
  cosmos.params.v1beta1.QueryParamsResponse: *ref_203
  cosmos.params.v1beta1.QuerySubspacesResponse: *ref_204
  cosmos.params.v1beta1.Subspace: *ref_205
  cosmos.authz.v1beta1.Grant: *ref_206
  cosmos.authz.v1beta1.GrantAuthorization: *ref_39
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse: *ref_207
  cosmos.authz.v1beta1.QueryGranterGrantsResponse: *ref_208
  cosmos.authz.v1beta1.QueryGrantsResponse: *ref_209
  cosmos.slashing.v1beta1.Params: *ref_210
  cosmos.slashing.v1beta1.QueryParamsResponse: *ref_211
  cosmos.slashing.v1beta1.QuerySigningInfoResponse: *ref_212
  cosmos.slashing.v1beta1.QuerySigningInfosResponse: *ref_213
  cosmos.slashing.v1beta1.ValidatorSigningInfo: *ref_214
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse: *ref_215
  cosmos.base.tendermint.v1beta1.Block:
    type: object
    properties: *ref_44
    description: |-
      Block is tendermint type Block, with the Header proposer address
      field converted to bech32 string.
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse: *ref_216
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse: *ref_217
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse: *ref_218
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse: *ref_219
  cosmos.base.tendermint.v1beta1.GetSyncingResponse: *ref_220
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse: *ref_221
  cosmos.base.tendermint.v1beta1.Header: *ref_222
  cosmos.base.tendermint.v1beta1.Module: *ref_223
  cosmos.base.tendermint.v1beta1.ProofOp: *ref_224
  cosmos.base.tendermint.v1beta1.ProofOps: *ref_225
  cosmos.base.tendermint.v1beta1.Validator: *ref_45
  cosmos.base.tendermint.v1beta1.VersionInfo: *ref_226
  tendermint.p2p.DefaultNodeInfo: *ref_227
  tendermint.p2p.DefaultNodeInfoOther: *ref_228
  tendermint.p2p.ProtocolVersion: *ref_229
  cosmos.base.node.v1beta1.ConfigResponse: *ref_230
  cosmos.gov.v1.Deposit: *ref_231
  cosmos.gov.v1.DepositParams:
    type: object
    properties: *ref_232
    description: DepositParams defines the params for deposits on governance proposals.
  cosmos.gov.v1.Proposal: *ref_46
  cosmos.gov.v1.ProposalStatus: *ref_233
  cosmos.gov.v1.QueryDepositResponse: *ref_234
  cosmos.gov.v1.QueryDepositsResponse: *ref_235
  cosmos.gov.v1.QueryParamsResponse: *ref_236
  cosmos.gov.v1.QueryProposalResponse: *ref_237
  cosmos.gov.v1.QueryProposalsResponse: *ref_238
  cosmos.gov.v1.QueryTallyResultResponse: *ref_239
  cosmos.gov.v1.QueryVoteResponse: *ref_240
  cosmos.gov.v1.QueryVotesResponse: *ref_241
  cosmos.gov.v1.TallyParams:
    type: object
    properties: *ref_242
    description: TallyParams defines the params for tallying votes on governance proposals.
  cosmos.gov.v1.TallyResult:
    type: object
    properties: *ref_48
    description: TallyResult defines a standard tally for a governance proposal.
  cosmos.gov.v1.Vote: *ref_243
  cosmos.gov.v1.VoteOption: *ref_244
  cosmos.gov.v1.VotingParams:
    type: object
    properties: *ref_245
    description: VotingParams defines the params for voting on governance proposals.
  cosmos.gov.v1.WeightedVoteOption: *ref_246
  cosmos.gov.v1beta1.Deposit: *ref_247
  cosmos.gov.v1beta1.DepositParams:
    type: object
    properties: *ref_248
    description: DepositParams defines the params for deposits on governance proposals.
  cosmos.gov.v1beta1.Proposal: *ref_50
  cosmos.gov.v1beta1.ProposalStatus: *ref_249
  cosmos.gov.v1beta1.QueryDepositResponse: *ref_250
  cosmos.gov.v1beta1.QueryDepositsResponse: *ref_251
  cosmos.gov.v1beta1.QueryParamsResponse: *ref_252
  cosmos.gov.v1beta1.QueryProposalResponse: *ref_253
  cosmos.gov.v1beta1.QueryProposalsResponse: *ref_254
  cosmos.gov.v1beta1.QueryTallyResultResponse: *ref_255
  cosmos.gov.v1beta1.QueryVoteResponse: *ref_256
  cosmos.gov.v1beta1.QueryVotesResponse: *ref_257
  cosmos.gov.v1beta1.TallyParams:
    type: object
    properties: *ref_258
    description: TallyParams defines the params for tallying votes on governance proposals.
  cosmos.gov.v1beta1.TallyResult:
    type: object
    properties: *ref_52
    description: TallyResult defines a standard tally for a governance proposal.
  cosmos.gov.v1beta1.Vote: *ref_259
  cosmos.gov.v1beta1.VoteOption: *ref_260
  cosmos.gov.v1beta1.VotingParams:
    type: object
    properties: *ref_261
    description: VotingParams defines the params for voting on governance proposals.
  cosmos.gov.v1beta1.WeightedVoteOption: *ref_262
  celestia.mint.v1.QueryAnnualProvisionsResponse: *ref_263
  celestia.mint.v1.QueryGenesisTimeResponse: *ref_264
  celestia.mint.v1.QueryInflationRateResponse: *ref_265
  celestia.qgb.v1.BridgeValidator: *ref_266
  celestia.qgb.v1.DataCommitment: *ref_55
  celestia.qgb.v1.Params: *ref_267
  celestia.qgb.v1.QueryAttestationRequestByNonceResponse: *ref_268
  celestia.qgb.v1.QueryDataCommitmentRangeForHeightResponse: *ref_269
  celestia.qgb.v1.QueryEVMAddressResponse: *ref_270
  celestia.qgb.v1.QueryEarliestAttestationNonceResponse: *ref_271
  celestia.qgb.v1.QueryLatestAttestationNonceResponse: *ref_272
  celestia.qgb.v1.QueryLatestDataCommitmentResponse: *ref_273
  celestia.qgb.v1.QueryLatestUnbondingHeightResponse: *ref_274
  celestia.qgb.v1.QueryLatestValsetRequestBeforeNonceResponse: *ref_275
  celestia.qgb.v1.QueryParamsResponse: *ref_276
  celestia.qgb.v1.Valset: *ref_277
  celestia.blob.v1.Params: *ref_278
  celestia.blob.v1.QueryParamsResponse: *ref_279
