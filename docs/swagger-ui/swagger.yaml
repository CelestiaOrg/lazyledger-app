swagger: '2.0'
info:
  title: Celestia gRPC Gateway API
  version: celestia-app
consumes:
- application/json
produces:
- application/json
paths:
  /blob/v1/params:
    get:
      operationId: Params_R W I 6 Y
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.blob.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries the parameters of the module.
      tags:
      - Query
  /cosmos/auth/v1beta1/accounts:
    get:
      description: 'Since: cosmos-sdk 0.43'
      operationId: Accounts_W U C O H
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Accounts returns all the existing accounts
      tags:
      - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      operationId: Account_W 5 D R E
      parameters:
      - description: address defines the address to query for.
        in: path
        name: address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Account returns account details based on address.
      tags:
      - Query
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID_4 S Q D Z
      parameters:
      - description: 'id is the account number of the address to be queried. This
          field

          should have been an uint64 (like all account numbers), and will be

          updated to uint64 in a future version of the auth query.'
        format: int64
        in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AccountAddressByID returns account address based on account number.
      tags:
      - Query
  /cosmos/auth/v1beta1/bech32:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Bech32Prefix_3 0 Z 0 8
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.Bech32PrefixResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Bech32Prefix queries bech32Prefix
      tags:
      - Query
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressBytesToString_2 9 0 G V
      parameters:
      - format: byte
        in: path
        name: address_bytes
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.AddressBytesToStringResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AddressBytesToString converts Account Address bytes to string
      tags:
      - Query
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressStringToBytes_E V G D V
      parameters:
      - in: path
        name: address_string
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.AddressStringToBytesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AddressStringToBytes converts Address string to bytes
      tags:
      - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts_F Y Q S Y
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryModuleAccountsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ModuleAccounts returns all the existing module accounts.
      tags:
      - Query
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      operationId: ModuleAccountByName_U 1 E Y C
      parameters:
      - in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ModuleAccountByName returns the module account info by module name
      tags:
      - Query
  /cosmos/auth/v1beta1/params:
    get:
      operationId: Params_B N L Z 7
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.auth.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries all parameters.
      tags:
      - Query
  /cosmos/authz/v1beta1/grants:
    get:
      operationId: Grants_Z F F W P
      parameters:
      - in: query
        name: granter
        required: false
        type: string
      - in: query
        name: grantee
        required: false
        type: string
      - description: Optional, msg_type_url, when set, will query only grants matching
          given msg type.
        in: query
        name: msg_type_url
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.QueryGrantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      tags:
      - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants_U I W 5 8
      parameters:
      - in: path
        name: grantee
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.QueryGranteeGrantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      tags:
      - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants_Z 0 W C R
      parameters:
      - in: path
        name: granter
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.authz.v1beta1.QueryGranterGrantsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      tags:
      - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      operationId: AllBalances_P L A Q Z
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryAllBalancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AllBalances queries the balance of all coins for a single account.
      tags:
      - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      operationId: Balance_1 Q C 7 V
      parameters:
      - description: address is the address to query balances for.
        in: path
        name: address
        required: true
        type: string
      - description: denom is the coin denom to query balances for.
        in: query
        name: denom
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryBalanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Balance queries the balance of a single coin for a single account.
      tags:
      - Query
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: DenomOwners_9 Y T 1 D
      parameters:
      - description: denom defines the coin denomination to query all account holders
          for.
        in: path
        name: denom
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DenomOwners queries for all account addresses that own a particular
        token

        denomination.'
      tags:
      - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      operationId: DenomsMetadata_F X L X T
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomsMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DenomsMetadata queries the client metadata for all registered coin

        denominations.'
      tags:
      - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      operationId: DenomMetadata_K X V 8 7
      parameters:
      - description: denom is the coin denom to query the metadata for.
        in: path
        name: denom
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      tags:
      - Query
  /cosmos/bank/v1beta1/params:
    get:
      operationId: Params_T G L 0 1
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries the parameters of x/bank module.
      tags:
      - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: SpendableBalances_I 4 8 0 Y
      parameters:
      - description: address is the address to query spendable balances for.
        in: path
        name: address
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QuerySpendableBalancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'SpendableBalances queries the spenable balance of all coins for a
        single

        account.'
      tags:
      - Query
  /cosmos/bank/v1beta1/supply:
    get:
      operationId: TotalSupply_8 F S A C
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QueryTotalSupplyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: TotalSupply queries the total supply of all coins.
      tags:
      - Query
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      operationId: SupplyOf_A S 6 P N
      parameters:
      - description: denom is the coin denom to query balances for.
        in: query
        name: denom
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.bank.v1beta1.QuerySupplyOfResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: SupplyOf queries the supply of a single coin.
      tags:
      - Query
  /cosmos/base/node/v1beta1/config:
    get:
      operationId: Config_Y S W M N
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.node.v1beta1.ConfigResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Config queries for the operator configuration.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery_Z Y W 9 V
      parameters:
      - format: byte
        in: query
        name: data
        required: false
        type: string
      - in: query
        name: path
        required: false
        type: string
      - format: int64
        in: query
        name: height
        required: false
        type: string
      - in: query
        name: prove
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ABCIQueryResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'ABCIQuery defines a query handler that supports ABCI queries directly
        to

        the application, bypassing Tendermint completely. The ABCI query must

        contain a valid and supported path, including app, custom, p2p, and store.'
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      operationId: GetLatestBlock_S T T 2 0
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetLatestBlockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetLatestBlock returns the latest block.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      operationId: GetBlockByHeight_4 Q F V F
      parameters:
      - format: int64
        in: path
        name: height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetBlockByHeight queries block for given height.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      operationId: GetNodeInfo_8 2 V 5 4
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetNodeInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetNodeInfo queries the current node info.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      operationId: GetSyncing_X 6 Q O Z
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetSyncingResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetSyncing queries node syncing.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      operationId: GetLatestValidatorSet_M X F Y 1
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetLatestValidatorSet queries latest validator-set.
      tags:
      - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      operationId: GetValidatorSetByHeight_C T 9 5 W
      parameters:
      - format: int64
        in: path
        name: height
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      tags:
      - Service
  /cosmos/distribution/v1beta1/community_pool:
    get:
      operationId: CommunityPool_M W J S Z
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryCommunityPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: CommunityPool queries the community pool coins.
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards:
    get:
      operationId: DelegationTotalRewards_B 6 A J D
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DelegationTotalRewards queries the total rewards accrued by a each

        validator.'
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}:
    get:
      operationId: DelegationRewards_J 0 R N 8
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/validators:
    get:
      operationId: DelegatorValidators_R C 9 E F
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: DelegatorValidators queries the validators of a delegator.
      tags:
      - Query
  /cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address:
    get:
      operationId: DelegatorWithdrawAddress_T 5 7 0 N
      parameters:
      - description: delegator_address defines the delegator address to query for.
        in: path
        name: delegator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      tags:
      - Query
  /cosmos/distribution/v1beta1/params:
    get:
      operationId: Params_Z B Y 8 F
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries params of the distribution module.
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/commission:
    get:
      operationId: ValidatorCommission_K K H B Q
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ValidatorCommission queries accumulated commission for a validator.
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards:
    get:
      operationId: ValidatorOutstandingRewards_N P A J W
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      tags:
      - Query
  /cosmos/distribution/v1beta1/validators/{validator_address}/slashes:
    get:
      operationId: ValidatorSlashes_K 9 G J R
      parameters:
      - description: validator_address defines the validator address to query for.
        in: path
        name: validator_address
        required: true
        type: string
      - description: starting_height defines the optional starting height to query
          the slashes.
        format: uint64
        in: query
        name: starting_height
        required: false
        type: string
      - description: starting_height defines the optional ending height to query the
          slashes.
        format: uint64
        in: query
        name: ending_height
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ValidatorSlashes queries slash events of a validator.
      tags:
      - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      operationId: AllEvidence_Z 3 T E T
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.evidence.v1beta1.QueryAllEvidenceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AllEvidence queries all evidence.
      tags:
      - Query
  /cosmos/evidence/v1beta1/evidence/{evidence_hash}:
    get:
      operationId: Evidence_9 Y E 6 N
      parameters:
      - description: evidence_hash defines the hash of the requested evidence.
        format: byte
        in: path
        name: evidence_hash
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.evidence.v1beta1.QueryEvidenceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Evidence queries evidence based on evidence hash.
      tags:
      - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      operationId: Allowance_N F L 8 B
      parameters:
      - description: granter is the address of the user granting an allowance of their
          funds.
        in: path
        name: granter
        required: true
        type: string
      - description: grantee is the address of the user being granted an allowance
          of another user's funds.
        in: path
        name: grantee
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Allowance returns fee granted to the grantee by the granter.
      tags:
      - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      operationId: Allowances_D 7 T G B
      parameters:
      - in: path
        name: grantee
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Allowances returns all the grants for address.
      tags:
      - Query
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter_4 K 7 1 5
      parameters:
      - in: path
        name: granter
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AllowancesByGranter returns all the grants given by an address
      tags:
      - Query
  /cosmos/gov/v1/params/{params_type}:
    get:
      operationId: Params_O K 7 0 T
      parameters:
      - description: 'params_type defines which parameters to query for, can be one
          of "voting",

          "tallying" or "deposit".'
        in: path
        name: params_type
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries all parameters of the gov module.
      tags:
      - Query
  /cosmos/gov/v1/proposals:
    get:
      operationId: Proposals_C J E 8 5
      parameters:
      - default: PROPOSAL_STATUS_UNSPECIFIED
        description: "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED:\
          \ PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
          \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n\
          period.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
          \ defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED:\
          \ PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n\
          passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a\
          \ proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
          \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
          failed."
        enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
        in: query
        name: proposal_status
        required: false
        type: string
      - description: voter defines the voter address for the proposals.
        in: query
        name: voter
        required: false
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: query
        name: depositor
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryProposalsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Proposals queries all proposals based on given status.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}:
    get:
      operationId: Proposal_5 I R P R
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Proposal queries proposal details based on ProposalID.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits:
    get:
      operationId: Deposits_E 7 6 M S
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryDepositsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Deposits queries all deposits of a single proposal.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Deposit_4 2 K G U
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: path
        name: depositor
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryDepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Deposit queries single deposit information based proposalID, depositAddr.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/tally:
    get:
      operationId: TallyResult_R 4 U Z E
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: TallyResult queries the tally of a proposal vote.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes:
    get:
      operationId: Votes_E B V F L
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryVotesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Votes queries votes of a given proposal.
      tags:
      - Query
  /cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Vote_K 3 F 3 8
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: voter defines the voter address for the proposals.
        in: path
        name: voter
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1.QueryVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Vote queries voted information based on proposalID, voterAddr.
      tags:
      - Query
  /cosmos/gov/v1beta1/params/{params_type}:
    get:
      operationId: Params_G H 8 3 V
      parameters:
      - description: 'params_type defines which parameters to query for, can be one
          of "voting",

          "tallying" or "deposit".'
        in: path
        name: params_type
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries all parameters of the gov module.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals:
    get:
      operationId: Proposals_C H 0 A X
      parameters:
      - default: PROPOSAL_STATUS_UNSPECIFIED
        description: "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED:\
          \ PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD:\
          \ PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n\
          period.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD\
          \ defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED:\
          \ PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n\
          passed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a\
          \ proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
          \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
          failed."
        enum:
        - PROPOSAL_STATUS_UNSPECIFIED
        - PROPOSAL_STATUS_DEPOSIT_PERIOD
        - PROPOSAL_STATUS_VOTING_PERIOD
        - PROPOSAL_STATUS_PASSED
        - PROPOSAL_STATUS_REJECTED
        - PROPOSAL_STATUS_FAILED
        in: query
        name: proposal_status
        required: false
        type: string
      - description: voter defines the voter address for the proposals.
        in: query
        name: voter
        required: false
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: query
        name: depositor
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryProposalsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Proposals queries all proposals based on given status.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}:
    get:
      operationId: Proposal_L 7 4 R 4
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Proposal queries proposal details based on ProposalID.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits:
    get:
      operationId: Deposits_J W U Y C
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryDepositsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Deposits queries all deposits of a single proposal.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}:
    get:
      operationId: Deposit_D 7 8 I R
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: depositor defines the deposit addresses from the proposals.
        in: path
        name: depositor
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryDepositResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Deposit queries single deposit information based proposalID, depositAddr.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/tally:
    get:
      operationId: TallyResult_D E E Y P
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: TallyResult queries the tally of a proposal vote.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes:
    get:
      operationId: Votes_J Y S 4 5
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryVotesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Votes queries votes of a given proposal.
      tags:
      - Query
  /cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}:
    get:
      operationId: Vote_M E D D W
      parameters:
      - description: proposal_id defines the unique id of the proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: voter defines the voter address for the proposals.
        in: path
        name: voter
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.gov.v1beta1.QueryVoteResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Vote queries voted information based on proposalID, voterAddr.
      tags:
      - Query
  /cosmos/group/v1/group_info/{group_id}:
    get:
      operationId: GroupInfo_U 6 0 O R
      parameters:
      - description: group_id is the unique ID of the group.
        format: uint64
        in: path
        name: group_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupInfo queries group info based on group id.
      tags:
      - Query
  /cosmos/group/v1/group_members/{group_id}:
    get:
      operationId: GroupMembers_3 Z G A 3
      parameters:
      - description: group_id is the unique ID of the group.
        format: uint64
        in: path
        name: group_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupMembersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupMembers queries members of a group
      tags:
      - Query
  /cosmos/group/v1/group_policies_by_admin/{admin}:
    get:
      operationId: GroupPoliciesByAdmin_B S K W 9
      parameters:
      - description: admin is the admin address of the group policy.
        in: path
        name: admin
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupPoliciesByAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupsByAdmin queries group policies by admin address.
      tags:
      - Query
  /cosmos/group/v1/group_policies_by_group/{group_id}:
    get:
      operationId: GroupPoliciesByGroup_A 8 7 W P
      parameters:
      - description: group_id is the unique ID of the group policy's group.
        format: uint64
        in: path
        name: group_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupPoliciesByGroupResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupPoliciesByGroup queries group policies by group id.
      tags:
      - Query
  /cosmos/group/v1/group_policy_info/{address}:
    get:
      operationId: GroupPolicyInfo_V Q 3 W Y
      parameters:
      - description: address is the account address of the group policy.
        in: path
        name: address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupPolicyInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupPolicyInfo queries group policy info based on account address
        of group policy.
      tags:
      - Query
  /cosmos/group/v1/groups:
    get:
      description: 'Since: cosmos-sdk 0.47.1'
      operationId: Groups_H A 1 A L
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Groups queries all groups in state.
      tags:
      - Query
  /cosmos/group/v1/groups_by_admin/{admin}:
    get:
      operationId: GroupsByAdmin_C O S W 4
      parameters:
      - description: admin is the account address of a group's admin.
        in: path
        name: admin
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupsByAdminResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupsByAdmin queries groups by admin address.
      tags:
      - Query
  /cosmos/group/v1/groups_by_member/{address}:
    get:
      operationId: GroupsByMember_M 4 X V B
      parameters:
      - description: address is the group member address.
        in: path
        name: address
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryGroupsByMemberResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GroupsByMember queries groups by member address.
      tags:
      - Query
  /cosmos/group/v1/proposal/{proposal_id}:
    get:
      operationId: Proposal_X 4 1 3 2
      parameters:
      - description: proposal_id is the unique ID of a proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Proposal queries a proposal based on proposal id.
      tags:
      - Query
  /cosmos/group/v1/proposals/{proposal_id}/tally:
    get:
      operationId: TallyResult_Q R U 7 Y
      parameters:
      - description: proposal_id is the unique id of a proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryTallyResultResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'TallyResult returns the tally result of a proposal. If the proposal
        is

        still in voting period, then this query computes the current tally state,

        which might not be final. On the other hand, if the proposal is final,

        then it simply returns the `final_tally_result` state stored in the

        proposal itself.'
      tags:
      - Query
  /cosmos/group/v1/proposals_by_group_policy/{address}:
    get:
      operationId: ProposalsByGroupPolicy_E 7 4 W M
      parameters:
      - description: address is the account address of the group policy related to
          proposals.
        in: path
        name: address
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryProposalsByGroupPolicyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ProposalsByGroupPolicy queries proposals based on account address of
        group policy.
      tags:
      - Query
  /cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}:
    get:
      operationId: VoteByProposalVoter_H S 5 W I
      parameters:
      - description: proposal_id is the unique ID of a proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: voter is a proposal voter account address.
        in: path
        name: voter
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryVoteByProposalVoterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: VoteByProposalVoter queries a vote by proposal id and voter.
      tags:
      - Query
  /cosmos/group/v1/votes_by_proposal/{proposal_id}:
    get:
      operationId: VotesByProposal_J B N H L
      parameters:
      - description: proposal_id is the unique ID of a proposal.
        format: uint64
        in: path
        name: proposal_id
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryVotesByProposalResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: VotesByProposal queries a vote by proposal.
      tags:
      - Query
  /cosmos/group/v1/votes_by_voter/{voter}:
    get:
      operationId: VotesByVoter_U 3 V E D
      parameters:
      - description: voter is a proposal voter account address.
        in: path
        name: voter
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.group.v1.QueryVotesByVoterResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: VotesByVoter queries a vote by voter.
      tags:
      - Query
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      operationId: AnnualProvisions_E A X Y O
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.QueryAnnualProvisionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AnnualProvisions current minting annual provisions value.
      tags:
      - Query
  /cosmos/mint/v1beta1/genesis_time:
    get:
      operationId: GenesisTime_3 R 2 B D
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.mint.v1.QueryGenesisTimeResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GenesisTime returns the genesis time.
      tags:
      - Query
  /cosmos/mint/v1beta1/inflation:
    get:
      operationId: Inflation_U 3 C X C
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.QueryInflationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Inflation returns the current minting inflation value.
      tags:
      - Query
  /cosmos/mint/v1beta1/inflation_rate:
    get:
      operationId: InflationRate_N N 0 K A
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.mint.v1.QueryInflationRateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: InflationRate returns the current inflation rate.
      tags:
      - Query
  /cosmos/mint/v1beta1/params:
    get:
      operationId: Params_A J 6 8 J
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.mint.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params returns the total set of minting parameters.
      tags:
      - Query
  /cosmos/nft/v1beta1/balance/{owner}/{class_id}:
    get:
      operationId: Balance_Z 8 L L 1
      parameters:
      - in: path
        name: owner
        required: true
        type: string
      - in: path
        name: class_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryBalanceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Balance queries the number of NFTs of a given class owned by the owner,
        same as balanceOf in ERC721
      tags:
      - Query
  /cosmos/nft/v1beta1/classes:
    get:
      operationId: Classes_I 9 7 N 6
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryClassesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Classes queries all NFT classes
      tags:
      - Query
  /cosmos/nft/v1beta1/classes/{class_id}:
    get:
      operationId: Class_V 1 L G 0
      parameters:
      - in: path
        name: class_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryClassResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Class queries an NFT class based on its id
      tags:
      - Query
  /cosmos/nft/v1beta1/nfts:
    get:
      operationId: NFTs_5 M A I N
      parameters:
      - in: query
        name: class_id
        required: false
        type: string
      - in: query
        name: owner
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryNFTsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'NFTs queries all NFTs of a given class or owner,choose at least one
        of the two, similar to tokenByIndex in

        ERC721Enumerable'
      tags:
      - Query
  /cosmos/nft/v1beta1/nfts/{class_id}/{id}:
    get:
      operationId: NFT_B 1 O G M
      parameters:
      - in: path
        name: class_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryNFTResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: NFT queries an NFT based on its class and id.
      tags:
      - Query
  /cosmos/nft/v1beta1/owner/{class_id}/{id}:
    get:
      operationId: Owner_3 8 O I 4
      parameters:
      - in: path
        name: class_id
        required: true
        type: string
      - in: path
        name: id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QueryOwnerResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Owner queries the owner of the NFT based on its class and id, same
        as ownerOf in ERC721
      tags:
      - Query
  /cosmos/nft/v1beta1/supply/{class_id}:
    get:
      operationId: Supply_L 3 5 6 N
      parameters:
      - in: path
        name: class_id
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.nft.v1beta1.QuerySupplyResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Supply queries the number of NFTs from the given class, same as totalSupply
        of ERC721.
      tags:
      - Query
  /cosmos/params/v1beta1/params:
    get:
      operationId: Params_L V A M 4
      parameters:
      - description: subspace defines the module to query the parameter for.
        in: query
        name: subspace
        required: false
        type: string
      - description: key defines the key of the parameter in the subspace.
        in: query
        name: key
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.params.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'Params queries a specific parameter of a module, given its subspace
        and

        key.'
      tags:
      - Query
  /cosmos/params/v1beta1/subspaces:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Subspaces_L B D E M
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.params.v1beta1.QuerySubspacesResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Subspaces queries for all registered subspaces and all keys for a subspace.
      tags:
      - Query
  /cosmos/slashing/v1beta1/params:
    get:
      operationId: Params_5 F F 5 C
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries the parameters of slashing module
      tags:
      - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      operationId: SigningInfos_R 0 I G O
      parameters:
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.QuerySigningInfosResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: SigningInfos queries signing info of all validators
      tags:
      - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      operationId: SigningInfo_Y X 0 F 6
      parameters:
      - description: cons_address is the address to query signing info of
        in: path
        name: cons_address
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.slashing.v1beta1.QuerySigningInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: SigningInfo queries the signing info of given cons address
      tags:
      - Query
  /cosmos/staking/v1beta1/delegations/{delegator_addr}:
    get:
      operationId: DelegatorDelegations_F I 6 1 2
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: DelegatorDelegations queries all delegations of a given delegator address.
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations:
    get:
      operationId: Redelegations_9 S 8 L S
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: src_validator_addr defines the validator address to redelegate
          from.
        in: query
        name: src_validator_addr
        required: false
        type: string
      - description: dst_validator_addr defines the validator address to redelegate
          to.
        in: query
        name: dst_validator_addr
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryRedelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Redelegations queries redelegations of given address.
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations:
    get:
      operationId: DelegatorUnbondingDelegations_F M 9 A E
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DelegatorUnbondingDelegations queries all unbonding delegations of
        a given

        delegator address.'
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators:
    get:
      operationId: DelegatorValidators_H 4 6 O O
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DelegatorValidators queries all validators info for given delegator

        address.'
      tags:
      - Query
  /cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}:
    get:
      operationId: DelegatorValidator_B T T J H
      parameters:
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DelegatorValidator queries validator info for given delegator validator

        pair.'
      tags:
      - Query
  /cosmos/staking/v1beta1/historical_info/{height}:
    get:
      operationId: HistoricalInfo_W 4 B B Z
      parameters:
      - description: height defines at which height to query the historical info.
        format: int64
        in: path
        name: height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryHistoricalInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: HistoricalInfo queries the historical info for given height.
      tags:
      - Query
  /cosmos/staking/v1beta1/params:
    get:
      operationId: Params_3 9 A E 2
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Parameters queries the staking parameters.
      tags:
      - Query
  /cosmos/staking/v1beta1/pool:
    get:
      operationId: Pool_C R U D 9
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryPoolResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Pool queries the pool info.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators:
    get:
      operationId: Validators_5 E O H 2
      parameters:
      - description: status enables to query for validators matching a given status.
        in: query
        name: status
        required: false
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Validators queries all validators that match the given status.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}:
    get:
      operationId: Validator_E 5 2 F R
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Validator queries validator info for given validator address.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations:
    get:
      operationId: ValidatorDelegations_8 4 M C R
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ValidatorDelegations queries delegate info for given validator.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}:
    get:
      operationId: Delegation_7 C J 5 I
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryDelegationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Delegation queries delegate info for given validator delegator pair.
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation:
    get:
      operationId: UnbondingDelegation_F O W I 0
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: delegator_addr defines the delegator address to query for.
        in: path
        name: delegator_addr
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'UnbondingDelegation queries unbonding info for given validator delegator

        pair.'
      tags:
      - Query
  /cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations:
    get:
      operationId: ValidatorUnbondingDelegations_R A L B G
      parameters:
      - description: validator_addr defines the validator address to query for.
        in: path
        name: validator_addr
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ValidatorUnbondingDelegations queries unbonding delegations of a validator.
      tags:
      - Query
  /cosmos/tx/v1beta1/simulate:
    post:
      operationId: Simulate_V R G T W
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cosmos.tx.v1beta1.SimulateRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.SimulateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Simulate simulates executing a transaction for estimating gas usage.
      tags:
      - Service
  /cosmos/tx/v1beta1/txs:
    get:
      operationId: GetTxsEvent_N H O 8 9
      parameters:
      - collectionFormat: multi
        description: events is the list of transaction event type.
        in: query
        items:
          type: string
        name: events
        required: false
        type: array
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      - default: ORDER_BY_UNSPECIFIED
        description: " - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown\
          \ sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC:\
          \ ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC\
          \ defines descending order"
        enum:
        - ORDER_BY_UNSPECIFIED
        - ORDER_BY_ASC
        - ORDER_BY_DESC
        in: query
        name: order_by
        required: false
        type: string
      - description: page is the page number to query, starts at 1. If not provided,
          will default to first page.
        format: uint64
        in: query
        name: page
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: limit
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxsEventResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetTxsEvent fetches txs by event.
      tags:
      - Service
    post:
      operationId: BroadcastTx_R Q B G T
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastTxRequest'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastTxResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: BroadcastTx broadcast transaction.
      tags:
      - Service
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      description: 'Since: cosmos-sdk 0.45.2'
      operationId: GetBlockWithTxs_C P Y J 4
      parameters:
      - description: height is the height of the block to query.
        format: int64
        in: path
        name: height
        required: true
        type: string
      - description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        in: query
        name: pagination.key
        required: false
        type: string
      - description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        in: query
        name: pagination.offset
        required: false
        type: string
      - description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        in: query
        name: pagination.limit
        required: false
        type: string
      - description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        in: query
        name: pagination.count_total
        required: false
        type: boolean
      - description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        in: query
        name: pagination.reverse
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetBlockWithTxsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetBlockWithTxs fetches a block with decoded txs.
      tags:
      - Service
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      operationId: GetTx_J E Z D U
      parameters:
      - description: hash is the tx hash to query, encoded as a hex string.
        in: path
        name: hash
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.tx.v1beta1.GetTxResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: GetTx fetches a tx by hash.
      tags:
      - Service
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      operationId: AppliedPlan_E O 0 5 M
      parameters:
      - description: name is the name of the applied plan to query for.
        in: path
        name: name
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryAppliedPlanResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      tags:
      - Query
  /cosmos/upgrade/v1beta1/authority:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Authority_O 0 0 P 3
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryAuthorityResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Returns the account with authority to conduct upgrades
      tags:
      - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      operationId: CurrentPlan_R J 2 Q Z
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryCurrentPlanResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: CurrentPlan queries the current upgrade plan.
      tags:
      - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions_8 V M Z 7
      parameters:
      - description: 'module_name is a field to query a specific module

          consensus version from state. Leaving this empty will

          fetch the full list of module versions from state.'
        in: query
        name: module_name
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryModuleVersionsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: ModuleVersions queries the list of module versions from state.
      tags:
      - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      operationId: UpgradedConsensusState_L U C W S
      parameters:
      - description: 'last height of the current chain must be sent in request

          as this is the height under which next consensus state is stored'
        format: int64
        in: path
        name: last_height
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)'
      tags:
      - Query
  /qgb/v1/attestations/nonce/earliest:
    get:
      operationId: EarliestAttestationNonce_3 N M T 9
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryEarliestAttestationNonceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: EarliestAttestationNonce queries the earliest attestation nonce.
      tags:
      - Query
  /qgb/v1/attestations/nonce/latest:
    get:
      operationId: LatestAttestationNonce_7 Y Y T 8
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryLatestAttestationNonceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: LatestAttestationNonce queries latest attestation nonce.
      tags:
      - Query
  /qgb/v1/attestations/requests/{nonce}:
    get:
      operationId: AttestationRequestByNonce_S I A 1 6
      parameters:
      - format: uint64
        in: path
        name: nonce
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryAttestationRequestByNonceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'AttestationRequestByNonce queries attestation request by nonce.

        Returns nil if not found.'
      tags:
      - Query
  /qgb/v1/data_commitment/latest:
    get:
      operationId: LatestDataCommitment_G 6 I G F
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryLatestDataCommitmentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: LatestDataCommitment returns the latest data commitment in store
      tags:
      - Query
  /qgb/v1/data_commitment/range/height:
    get:
      operationId: DataCommitmentRangeForHeight_D V F K S
      parameters:
      - format: uint64
        in: query
        name: height
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryDataCommitmentRangeForHeightResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'DataCommitmentRangeForHeight returns the data commitment window

        that includes the provided height'
      tags:
      - Query
  /qgb/v1/evm_address:
    get:
      operationId: EVMAddress_S 1 U Y 6
      parameters:
      - in: query
        name: validator_address
        required: false
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryEVMAddressResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'EVMAddress returns the evm address associated with a supplied

        validator address'
      tags:
      - Query
  /qgb/v1/params:
    get:
      operationId: Params_6 B E A M
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryParamsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: Params queries the current parameters for the blobstream module
      tags:
      - Query
  /qgb/v1/unbonding:
    get:
      operationId: LatestUnbondingHeight_8 3 Y V N
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryLatestUnbondingHeightResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: LatestUnbondingHeight returns the latest unbonding height
      tags:
      - Query
  /qgb/v1/valset/request/before/{nonce}:
    get:
      operationId: LatestValsetRequestBeforeNonce_L P 9 I I
      parameters:
      - format: uint64
        in: path
        name: nonce
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/celestia.qgb.v1.QueryLatestValsetRequestBeforeNonceResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/grpc.gateway.runtime.Error'
      summary: 'LatestValsetRequestBeforeNonce Queries latest Valset request before
        nonce.

        And, even if the current nonce is a valset, it will return the previous

        one.

        If the provided nonce is 1, it will return an error, because, there is

        no valset before nonce 1.'
      tags:
      - Query
definitions:
  celestia.blob.v1.Params:
    description: Params defines the parameters for the module.
    properties:
      gas_per_blob_byte:
        format: int64
        type: integer
      gov_max_square_size:
        format: uint64
        type: string
    type: object
  celestia.blob.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        $ref: '#/definitions/celestia.blob.v1.Params'
    type: object
  celestia.mint.v1.QueryAnnualProvisionsResponse:
    description: 'QueryAnnualProvisionsResponse is the response type for the

      Query/AnnualProvisions RPC method.'
    properties:
      annual_provisions:
        description: AnnualProvisions is the current annual provisions.
        format: byte
        type: string
    type: object
  celestia.mint.v1.QueryGenesisTimeResponse:
    description: 'QueryGenesisTimeResponse is the response type for the Query/GenesisTime
      RPC

      method.'
    properties:
      genesis_time:
        description: GenesisTime is the timestamp associated with the first block.
        format: date-time
        type: string
    type: object
  celestia.mint.v1.QueryInflationRateResponse:
    description: 'QueryInflationRateResponse is the response type for the Query/InflationRate

      RPC method.'
    properties:
      inflation_rate:
        description: InflationRate is the current inflation rate.
        format: byte
        type: string
    type: object
  celestia.qgb.v1.BridgeValidator:
    properties:
      evm_address:
        description: EVM address that will be used by the validator to sign messages.
        type: string
      power:
        description: Voting power of the validator.
        format: uint64
        type: string
    title: BridgeValidator represents a validator's ETH address and its power
    type: object
  celestia.qgb.v1.DataCommitment:
    description: 'DataCommitment is the data commitment request message that will
      be signed

      using orchestrators.

      It does not contain a `commitment` field as this message will be created

      inside the state machine and it doesn''t make sense to ask tendermint for the

      commitment there.

      The range defined by begin_block and end_block is end exclusive.'
    properties:
      begin_block:
        description: 'First block defining the ordered set of blocks used to create
          the

          commitment.'
        format: uint64
        type: string
      end_block:
        description: 'End exclusive last block defining the ordered set of blocks
          used to create

          the commitment.'
        format: uint64
        type: string
      nonce:
        format: uint64
        title: 'Universal nonce defined under:

          https://github.com/celestiaorg/celestia-app/pull/464'
        type: string
      time:
        format: date-time
        title: Block time where this data commitment was created
        type: string
    type: object
  celestia.qgb.v1.Params:
    description: Params represent Blobstream genesis and store parameters.
    properties:
      data_commitment_window:
        format: uint64
        type: string
    type: object
  celestia.qgb.v1.QueryAttestationRequestByNonceResponse:
    properties:
      attestation:
        $ref: '#/definitions/google.protobuf.Any'
        title: 'AttestationRequestI is either a Data Commitment or a Valset.

          This was decided as part of the universal nonce approach under:

          https://github.com/celestiaorg/celestia-app/issues/468#issuecomment-1156887715'
    title: QueryAttestationRequestByNonceResponse
    type: object
  celestia.qgb.v1.QueryDataCommitmentRangeForHeightResponse:
    properties:
      data_commitment:
        $ref: '#/definitions/celestia.qgb.v1.DataCommitment'
    title: QueryDataCommitmentRangeForHeightResponse
    type: object
  celestia.qgb.v1.QueryEVMAddressResponse:
    properties:
      evm_address:
        type: string
    title: QueryEVMAddressResponse
    type: object
  celestia.qgb.v1.QueryEarliestAttestationNonceResponse:
    properties:
      nonce:
        format: uint64
        type: string
    title: QueryEarliestAttestationNonceResponse earliest attestation nonce response
    type: object
  celestia.qgb.v1.QueryLatestAttestationNonceResponse:
    properties:
      nonce:
        format: uint64
        type: string
    title: QueryLatestAttestationNonceResponse latest attestation nonce response
    type: object
  celestia.qgb.v1.QueryLatestDataCommitmentResponse:
    properties:
      data_commitment:
        $ref: '#/definitions/celestia.qgb.v1.DataCommitment'
    title: QueryLatestDataCommitmentResponse
    type: object
  celestia.qgb.v1.QueryLatestUnbondingHeightResponse:
    properties:
      height:
        format: uint64
        type: string
    title: QueryLatestUnbondingHeightResponse
    type: object
  celestia.qgb.v1.QueryLatestValsetRequestBeforeNonceResponse:
    properties:
      valset:
        $ref: '#/definitions/celestia.qgb.v1.Valset'
    title: 'QueryLatestValsetRequestBeforeNonceResponse latest Valset request before

      height response'
    type: object
  celestia.qgb.v1.QueryParamsResponse:
    properties:
      params:
        $ref: '#/definitions/celestia.qgb.v1.Params'
    title: QueryParamsResponse
    type: object
  celestia.qgb.v1.Valset:
    properties:
      height:
        format: uint64
        title: Current chain height
        type: string
      members:
        description: List of BridgeValidator containing the current validator set.
        items:
          $ref: '#/definitions/celestia.qgb.v1.BridgeValidator'
        type: array
      nonce:
        format: uint64
        title: 'Universal nonce defined under:

          https://github.com/celestiaorg/celestia-app/pull/464'
        type: string
      time:
        format: date-time
        title: Block time where this valset was created
        type: string
    title: 'Valset is the EVM Bridge Multsig Set, each Blobstream validator also

      maintains an ETH key to sign messages, these are used to check signatures on

      ETH because of the significant gas savings'
    type: object
  cosmos.app.v1alpha1.Config:
    description: 'Config represents the configuration for a Cosmos SDK ABCI app.

      It is intended that all state machine logic including the version of

      baseapp and tx handlers (and possibly even Tendermint) that an app needs

      can be described in a config object. For compatibility, the framework should

      allow a mixture of declarative and imperative app wiring, however, apps

      that strive for the maximum ease of maintainability should be able to describe

      their state machine with a config object alone.'
    properties:
      modules:
        description: modules are the module configurations for the app.
        items:
          $ref: '#/definitions/cosmos.app.v1alpha1.ModuleConfig'
        type: array
    type: object
  cosmos.app.v1alpha1.ModuleConfig:
    description: ModuleConfig is a module configuration for an app.
    properties:
      config:
        $ref: '#/definitions/google.protobuf.Any'
        description: 'config is the config object for the module. Module config messages
          should

          define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension.'
      name:
        description: 'name is the unique name of the module within the app. It should
          be a name

          that persists between different versions of a module so that modules

          can be smoothly upgraded to new versions.


          For example, for the module cosmos.bank.module.v1.Module, we may chose

          to simply name the module "bank" in the app. When we upgrade to

          cosmos.bank.module.v2.Module, the app-specific name "bank" stays the same

          and the framework knows that the v2 module should receive all the same state

          that the v1 module had. Note: modules should provide info on which versions

          they can migrate from in the ModuleDescriptor.can_migration_from field.'
        type: string
    type: object
  cosmos.app.v1alpha1.QueryConfigResponse:
    description: QueryConfigRequest is the Query/Config response type.
    properties:
      config:
        $ref: '#/definitions/cosmos.app.v1alpha1.Config'
        description: config is the current app config.
    type: object
  cosmos.auth.v1beta1.AddressBytesToStringResponse:
    description: 'AddressBytesToStringResponse is the response type for AddressString
      rpc method.


      Since: cosmos-sdk 0.46'
    properties:
      address_string:
        type: string
    type: object
  cosmos.auth.v1beta1.AddressStringToBytesResponse:
    description: 'AddressStringToBytesResponse is the response type for AddressBytes
      rpc method.


      Since: cosmos-sdk 0.46'
    properties:
      address_bytes:
        format: byte
        type: string
    type: object
  cosmos.auth.v1beta1.Bech32PrefixResponse:
    description: 'Bech32PrefixResponse is the response type for Bech32Prefix rpc method.


      Since: cosmos-sdk 0.46'
    properties:
      bech32_prefix:
        type: string
    type: object
  cosmos.auth.v1beta1.Params:
    description: Params defines the parameters for the auth module.
    properties:
      max_memo_characters:
        format: uint64
        type: string
      sig_verify_cost_ed25519:
        format: uint64
        type: string
      sig_verify_cost_secp256k1:
        format: uint64
        type: string
      tx_sig_limit:
        format: uint64
        type: string
      tx_size_cost_per_byte:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
    description: 'Since: cosmos-sdk 0.46.2'
    properties:
      account_address:
        type: string
    title: QueryAccountAddressByIDResponse is the response type for AccountAddressByID
      rpc method
    type: object
  cosmos.auth.v1beta1.QueryAccountResponse:
    description: QueryAccountResponse is the response type for the Query/Account RPC
      method.
    properties:
      account:
        $ref: '#/definitions/google.protobuf.Any'
        description: account defines the account of the corresponding address.
    type: object
  cosmos.auth.v1beta1.QueryAccountsResponse:
    description: 'QueryAccountsResponse is the response type for the Query/Accounts
      RPC method.


      Since: cosmos-sdk 0.43'
    properties:
      accounts:
        items:
          $ref: '#/definitions/google.protobuf.Any'
        title: accounts are the existing accounts
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
    description: QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName
      RPC method.
    properties:
      account:
        $ref: '#/definitions/google.protobuf.Any'
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountsResponse:
    description: 'QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts
      RPC method.


      Since: cosmos-sdk 0.46'
    properties:
      accounts:
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
    type: object
  cosmos.auth.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        $ref: '#/definitions/cosmos.auth.v1beta1.Params'
        description: params defines the parameters of the module.
    type: object
  cosmos.authz.v1beta1.Grant:
    description: 'Grant gives permissions to execute

      the provide method with expiration time.'
    properties:
      authorization:
        $ref: '#/definitions/google.protobuf.Any'
      expiration:
        format: date-time
        title: 'time when the grant will expire and will be pruned. If null, then
          the grant

          doesn''t have a time expiration (other conditions  in `authorization`

          may apply to invalidate the grant)'
        type: string
    type: object
  cosmos.authz.v1beta1.GrantAuthorization:
    properties:
      authorization:
        $ref: '#/definitions/google.protobuf.Any'
      expiration:
        format: date-time
        type: string
      grantee:
        type: string
      granter:
        type: string
    title: 'GrantAuthorization extends a grant with both the addresses of the grantee
      and granter.

      It is used in genesis.proto and query.proto'
    type: object
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
    description: QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants
      RPC method.
    properties:
      grants:
        description: grants is a list of grants granted to the grantee.
        items:
          $ref: '#/definitions/cosmos.authz.v1beta1.GrantAuthorization'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
    type: object
  cosmos.authz.v1beta1.QueryGranterGrantsResponse:
    description: QueryGranterGrantsResponse is the response type for the Query/GranterGrants
      RPC method.
    properties:
      grants:
        description: grants is a list of grants granted by the granter.
        items:
          $ref: '#/definitions/cosmos.authz.v1beta1.GrantAuthorization'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
    type: object
  cosmos.authz.v1beta1.QueryGrantsResponse:
    description: QueryGrantsResponse is the response type for the Query/Authorizations
      RPC method.
    properties:
      grants:
        description: authorizations is a list of grants granted for grantee by granter.
        items:
          $ref: '#/definitions/cosmos.authz.v1beta1.Grant'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
    type: object
  cosmos.bank.v1beta1.DenomOwner:
    description: 'DenomOwner defines structure representing an account that owns or
      holds a

      particular denominated token. It contains the account address and account

      balance of the denominated token.


      Since: cosmos-sdk 0.46'
    properties:
      address:
        description: address defines the address that owns a particular denomination.
        type: string
      balance:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        description: balance is the balance of the denominated coin for an account.
    type: object
  cosmos.bank.v1beta1.DenomUnit:
    description: 'DenomUnit represents a struct that describes a given

      denomination unit of the basic token.'
    properties:
      aliases:
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
        type: array
      denom:
        description: denom represents the string name of the given denom unit (e.g
          uatom).
        type: string
      exponent:
        description: 'exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit''s denom

          1 denom = 10^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of ''atom''
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).'
        format: int64
        type: integer
    type: object
  cosmos.bank.v1beta1.Metadata:
    description: 'Metadata represents a struct that describes

      a basic token.'
    properties:
      base:
        description: base represents the base denom (should be the DenomUnit with
          exponent = 0).
        type: string
      denom_units:
        items:
          $ref: '#/definitions/cosmos.bank.v1beta1.DenomUnit'
        title: denom_units represents the list of DenomUnit's for a given coin
        type: array
      description:
        type: string
      display:
        description: 'display indicates the suggested denom that should be

          displayed in clients.'
        type: string
      name:
        description: 'Since: cosmos-sdk 0.43'
        title: 'name defines the name of the token (eg: Cosmos Atom)'
        type: string
      symbol:
        description: 'symbol is the token symbol usually shown on exchanges (eg: ATOM).
          This can

          be the same as the display.


          Since: cosmos-sdk 0.43'
        type: string
      uri:
        description: 'URI to a document (on or off-chain) that contains additional
          information. Optional.


          Since: cosmos-sdk 0.46'
        type: string
      uri_hash:
        description: 'URIHash is a sha256 hash of a document pointed by URI. It''s
          used to verify that

          the document didn''t change. Optional.


          Since: cosmos-sdk 0.46'
        type: string
    type: object
  cosmos.bank.v1beta1.Params:
    description: Params defines the parameters for the bank module.
    properties:
      default_send_enabled:
        type: boolean
      send_enabled:
        items:
          $ref: '#/definitions/cosmos.bank.v1beta1.SendEnabled'
        type: array
    type: object
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    description: 'QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.'
    properties:
      balances:
        description: balances is the balances of all the coins.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.bank.v1beta1.QueryBalanceResponse:
    description: QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
    properties:
      balance:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        description: balance is the balance of the coin.
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    description: 'QueryDenomMetadataResponse is the response type for the Query/DenomMetadata
      RPC

      method.'
    properties:
      metadata:
        $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
        description: metadata describes and provides all the client information for
          the requested token.
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersResponse:
    description: 'QueryDenomOwnersResponse defines the RPC response of a DenomOwners
      RPC query.


      Since: cosmos-sdk 0.46'
    properties:
      denom_owners:
        items:
          $ref: '#/definitions/cosmos.bank.v1beta1.DenomOwner'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    description: 'QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata
      RPC

      method.'
    properties:
      metadatas:
        description: metadata provides the client information for all the registered
          tokens.
        items:
          $ref: '#/definitions/cosmos.bank.v1beta1.Metadata'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.bank.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse defines the response type for querying x/bank
      parameters.
    properties:
      params:
        $ref: '#/definitions/cosmos.bank.v1beta1.Params'
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
    description: 'QuerySpendableBalancesResponse defines the gRPC response structure
      for querying

      an account''s spendable balances.


      Since: cosmos-sdk 0.46'
    properties:
      balances:
        description: balances is the spendable balances of all the coins.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    description: QuerySupplyOfResponse is the response type for the Query/SupplyOf
      RPC method.
    properties:
      amount:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        description: amount is the supply of the coin.
    type: object
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: 'pagination defines the pagination in the response.


          Since: cosmos-sdk 0.43'
      supply:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        title: supply is the supply of the coins
        type: array
    title: 'QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method'
    type: object
  cosmos.bank.v1beta1.SendEnabled:
    description: 'SendEnabled maps coin denom to a send_enabled status (whether a
      denom is

      sendable).'
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    type: object
  cosmos.base.abci.v1beta1.ABCIMessageLog:
    description: ABCIMessageLog defines a structure containing an indexed tx ABCI
      message log.
    properties:
      events:
        description: 'Events contains a slice of Event objects that were emitted during
          some

          execution.'
        items:
          $ref: '#/definitions/cosmos.base.abci.v1beta1.StringEvent'
        type: array
      log:
        type: string
      msg_index:
        format: int64
        type: integer
    type: object
  cosmos.base.abci.v1beta1.Attribute:
    description: 'Attribute defines an attribute wrapper where the key and value are

      strings instead of raw bytes.'
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  cosmos.base.abci.v1beta1.GasInfo:
    description: GasInfo defines tx execution gas context.
    properties:
      gas_used:
        description: GasUsed is the amount of gas actually consumed.
        format: uint64
        type: string
      gas_wanted:
        description: GasWanted is the maximum units of work we allow this tx to perform.
        format: uint64
        type: string
    type: object
  cosmos.base.abci.v1beta1.Result:
    description: Result is the union of ResponseFormat and ResponseCheckTx.
    properties:
      data:
        description: 'Data is any data returned from message or handler execution.
          It MUST be

          length prefixed in order to separate data from multiple message executions.

          Deprecated. This field is still populated, but prefer msg_response instead

          because it also contains the Msg response typeURL.'
        format: byte
        type: string
      events:
        description: 'Events contains a slice of Event objects that were emitted during
          message

          or handler execution.'
        items:
          $ref: '#/definitions/tendermint.abci.Event'
        type: array
      log:
        description: Log contains the log information from message or handler execution.
        type: string
      msg_responses:
        description: 'msg_responses contains the Msg handler responses type packed
          in Anys.


          Since: cosmos-sdk 0.46'
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
    type: object
  cosmos.base.abci.v1beta1.StringEvent:
    description: 'StringEvent defines en Event object wrapper where all the attributes

      contain key/value pairs that are strings instead of raw bytes.'
    properties:
      attributes:
        items:
          $ref: '#/definitions/cosmos.base.abci.v1beta1.Attribute'
        type: array
      type:
        type: string
    type: object
  cosmos.base.abci.v1beta1.TxResponse:
    description: 'TxResponse defines a structure containing relevant tx data and metadata.
      The

      tags are stringified and the log is JSON decoded.'
    properties:
      code:
        description: Response code.
        format: int64
        type: integer
      codespace:
        title: Namespace for the Code
        type: string
      data:
        description: Result bytes, if any.
        type: string
      events:
        description: 'Events defines all the events emitted by processing a transaction.
          Note,

          these events include those emitted by processing all the messages and those

          emitted from the ante. Whereas Logs contains the events, with

          additional metadata, emitted only by processing the messages.


          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45'
        items:
          $ref: '#/definitions/tendermint.abci.Event'
        type: array
      gas_used:
        description: Amount of gas consumed by transaction.
        format: int64
        type: string
      gas_wanted:
        description: Amount of gas requested for transaction.
        format: int64
        type: string
      height:
        format: int64
        title: The block height
        type: string
      info:
        description: Additional information. May be non-deterministic.
        type: string
      logs:
        description: The output of the application's logger (typed). May be non-deterministic.
        items:
          $ref: '#/definitions/cosmos.base.abci.v1beta1.ABCIMessageLog'
        type: array
      raw_log:
        description: 'The output of the application''s logger (raw string). May be

          non-deterministic.'
        type: string
      timestamp:
        description: 'Time of the previous block. For heights > 1, it''s the weighted
          median of

          the timestamps of the valid votes in the block.LastCommit. For height ==
          1,

          it''s genesis time.'
        type: string
      tx:
        $ref: '#/definitions/google.protobuf.Any'
        description: The request transaction bytes.
      txhash:
        description: The transaction hash.
        type: string
    type: object
  cosmos.base.node.v1beta1.ConfigResponse:
    description: ConfigResponse defines the response structure for the Config gRPC
      query.
    properties:
      minimum_gas_price:
        type: string
    type: object
  cosmos.base.query.v1beta1.PageRequest:
    description: "message SomeRequest {\n         Foo some_parameter = 1;\n      \
      \   PageRequest pagination = 2;\n }"
    properties:
      count_total:
        description: 'count_total is set to true  to indicate that the result set
          should include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when key

          is set.'
        type: boolean
      key:
        description: 'key is a value returned in PageResponse.next_key to begin

          querying the next page most efficiently. Only one of offset or key

          should be set.'
        format: byte
        type: string
      limit:
        description: 'limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.'
        format: uint64
        type: string
      offset:
        description: 'offset is a numeric offset that can be used when key is unavailable.

          It is less efficient than using key. Only one of offset or key should

          be set.'
        format: uint64
        type: string
      reverse:
        description: 'reverse is set to true if results are to be returned in the
          descending order.


          Since: cosmos-sdk 0.43'
        type: boolean
    title: 'PageRequest is to be embedded in gRPC request messages for efficient

      pagination. Ex:'
    type: object
  cosmos.base.query.v1beta1.PageResponse:
    description: "PageResponse is to be embedded in gRPC response messages where the\n\
      corresponding request message has used PageRequest.\n\n message SomeResponse\
      \ {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    properties:
      next_key:
        description: 'next_key is the key to be passed to PageRequest.key to

          query the next page most efficiently. It will be empty if

          there are no more results.'
        format: byte
        type: string
      total:
        format: uint64
        title: 'total is total number of results available if PageRequest.count_total

          was set, its value is undefined otherwise'
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
    description: 'ABCIQueryResponse defines the response structure for the ABCIQuery
      gRPC

      query.


      Note: This type is a duplicate of the ResponseQuery proto type defined in

      Tendermint.'
    properties:
      code:
        format: int64
        type: integer
      codespace:
        type: string
      height:
        format: int64
        type: string
      index:
        format: int64
        type: string
      info:
        type: string
      key:
        format: byte
        type: string
      log:
        type: string
      proof_ops:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ProofOps'
      value:
        format: byte
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.Block:
    description: 'Block is tendermint type Block, with the Header proposer address

      field converted to bech32 string.'
    properties:
      data:
        $ref: '#/definitions/tendermint.types.Data'
      header:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Header'
      last_commit:
        $ref: '#/definitions/tendermint.types.Commit'
    type: object
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
    description: 'GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight

      RPC method.'
    properties:
      block:
        $ref: '#/definitions/tendermint.types.Block'
        title: 'Deprecated: please use `sdk_block` instead'
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      sdk_block:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Block'
        title: 'Since: cosmos-sdk 0.47'
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
    description: 'GetLatestBlockResponse is the response type for the Query/GetLatestBlock
      RPC

      method.'
    properties:
      block:
        $ref: '#/definitions/tendermint.types.Block'
        title: 'Deprecated: please use `sdk_block` instead'
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      sdk_block:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Block'
        title: 'Since: cosmos-sdk 0.47'
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
    description: 'GetLatestValidatorSetResponse is the response type for the

      Query/GetValidatorSetByHeight RPC method.'
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
      validators:
        items:
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Validator'
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
    description: 'GetNodeInfoResponse is the response type for the Query/GetNodeInfo
      RPC

      method.'
    properties:
      application_version:
        $ref: '#/definitions/cosmos.base.tendermint.v1beta1.VersionInfo'
      default_node_info:
        $ref: '#/definitions/tendermint.p2p.DefaultNodeInfo'
    type: object
  cosmos.base.tendermint.v1beta1.GetSyncingResponse:
    description: GetSyncingResponse is the response type for the Query/GetSyncing
      RPC method.
    properties:
      syncing:
        type: boolean
    type: object
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
    description: 'GetValidatorSetByHeightResponse is the response type for the

      Query/GetValidatorSetByHeight RPC method.'
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
      validators:
        items:
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Validator'
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Header:
    description: Header defines the structure of a Tendermint block header.
    properties:
      app_hash:
        format: byte
        type: string
      chain_id:
        type: string
      consensus_hash:
        format: byte
        type: string
      data_hash:
        format: byte
        type: string
      evidence_hash:
        format: byte
        title: consensus info
        type: string
      height:
        format: int64
        type: string
      last_block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
        title: prev block info
      last_commit_hash:
        format: byte
        title: hashes of block data
        type: string
      last_results_hash:
        format: byte
        type: string
      next_validators_hash:
        format: byte
        type: string
      proposer_address:
        description: 'proposer_address is the original block proposer address, formatted
          as a Bech32 string.

          In Tendermint, this type is `bytes`, but in the SDK, we convert it to a
          Bech32 string

          for better UX.'
        type: string
      time:
        format: date-time
        type: string
      validators_hash:
        format: byte
        title: hashes from the app output from the prev block
        type: string
      version:
        $ref: '#/definitions/tendermint.version.Consensus'
        title: basic block info
    type: object
  cosmos.base.tendermint.v1beta1.Module:
    properties:
      path:
        title: module path
        type: string
      sum:
        title: checksum
        type: string
      version:
        title: module version
        type: string
    title: Module is the type for VersionInfo
    type: object
  cosmos.base.tendermint.v1beta1.ProofOp:
    description: 'ProofOp defines an operation used for calculating Merkle root. The
      data could

      be arbitrary format, providing nessecary data for example neighbouring node

      hash.


      Note: This type is a duplicate of the ProofOp proto type defined in

      Tendermint.'
    properties:
      data:
        format: byte
        type: string
      key:
        format: byte
        type: string
      type:
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.ProofOps:
    description: 'ProofOps is Merkle proof defined by the list of ProofOps.


      Note: This type is a duplicate of the ProofOps proto type defined in

      Tendermint.'
    properties:
      ops:
        items:
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.ProofOp'
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Validator:
    description: Validator is the type for the validator-set.
    properties:
      address:
        type: string
      proposer_priority:
        format: int64
        type: string
      pub_key:
        $ref: '#/definitions/google.protobuf.Any'
      voting_power:
        format: int64
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.VersionInfo:
    description: VersionInfo is the type for the GetNodeInfoResponse message.
    properties:
      app_name:
        type: string
      build_deps:
        items:
          $ref: '#/definitions/cosmos.base.tendermint.v1beta1.Module'
        type: array
      build_tags:
        type: string
      cosmos_sdk_version:
        title: 'Since: cosmos-sdk 0.43'
        type: string
      git_commit:
        type: string
      go_version:
        type: string
      name:
        type: string
      version:
        type: string
    type: object
  cosmos.base.v1beta1.Coin:
    description: 'Coin defines a token with a denomination and an amount.


      NOTE: The amount field is an Int which implements the custom method

      signatures required by gogoproto.'
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.base.v1beta1.DecCoin:
    description: 'DecCoin defines a token with a denomination and a decimal amount.


      NOTE: The amount field is an Dec which implements the custom method

      signatures required by gogoproto.'
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    description: 'CompactBitArray is an implementation of a space efficient bit array.

      This is used to ensure that the encoded data takes up a minimal amount of

      space after proto encoding.

      This is not thread safe, and is not intended for concurrent usage.'
    properties:
      elems:
        format: byte
        type: string
      extra_bits_stored:
        format: int64
        type: integer
    type: object
  cosmos.distribution.v1beta1.DelegationDelegatorReward:
    description: 'DelegationDelegatorReward represents the properties

      of a delegator''s delegation reward.'
    properties:
      reward:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
        type: array
      validator_address:
        type: string
    type: object
  cosmos.distribution.v1beta1.Params:
    description: Params defines the set of params for the distribution module.
    properties:
      base_proposer_reward:
        type: string
      bonus_proposer_reward:
        type: string
      community_tax:
        type: string
      withdraw_addr_enabled:
        type: boolean
    type: object
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
    description: 'QueryCommunityPoolResponse is the response type for the Query/CommunityPool

      RPC method.'
    properties:
      pool:
        description: pool defines community pool's coins.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
    description: 'QueryDelegationRewardsResponse is the response type for the

      Query/DelegationRewards RPC method.'
    properties:
      rewards:
        description: rewards defines the rewards accrued by a delegation.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
    description: 'QueryDelegationTotalRewardsResponse is the response type for the

      Query/DelegationTotalRewards RPC method.'
    properties:
      rewards:
        description: rewards defines all the rewards accrued by a delegator.
        items:
          $ref: '#/definitions/cosmos.distribution.v1beta1.DelegationDelegatorReward'
        type: array
      total:
        description: total defines the sum of all the rewards.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
    description: 'QueryDelegatorValidatorsResponse is the response type for the

      Query/DelegatorValidators RPC method.'
    properties:
      validators:
        description: validators defines the validators a delegator is delegating for.
        items:
          type: string
        type: array
    type: object
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
    description: 'QueryDelegatorWithdrawAddressResponse is the response type for the

      Query/DelegatorWithdrawAddress RPC method.'
    properties:
      withdraw_address:
        description: withdraw_address defines the delegator address to query for.
        type: string
    type: object
  cosmos.distribution.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        $ref: '#/definitions/cosmos.distribution.v1beta1.Params'
        description: params defines the parameters of the module.
    type: object
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
    properties:
      commission:
        $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission'
        description: commission defines the commision the validator received.
    title: 'QueryValidatorCommissionResponse is the response type for the

      Query/ValidatorCommission RPC method'
    type: object
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
    description: 'QueryValidatorOutstandingRewardsResponse is the response type for
      the

      Query/ValidatorOutstandingRewards RPC method.'
    properties:
      rewards:
        $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorOutstandingRewards'
    type: object
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
    description: 'QueryValidatorSlashesResponse is the response type for the

      Query/ValidatorSlashes RPC method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      slashes:
        description: slashes defines the slashes the validator received.
        items:
          $ref: '#/definitions/cosmos.distribution.v1beta1.ValidatorSlashEvent'
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    description: 'ValidatorAccumulatedCommission represents accumulated commission

      for a validator kept as a running counter, can be withdrawn at any time.'
    properties:
      commission:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
    description: 'ValidatorOutstandingRewards represents outstanding (un-withdrawn)
      rewards

      for a validator inexpensive to track, allows simple sanity checks.'
    properties:
      rewards:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.DecCoin'
        type: array
    type: object
  cosmos.distribution.v1beta1.ValidatorSlashEvent:
    description: 'ValidatorSlashEvent represents a validator slash event.

      Height is implicit within the store key.

      This is needed to calculate appropriate amount of staking tokens

      for delegations which are withdrawn after a slash has occurred.'
    properties:
      fraction:
        type: string
      validator_period:
        format: uint64
        type: string
    type: object
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
    description: 'QueryAllEvidenceResponse is the response type for the Query/AllEvidence
      RPC

      method.'
    properties:
      evidence:
        description: evidence returns all evidences.
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.evidence.v1beta1.QueryEvidenceResponse:
    description: QueryEvidenceResponse is the response type for the Query/Evidence
      RPC method.
    properties:
      evidence:
        $ref: '#/definitions/google.protobuf.Any'
        description: evidence returns the requested evidence.
    type: object
  cosmos.feegrant.v1beta1.Grant:
    properties:
      allowance:
        $ref: '#/definitions/google.protobuf.Any'
        description: allowance can be any of basic, periodic, allowed fee allowance.
      grantee:
        description: grantee is the address of the user being granted an allowance
          of another user's funds.
        type: string
      granter:
        description: granter is the address of the user granting an allowance of their
          funds.
        type: string
    title: Grant is stored in the KVStore to record a grant with full context
    type: object
  cosmos.feegrant.v1beta1.QueryAllowanceResponse:
    description: QueryAllowanceResponse is the response type for the Query/Allowance
      RPC method.
    properties:
      allowance:
        $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
        description: allowance is a allowance granted for grantee by granter.
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
    description: 'QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter
      RPC method.


      Since: cosmos-sdk 0.46'
    properties:
      allowances:
        description: allowances that have been issued by the granter.
        items:
          $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesResponse:
    description: QueryAllowancesResponse is the response type for the Query/Allowances
      RPC method.
    properties:
      allowances:
        description: allowances are allowance's granted for grantee by granter.
        items:
          $ref: '#/definitions/cosmos.feegrant.v1beta1.Grant'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines an pagination for the response.
    type: object
  cosmos.gov.v1.Deposit:
    description: 'Deposit defines an amount deposited by an account address to an
      active

      proposal.'
    properties:
      amount:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
      depositor:
        type: string
      proposal_id:
        format: uint64
        type: string
    type: object
  cosmos.gov.v1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    properties:
      max_deposit_period:
        description: "Maximum period for Atom holders to deposit on a proposal. Initial\
          \ value: 2\n months."
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
    type: object
  cosmos.gov.v1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    properties:
      deposit_end_time:
        format: date-time
        type: string
      final_tally_result:
        $ref: '#/definitions/cosmos.gov.v1.TallyResult'
        description: 'final_tally_result is the final tally result of the proposal.
          When

          querying a proposal via gRPC, this field is not populated until the

          proposal''s voting period has ended.'
      id:
        format: uint64
        type: string
      messages:
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
      metadata:
        description: metadata is any arbitrary metadata attached to the proposal.
        type: string
      status:
        $ref: '#/definitions/cosmos.gov.v1.ProposalStatus'
      submit_time:
        format: date-time
        type: string
      total_deposit:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
      voting_end_time:
        format: date-time
        type: string
      voting_start_time:
        format: date-time
        type: string
    type: object
  cosmos.gov.v1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: "ProposalStatus enumerates the valid statuses of a proposal.\n\n\
      \ - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default\
      \ proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
      \ defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD:\
      \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
      period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal\
      \ status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
      \ defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
      \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
      failed."
    enum:
    - PROPOSAL_STATUS_UNSPECIFIED
    - PROPOSAL_STATUS_DEPOSIT_PERIOD
    - PROPOSAL_STATUS_VOTING_PERIOD
    - PROPOSAL_STATUS_PASSED
    - PROPOSAL_STATUS_REJECTED
    - PROPOSAL_STATUS_FAILED
    type: string
  cosmos.gov.v1.QueryDepositResponse:
    description: QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
    properties:
      deposit:
        $ref: '#/definitions/cosmos.gov.v1.Deposit'
        description: deposit defines the requested deposit.
    type: object
  cosmos.gov.v1.QueryDepositsResponse:
    description: QueryDepositsResponse is the response type for the Query/Deposits
      RPC method.
    properties:
      deposits:
        items:
          $ref: '#/definitions/cosmos.gov.v1.Deposit'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.gov.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      deposit_params:
        $ref: '#/definitions/cosmos.gov.v1.DepositParams'
        description: deposit_params defines the parameters related to deposit.
      tally_params:
        $ref: '#/definitions/cosmos.gov.v1.TallyParams'
        description: tally_params defines the parameters related to tally.
      voting_params:
        $ref: '#/definitions/cosmos.gov.v1.VotingParams'
        description: voting_params defines the parameters related to voting.
    type: object
  cosmos.gov.v1.QueryProposalResponse:
    description: QueryProposalResponse is the response type for the Query/Proposal
      RPC method.
    properties:
      proposal:
        $ref: '#/definitions/cosmos.gov.v1.Proposal'
    type: object
  cosmos.gov.v1.QueryProposalsResponse:
    description: 'QueryProposalsResponse is the response type for the Query/Proposals
      RPC

      method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      proposals:
        items:
          $ref: '#/definitions/cosmos.gov.v1.Proposal'
        type: array
    type: object
  cosmos.gov.v1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the response type for the Query/Tally
      RPC method.
    properties:
      tally:
        $ref: '#/definitions/cosmos.gov.v1.TallyResult'
        description: tally defines the requested tally.
    type: object
  cosmos.gov.v1.QueryVoteResponse:
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    properties:
      vote:
        $ref: '#/definitions/cosmos.gov.v1.Vote'
        description: vote defined the queried vote.
    type: object
  cosmos.gov.v1.QueryVotesResponse:
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      votes:
        description: votes defined the queried votes.
        items:
          $ref: '#/definitions/cosmos.gov.v1.Vote'
        type: array
    type: object
  cosmos.gov.v1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    properties:
      quorum:
        description: "Minimum percentage of total stake needed to vote for a result\
          \ to be\n considered valid."
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default
          value: 0.5.'
        type: string
      veto_threshold:
        description: "Minimum value of Veto votes to Total votes ratio for proposal\
          \ to be\n vetoed. Default value: 1/3."
        type: string
    type: object
  cosmos.gov.v1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties:
      abstain_count:
        type: string
      no_count:
        type: string
      no_with_veto_count:
        type: string
      yes_count:
        type: string
    type: object
  cosmos.gov.v1.Vote:
    description: 'Vote defines a vote on a governance proposal.

      A Vote consists of a proposal ID, the voter, and the vote option.'
    properties:
      metadata:
        description: metadata is any  arbitrary metadata to attached to the vote.
        type: string
      options:
        items:
          $ref: '#/definitions/cosmos.gov.v1.WeightedVoteOption'
        type: array
      proposal_id:
        format: uint64
        type: string
      voter:
        type: string
    type: object
  cosmos.gov.v1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: "VoteOption enumerates the valid vote options for a given governance\
      \ proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a\
      \ no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote\
      \ option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote\
      \ option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
      \ VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    enum:
    - VOTE_OPTION_UNSPECIFIED
    - VOTE_OPTION_YES
    - VOTE_OPTION_ABSTAIN
    - VOTE_OPTION_NO
    - VOTE_OPTION_NO_WITH_VETO
    type: string
  cosmos.gov.v1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    properties:
      voting_period:
        description: Length of the voting period.
        type: string
    type: object
  cosmos.gov.v1.WeightedVoteOption:
    description: WeightedVoteOption defines a unit of vote for vote split.
    properties:
      option:
        $ref: '#/definitions/cosmos.gov.v1.VoteOption'
      weight:
        type: string
    type: object
  cosmos.gov.v1beta1.Deposit:
    description: 'Deposit defines an amount deposited by an account address to an
      active

      proposal.'
    properties:
      amount:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
      depositor:
        type: string
      proposal_id:
        format: uint64
        type: string
    type: object
  cosmos.gov.v1beta1.DepositParams:
    description: DepositParams defines the params for deposits on governance proposals.
    properties:
      max_deposit_period:
        description: "Maximum period for Atom holders to deposit on a proposal. Initial\
          \ value: 2\n months."
        type: string
      min_deposit:
        description: Minimum deposit for a proposal to enter voting period.
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
    type: object
  cosmos.gov.v1beta1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    properties:
      content:
        $ref: '#/definitions/google.protobuf.Any'
      deposit_end_time:
        format: date-time
        type: string
      final_tally_result:
        $ref: '#/definitions/cosmos.gov.v1beta1.TallyResult'
        description: 'final_tally_result is the final tally result of the proposal.
          When

          querying a proposal via gRPC, this field is not populated until the

          proposal''s voting period has ended.'
      proposal_id:
        format: uint64
        type: string
      status:
        $ref: '#/definitions/cosmos.gov.v1beta1.ProposalStatus'
      submit_time:
        format: date-time
        type: string
      total_deposit:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        type: array
      voting_end_time:
        format: date-time
        type: string
      voting_start_time:
        format: date-time
        type: string
    type: object
  cosmos.gov.v1beta1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: "ProposalStatus enumerates the valid statuses of a proposal.\n\n\
      \ - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default\
      \ proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD\
      \ defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD:\
      \ PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n\
      period.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal\
      \ status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED\
      \ defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED:\
      \ PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n\
      failed."
    enum:
    - PROPOSAL_STATUS_UNSPECIFIED
    - PROPOSAL_STATUS_DEPOSIT_PERIOD
    - PROPOSAL_STATUS_VOTING_PERIOD
    - PROPOSAL_STATUS_PASSED
    - PROPOSAL_STATUS_REJECTED
    - PROPOSAL_STATUS_FAILED
    type: string
  cosmos.gov.v1beta1.QueryDepositResponse:
    description: QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
    properties:
      deposit:
        $ref: '#/definitions/cosmos.gov.v1beta1.Deposit'
        description: deposit defines the requested deposit.
    type: object
  cosmos.gov.v1beta1.QueryDepositsResponse:
    description: QueryDepositsResponse is the response type for the Query/Deposits
      RPC method.
    properties:
      deposits:
        items:
          $ref: '#/definitions/cosmos.gov.v1beta1.Deposit'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.gov.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      deposit_params:
        $ref: '#/definitions/cosmos.gov.v1beta1.DepositParams'
        description: deposit_params defines the parameters related to deposit.
      tally_params:
        $ref: '#/definitions/cosmos.gov.v1beta1.TallyParams'
        description: tally_params defines the parameters related to tally.
      voting_params:
        $ref: '#/definitions/cosmos.gov.v1beta1.VotingParams'
        description: voting_params defines the parameters related to voting.
    type: object
  cosmos.gov.v1beta1.QueryProposalResponse:
    description: QueryProposalResponse is the response type for the Query/Proposal
      RPC method.
    properties:
      proposal:
        $ref: '#/definitions/cosmos.gov.v1beta1.Proposal'
    type: object
  cosmos.gov.v1beta1.QueryProposalsResponse:
    description: 'QueryProposalsResponse is the response type for the Query/Proposals
      RPC

      method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      proposals:
        items:
          $ref: '#/definitions/cosmos.gov.v1beta1.Proposal'
        type: array
    type: object
  cosmos.gov.v1beta1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the response type for the Query/Tally
      RPC method.
    properties:
      tally:
        $ref: '#/definitions/cosmos.gov.v1beta1.TallyResult'
        description: tally defines the requested tally.
    type: object
  cosmos.gov.v1beta1.QueryVoteResponse:
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
    properties:
      vote:
        $ref: '#/definitions/cosmos.gov.v1beta1.Vote'
        description: vote defined the queried vote.
    type: object
  cosmos.gov.v1beta1.QueryVotesResponse:
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      votes:
        description: votes defined the queried votes.
        items:
          $ref: '#/definitions/cosmos.gov.v1beta1.Vote'
        type: array
    type: object
  cosmos.gov.v1beta1.TallyParams:
    description: TallyParams defines the params for tallying votes on governance proposals.
    properties:
      quorum:
        description: "Minimum percentage of total stake needed to vote for a result\
          \ to be\n considered valid."
        format: byte
        type: string
      threshold:
        description: 'Minimum proportion of Yes votes for proposal to pass. Default
          value: 0.5.'
        format: byte
        type: string
      veto_threshold:
        description: "Minimum value of Veto votes to Total votes ratio for proposal\
          \ to be\n vetoed. Default value: 1/3."
        format: byte
        type: string
    type: object
  cosmos.gov.v1beta1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties:
      abstain:
        type: string
      'no':
        type: string
      no_with_veto:
        type: string
      'yes':
        type: string
    type: object
  cosmos.gov.v1beta1.Vote:
    description: 'Vote defines a vote on a governance proposal.

      A Vote consists of a proposal ID, the voter, and the vote option.'
    properties:
      option:
        $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
        description: 'Deprecated: Prefer to use `options` instead. This field is set
          in queries

          if and only if `len(options) == 1` and that option has weight 1. In all

          other cases, this field will default to VOTE_OPTION_UNSPECIFIED.'
      options:
        items:
          $ref: '#/definitions/cosmos.gov.v1beta1.WeightedVoteOption'
        title: 'Since: cosmos-sdk 0.43'
        type: array
      proposal_id:
        format: uint64
        type: string
      voter:
        type: string
    type: object
  cosmos.gov.v1beta1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: "VoteOption enumerates the valid vote options for a given governance\
      \ proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a\
      \ no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote\
      \ option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote\
      \ option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO:\
      \ VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    enum:
    - VOTE_OPTION_UNSPECIFIED
    - VOTE_OPTION_YES
    - VOTE_OPTION_ABSTAIN
    - VOTE_OPTION_NO
    - VOTE_OPTION_NO_WITH_VETO
    type: string
  cosmos.gov.v1beta1.VotingParams:
    description: VotingParams defines the params for voting on governance proposals.
    properties:
      voting_period:
        description: Length of the voting period.
        type: string
    type: object
  cosmos.gov.v1beta1.WeightedVoteOption:
    description: 'WeightedVoteOption defines a unit of vote for vote split.


      Since: cosmos-sdk 0.43'
    properties:
      option:
        $ref: '#/definitions/cosmos.gov.v1beta1.VoteOption'
      weight:
        type: string
    type: object
  cosmos.group.v1.GroupInfo:
    description: GroupInfo represents the high-level on-chain information for a group.
    properties:
      admin:
        description: admin is the account address of the group's admin.
        type: string
      created_at:
        description: created_at is a timestamp specifying when a group was created.
        format: date-time
        type: string
      id:
        description: id is the unique ID of the group.
        format: uint64
        type: string
      metadata:
        description: metadata is any arbitrary metadata to attached to the group.
        type: string
      total_weight:
        description: total_weight is the sum of the group members' weights.
        type: string
      version:
        format: uint64
        title: 'version is used to track changes to a group''s membership structure
          that

          would break existing proposals. Whenever any members weight is changed,

          or any member is added or removed this version is incremented and will

          cause proposals based on older versions of this group to fail'
        type: string
    type: object
  cosmos.group.v1.GroupMember:
    description: GroupMember represents the relationship between a group and a member.
    properties:
      group_id:
        description: group_id is the unique ID of the group.
        format: uint64
        type: string
      member:
        $ref: '#/definitions/cosmos.group.v1.Member'
        description: member is the member data.
    type: object
  cosmos.group.v1.GroupPolicyInfo:
    description: GroupPolicyInfo represents the high-level on-chain information for
      a group policy.
    properties:
      address:
        description: address is the account address of group policy.
        type: string
      admin:
        description: admin is the account address of the group admin.
        type: string
      created_at:
        description: created_at is a timestamp specifying when a group policy was
          created.
        format: date-time
        type: string
      decision_policy:
        $ref: '#/definitions/google.protobuf.Any'
        description: decision_policy specifies the group policy's decision policy.
      group_id:
        description: group_id is the unique ID of the group.
        format: uint64
        type: string
      metadata:
        description: metadata is any arbitrary metadata to attached to the group policy.
        type: string
      version:
        description: 'version is used to track changes to a group''s GroupPolicyInfo
          structure that

          would create a different result on a running proposal.'
        format: uint64
        type: string
    type: object
  cosmos.group.v1.Member:
    description: 'Member represents a group member with an account address,

      non-zero weight, metadata and added_at timestamp.'
    properties:
      added_at:
        description: added_at is a timestamp specifying when a member was added.
        format: date-time
        type: string
      address:
        description: address is the member's account address.
        type: string
      metadata:
        description: metadata is any arbitrary metadata attached to the member.
        type: string
      weight:
        description: weight is the member's voting weight that should be greater than
          0.
        type: string
    type: object
  cosmos.group.v1.Proposal:
    description: 'Proposal defines a group proposal. Any member of a group can submit
      a proposal

      for a group policy to decide upon.

      A proposal consists of a set of `sdk.Msg`s that will be executed if the proposal

      passes as well as some optional metadata associated with the proposal.'
    properties:
      executor_result:
        $ref: '#/definitions/cosmos.group.v1.ProposalExecutorResult'
        description: executor_result is the final result of the proposal execution.
          Initial value is NotRun.
      final_tally_result:
        $ref: '#/definitions/cosmos.group.v1.TallyResult'
        description: 'final_tally_result contains the sums of all weighted votes for
          this

          proposal for each vote option. It is empty at submission, and only

          populated after tallying, at voting period end or at proposal execution,

          whichever happens first.'
      group_policy_address:
        description: group_policy_address is the account address of group policy.
        type: string
      group_policy_version:
        description: 'group_policy_version tracks the version of the group policy
          at proposal submission.

          When a decision policy is changed, existing proposals from previous policy

          versions will become invalid with the `ABORTED` status.

          This field is here for informational purposes only.'
        format: uint64
        type: string
      group_version:
        description: 'group_version tracks the version of the group at proposal submission.

          This field is here for informational purposes only.'
        format: uint64
        type: string
      id:
        description: id is the unique id of the proposal.
        format: uint64
        type: string
      messages:
        description: messages is a list of `sdk.Msg`s that will be executed if the
          proposal passes.
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
      metadata:
        description: metadata is any arbitrary metadata to attached to the proposal.
        type: string
      proposers:
        description: proposers are the account addresses of the proposers.
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/cosmos.group.v1.ProposalStatus'
        description: status represents the high level position in the life cycle of
          the proposal. Initial value is Submitted.
      submit_time:
        description: submit_time is a timestamp specifying when a proposal was submitted.
        format: date-time
        type: string
      voting_period_end:
        description: 'voting_period_end is the timestamp before which voting must
          be done.

          Unless a successfull MsgExec is called before (to execute a proposal whose

          tally is successful before the voting period ends), tallying will be done

          at this point, and the `final_tally_result`and `status` fields will be

          accordingly updated.'
        format: date-time
        type: string
    type: object
  cosmos.group.v1.ProposalExecutorResult:
    default: PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
    description: "ProposalExecutorResult defines types of proposal executor results.\n\
      \n - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.\n\
      \ - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.\n -\
      \ PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed\
      \ action updated state.\n - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned\
      \ an error and proposed action didn't update state."
    enum:
    - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED
    - PROPOSAL_EXECUTOR_RESULT_NOT_RUN
    - PROPOSAL_EXECUTOR_RESULT_SUCCESS
    - PROPOSAL_EXECUTOR_RESULT_FAILURE
    type: string
  cosmos.group.v1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: "ProposalStatus defines proposal statuses.\n\n - PROPOSAL_STATUS_UNSPECIFIED:\
      \ An empty value is invalid and not allowed.\n - PROPOSAL_STATUS_SUBMITTED:\
      \ Initial status of a proposal when submitted.\n - PROPOSAL_STATUS_ACCEPTED:\
      \ Final status of a proposal when the final tally is done and the outcome\n\
      passes the group policy's decision policy.\n - PROPOSAL_STATUS_REJECTED: Final\
      \ status of a proposal when the final tally is done and the outcome\nis rejected\
      \ by the group policy's decision policy.\n - PROPOSAL_STATUS_ABORTED: Final\
      \ status of a proposal when the group policy is modified before the\nfinal tally.\n\
      \ - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting\
      \ start time by the owner.\nWhen this happens the final status is Withdrawn."
    enum:
    - PROPOSAL_STATUS_UNSPECIFIED
    - PROPOSAL_STATUS_SUBMITTED
    - PROPOSAL_STATUS_ACCEPTED
    - PROPOSAL_STATUS_REJECTED
    - PROPOSAL_STATUS_ABORTED
    - PROPOSAL_STATUS_WITHDRAWN
    type: string
  cosmos.group.v1.QueryGroupInfoResponse:
    description: QueryGroupInfoResponse is the Query/GroupInfo response type.
    properties:
      info:
        $ref: '#/definitions/cosmos.group.v1.GroupInfo'
        description: info is the GroupInfo for the group.
    type: object
  cosmos.group.v1.QueryGroupMembersResponse:
    description: QueryGroupMembersResponse is the Query/GroupMembersResponse response
      type.
    properties:
      members:
        description: members are the members of the group with given group_id.
        items:
          $ref: '#/definitions/cosmos.group.v1.GroupMember'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.group.v1.QueryGroupPoliciesByAdminResponse:
    description: QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin
      response type.
    properties:
      group_policies:
        description: group_policies are the group policies info with provided admin.
        items:
          $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.group.v1.QueryGroupPoliciesByGroupResponse:
    description: QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup
      response type.
    properties:
      group_policies:
        description: group_policies are the group policies info associated with the
          provided group.
        items:
          $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.group.v1.QueryGroupPolicyInfoResponse:
    description: QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response
      type.
    properties:
      info:
        $ref: '#/definitions/cosmos.group.v1.GroupPolicyInfo'
        description: info is the GroupPolicyInfo for the group policy.
    type: object
  cosmos.group.v1.QueryGroupsByAdminResponse:
    description: QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response
      type.
    properties:
      groups:
        description: groups are the groups info with the provided admin.
        items:
          $ref: '#/definitions/cosmos.group.v1.GroupInfo'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.group.v1.QueryGroupsByMemberResponse:
    description: QueryGroupsByMemberResponse is the Query/GroupsByMember response
      type.
    properties:
      groups:
        description: groups are the groups info with the provided group member.
        items:
          $ref: '#/definitions/cosmos.group.v1.GroupInfo'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.group.v1.QueryGroupsResponse:
    description: 'QueryGroupsResponse is the Query/Groups response type.


      Since: cosmos-sdk 0.47.1'
    properties:
      groups:
        description: '`groups` is all the groups present in state.'
        items:
          $ref: '#/definitions/cosmos.group.v1.GroupInfo'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.group.v1.QueryProposalResponse:
    description: QueryProposalResponse is the Query/Proposal response type.
    properties:
      proposal:
        $ref: '#/definitions/cosmos.group.v1.Proposal'
        description: proposal is the proposal info.
    type: object
  cosmos.group.v1.QueryProposalsByGroupPolicyResponse:
    description: QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy
      response type.
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      proposals:
        description: proposals are the proposals with given group policy.
        items:
          $ref: '#/definitions/cosmos.group.v1.Proposal'
        type: array
    type: object
  cosmos.group.v1.QueryTallyResultResponse:
    description: QueryTallyResultResponse is the Query/TallyResult response type.
    properties:
      tally:
        $ref: '#/definitions/cosmos.group.v1.TallyResult'
        description: tally defines the requested tally.
    type: object
  cosmos.group.v1.QueryVoteByProposalVoterResponse:
    description: QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter
      response type.
    properties:
      vote:
        $ref: '#/definitions/cosmos.group.v1.Vote'
        description: vote is the vote with given proposal_id and voter.
    type: object
  cosmos.group.v1.QueryVotesByProposalResponse:
    description: QueryVotesByProposalResponse is the Query/VotesByProposal response
      type.
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      votes:
        description: votes are the list of votes for given proposal_id.
        items:
          $ref: '#/definitions/cosmos.group.v1.Vote'
        type: array
    type: object
  cosmos.group.v1.QueryVotesByVoterResponse:
    description: QueryVotesByVoterResponse is the Query/VotesByVoter response type.
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      votes:
        description: votes are the list of votes by given voter.
        items:
          $ref: '#/definitions/cosmos.group.v1.Vote'
        type: array
    type: object
  cosmos.group.v1.TallyResult:
    description: TallyResult represents the sum of weighted votes for each vote option.
    properties:
      abstain_count:
        description: abstain_count is the weighted sum of abstainers.
        type: string
      no_count:
        description: no_count is the weighted sum of no votes.
        type: string
      no_with_veto_count:
        description: no_with_veto_count is the weighted sum of veto.
        type: string
      yes_count:
        description: yes_count is the weighted sum of yes votes.
        type: string
    type: object
  cosmos.group.v1.Vote:
    description: Vote represents a vote for a proposal.
    properties:
      metadata:
        description: metadata is any arbitrary metadata to attached to the vote.
        type: string
      option:
        $ref: '#/definitions/cosmos.group.v1.VoteOption'
        description: option is the voter's choice on the proposal.
      proposal_id:
        description: proposal is the unique ID of the proposal.
        format: uint64
        type: string
      submit_time:
        description: submit_time is the timestamp when the vote was submitted.
        format: date-time
        type: string
      voter:
        description: voter is the account address of the voter.
        type: string
    type: object
  cosmos.group.v1.VoteOption:
    default: VOTE_OPTION_UNSPECIFIED
    description: "VoteOption enumerates the valid vote options for a given proposal.\n\
      \n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified\
      \ vote option which will\nreturn an error.\n - VOTE_OPTION_YES: VOTE_OPTION_YES\
      \ defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines\
      \ an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote\
      \ option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no\
      \ with veto vote option."
    enum:
    - VOTE_OPTION_UNSPECIFIED
    - VOTE_OPTION_YES
    - VOTE_OPTION_ABSTAIN
    - VOTE_OPTION_NO
    - VOTE_OPTION_NO_WITH_VETO
    type: string
  cosmos.mint.v1beta1.Params:
    description: Params holds parameters for the mint module.
    properties:
      blocks_per_year:
        format: uint64
        title: expected blocks per year
        type: string
      goal_bonded:
        title: goal of percent bonded atoms
        type: string
      inflation_max:
        title: maximum inflation rate
        type: string
      inflation_min:
        title: minimum inflation rate
        type: string
      inflation_rate_change:
        title: maximum annual change in inflation rate
        type: string
      mint_denom:
        title: type of coin to mint
        type: string
    type: object
  cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
    description: 'QueryAnnualProvisionsResponse is the response type for the

      Query/AnnualProvisions RPC method.'
    properties:
      annual_provisions:
        description: annual_provisions is the current minting annual provisions value.
        format: byte
        type: string
    type: object
  cosmos.mint.v1beta1.QueryInflationResponse:
    description: 'QueryInflationResponse is the response type for the Query/Inflation
      RPC

      method.'
    properties:
      inflation:
        description: inflation is the current minting inflation value.
        format: byte
        type: string
    type: object
  cosmos.mint.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC
      method.
    properties:
      params:
        $ref: '#/definitions/cosmos.mint.v1beta1.Params'
        description: params defines the parameters of the module.
    type: object
  cosmos.nft.v1beta1.Class:
    description: Class defines the class of the nft type.
    properties:
      data:
        $ref: '#/definitions/google.protobuf.Any'
        title: data is the app specific metadata of the NFT class. Optional
      description:
        title: description is a brief description of nft classification. Optional
        type: string
      id:
        title: id defines the unique identifier of the NFT classification, similar
          to the contract address of ERC721
        type: string
      name:
        title: name defines the human-readable name of the NFT classification. Optional
        type: string
      symbol:
        title: symbol is an abbreviated name for nft classification. Optional
        type: string
      uri:
        title: uri for the class metadata stored off chain. It can define schema for
          Class and NFT `Data` attributes. Optional
        type: string
      uri_hash:
        title: uri_hash is a hash of the document pointed by uri. Optional
        type: string
    type: object
  cosmos.nft.v1beta1.NFT:
    description: NFT defines the NFT.
    properties:
      class_id:
        title: class_id associated with the NFT, similar to the contract address of
          ERC721
        type: string
      data:
        $ref: '#/definitions/google.protobuf.Any'
        title: data is an app specific data of the NFT. Optional
      id:
        title: id is a unique identifier of the NFT
        type: string
      uri:
        title: uri for the NFT metadata stored off chain
        type: string
      uri_hash:
        title: uri_hash is a hash of the document pointed by uri
        type: string
    type: object
  cosmos.nft.v1beta1.QueryBalanceResponse:
    properties:
      amount:
        format: uint64
        type: string
    title: QueryBalanceResponse is the response type for the Query/Balance RPC method
    type: object
  cosmos.nft.v1beta1.QueryClassResponse:
    properties:
      class:
        $ref: '#/definitions/cosmos.nft.v1beta1.Class'
    title: QueryClassResponse is the response type for the Query/Class RPC method
    type: object
  cosmos.nft.v1beta1.QueryClassesResponse:
    properties:
      classes:
        items:
          $ref: '#/definitions/cosmos.nft.v1beta1.Class'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
    title: QueryClassesResponse is the response type for the Query/Classes RPC method
    type: object
  cosmos.nft.v1beta1.QueryNFTResponse:
    properties:
      nft:
        $ref: '#/definitions/cosmos.nft.v1beta1.NFT'
    title: QueryNFTResponse is the response type for the Query/NFT RPC method
    type: object
  cosmos.nft.v1beta1.QueryNFTsResponse:
    properties:
      nfts:
        items:
          $ref: '#/definitions/cosmos.nft.v1beta1.NFT'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
    title: QueryNFTsResponse is the response type for the Query/NFTs RPC methods
    type: object
  cosmos.nft.v1beta1.QueryOwnerResponse:
    properties:
      owner:
        type: string
    title: QueryOwnerResponse is the response type for the Query/Owner RPC method
    type: object
  cosmos.nft.v1beta1.QuerySupplyResponse:
    properties:
      amount:
        format: uint64
        type: string
    title: QuerySupplyResponse is the response type for the Query/Supply RPC method
    type: object
  cosmos.params.v1beta1.ParamChange:
    description: 'ParamChange defines an individual parameter change, for use in

      ParameterChangeProposal.'
    properties:
      key:
        type: string
      subspace:
        type: string
      value:
        type: string
    type: object
  cosmos.params.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      param:
        $ref: '#/definitions/cosmos.params.v1beta1.ParamChange'
        description: param defines the queried parameter.
    type: object
  cosmos.params.v1beta1.QuerySubspacesResponse:
    description: 'QuerySubspacesResponse defines the response types for querying for
      all

      registered subspaces and all keys for a subspace.


      Since: cosmos-sdk 0.46'
    properties:
      subspaces:
        items:
          $ref: '#/definitions/cosmos.params.v1beta1.Subspace'
        type: array
    type: object
  cosmos.params.v1beta1.Subspace:
    description: 'Subspace defines a parameter subspace name and all the keys that
      exist for

      the subspace.


      Since: cosmos-sdk 0.46'
    properties:
      keys:
        items:
          type: string
        type: array
      subspace:
        type: string
    type: object
  cosmos.slashing.v1beta1.Params:
    description: Params represents the parameters used for by the slashing module.
    properties:
      downtime_jail_duration:
        type: string
      min_signed_per_window:
        format: byte
        type: string
      signed_blocks_window:
        format: int64
        type: string
      slash_fraction_double_sign:
        format: byte
        type: string
      slash_fraction_downtime:
        format: byte
        type: string
    type: object
  cosmos.slashing.v1beta1.QueryParamsResponse:
    properties:
      params:
        $ref: '#/definitions/cosmos.slashing.v1beta1.Params'
    title: QueryParamsResponse is the response type for the Query/Params RPC method
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfoResponse:
    properties:
      val_signing_info:
        $ref: '#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo'
        title: val_signing_info is the signing info of requested val cons address
    title: 'QuerySigningInfoResponse is the response type for the Query/SigningInfo
      RPC

      method'
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfosResponse:
    properties:
      info:
        items:
          $ref: '#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo'
        title: info is the signing info of all validators
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
    title: 'QuerySigningInfosResponse is the response type for the Query/SigningInfos
      RPC

      method'
    type: object
  cosmos.slashing.v1beta1.ValidatorSigningInfo:
    description: 'ValidatorSigningInfo defines a validator''s signing info for monitoring
      their

      liveness activity.'
    properties:
      address:
        type: string
      index_offset:
        description: 'Index which is incremented each time the validator was a bonded

          in a block and may have signed a precommit or not. This in conjunction with
          the

          `SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`.'
        format: int64
        type: string
      jailed_until:
        description: Timestamp until which the validator is jailed due to liveness
          downtime.
        format: date-time
        type: string
      missed_blocks_counter:
        description: 'A counter kept to avoid unnecessary array reads.

          Note that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`.'
        format: int64
        type: string
      start_height:
        format: int64
        title: Height at which validator was first a candidate OR was unjailed
        type: string
      tombstoned:
        description: 'Whether or not a validator has been tombstoned (killed out of
          validator set). It is set

          once the validator commits an equivocation or for any other configured misbehiavor.'
        type: boolean
    type: object
  cosmos.staking.v1beta1.BondStatus:
    default: BOND_STATUS_UNSPECIFIED
    description: "BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED:\
      \ UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED:\
      \ UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING:\
      \ UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED\
      \ defines a validator that is bonded."
    enum:
    - BOND_STATUS_UNSPECIFIED
    - BOND_STATUS_UNBONDED
    - BOND_STATUS_UNBONDING
    - BOND_STATUS_BONDED
    type: string
  cosmos.staking.v1beta1.Commission:
    description: Commission defines commission parameters for a given validator.
    properties:
      commission_rates:
        $ref: '#/definitions/cosmos.staking.v1beta1.CommissionRates'
        description: commission_rates defines the initial commission rates to be used
          for creating a validator.
      update_time:
        description: update_time is the last time the commission rate was changed.
        format: date-time
        type: string
    type: object
  cosmos.staking.v1beta1.CommissionRates:
    description: 'CommissionRates defines the initial commission rates to be used
      for creating

      a validator.'
    properties:
      max_change_rate:
        description: max_change_rate defines the maximum daily increase of the validator
          commission, as a fraction.
        type: string
      max_rate:
        description: max_rate defines the maximum commission rate which validator
          can ever charge, as a fraction.
        type: string
      rate:
        description: rate is the commission rate charged to delegators, as a fraction.
        type: string
    type: object
  cosmos.staking.v1beta1.Delegation:
    description: 'Delegation represents the bond with tokens held by an account. It
      is

      owned by one delegator, and is associated with the voting power of one

      validator.'
    properties:
      delegator_address:
        description: delegator_address is the bech32-encoded address of the delegator.
        type: string
      shares:
        description: shares define the delegation shares received.
        type: string
      validator_address:
        description: validator_address is the bech32-encoded address of the validator.
        type: string
    type: object
  cosmos.staking.v1beta1.DelegationResponse:
    description: 'DelegationResponse is equivalent to Delegation except that it contains
      a

      balance in addition to shares which is more suitable for client responses.'
    properties:
      balance:
        $ref: '#/definitions/cosmos.base.v1beta1.Coin'
      delegation:
        $ref: '#/definitions/cosmos.staking.v1beta1.Delegation'
    type: object
  cosmos.staking.v1beta1.Description:
    description: Description defines a validator description.
    properties:
      details:
        description: details define other optional details.
        type: string
      identity:
        description: identity defines an optional identity signature (ex. UPort or
          Keybase).
        type: string
      moniker:
        description: moniker defines a human-readable name for the validator.
        type: string
      security_contact:
        description: security_contact defines an optional email for security contact.
        type: string
      website:
        description: website defines an optional website link.
        type: string
    type: object
  cosmos.staking.v1beta1.HistoricalInfo:
    description: 'HistoricalInfo contains header and validator information for a given
      block.

      It is stored as part of staking module''s state, which persists the `n` most

      recent HistoricalInfo

      (`n` is set by the staking module''s `historical_entries` parameter).'
    properties:
      header:
        $ref: '#/definitions/tendermint.types.Header'
      valset:
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
        type: array
    type: object
  cosmos.staking.v1beta1.Params:
    description: Params defines the parameters for the staking module.
    properties:
      bond_denom:
        description: bond_denom defines the bondable coin denomination.
        type: string
      historical_entries:
        description: historical_entries is the number of historical entries to persist.
        format: int64
        type: integer
      max_entries:
        description: max_entries is the max entries for either unbonding delegation
          or redelegation (per pair/trio).
        format: int64
        type: integer
      max_validators:
        description: max_validators is the maximum number of validators.
        format: int64
        type: integer
      min_commission_rate:
        title: min_commission_rate is the chain-wide minimum commission rate that
          a validator can charge their delegators
        type: string
      unbonding_time:
        description: unbonding_time is the time duration of unbonding.
        type: string
    type: object
  cosmos.staking.v1beta1.Pool:
    description: 'Pool is used for tracking bonded and not-bonded token supply of
      the bond

      denomination.'
    properties:
      bonded_tokens:
        type: string
      not_bonded_tokens:
        type: string
    type: object
  cosmos.staking.v1beta1.QueryDelegationResponse:
    description: QueryDelegationResponse is response type for the Query/Delegation
      RPC method.
    properties:
      delegation_response:
        $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
        description: delegation_responses defines the delegation info of a delegation.
    type: object
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
    description: 'QueryDelegatorDelegationsResponse is response type for the

      Query/DelegatorDelegations RPC method.'
    properties:
      delegation_responses:
        description: delegation_responses defines all the delegations' info of a delegator.
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    type: object
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
    description: 'QueryUnbondingDelegatorDelegationsResponse is response type for
      the

      Query/UnbondingDelegatorDelegations RPC method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      unbonding_responses:
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
        type: array
    type: object
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
    description: 'QueryDelegatorValidatorResponse response type for the

      Query/DelegatorValidator RPC method.'
    properties:
      validator:
        $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
        description: validator defines the validator info.
    type: object
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
    description: 'QueryDelegatorValidatorsResponse is response type for the

      Query/DelegatorValidators RPC method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      validators:
        description: validators defines the validators' info of a delegator.
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
        type: array
    type: object
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
    description: 'QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
      RPC

      method.'
    properties:
      hist:
        $ref: '#/definitions/cosmos.staking.v1beta1.HistoricalInfo'
        description: hist defines the historical info at the given height.
    type: object
  cosmos.staking.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        $ref: '#/definitions/cosmos.staking.v1beta1.Params'
        description: params holds all the parameters of this module.
    type: object
  cosmos.staking.v1beta1.QueryPoolResponse:
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
    properties:
      pool:
        $ref: '#/definitions/cosmos.staking.v1beta1.Pool'
        description: pool defines the pool info.
    type: object
  cosmos.staking.v1beta1.QueryRedelegationsResponse:
    description: 'QueryRedelegationsResponse is response type for the Query/Redelegations
      RPC

      method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      redelegation_responses:
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationResponse'
        type: array
    type: object
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
    description: 'QueryDelegationResponse is response type for the Query/UnbondingDelegation

      RPC method.'
    properties:
      unbond:
        $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
        description: unbond defines the unbonding information of a delegation.
    type: object
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
    properties:
      delegation_responses:
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.DelegationResponse'
        type: array
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
    title: 'QueryValidatorDelegationsResponse is response type for the

      Query/ValidatorDelegations RPC method'
    type: object
  cosmos.staking.v1beta1.QueryValidatorResponse:
    properties:
      validator:
        $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
        description: validator defines the validator info.
    title: QueryValidatorResponse is response type for the Query/Validator RPC method
    type: object
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
    description: 'QueryValidatorUnbondingDelegationsResponse is response type for
      the

      Query/ValidatorUnbondingDelegations RPC method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      unbonding_responses:
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegation'
        type: array
    type: object
  cosmos.staking.v1beta1.QueryValidatorsResponse:
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines the pagination in the response.
      validators:
        description: validators contains all the queried validators.
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.Validator'
        type: array
    title: QueryValidatorsResponse is response type for the Query/Validators RPC method
    type: object
  cosmos.staking.v1beta1.Redelegation:
    description: 'Redelegation contains the list of a particular delegator''s redelegating
      bonds

      from a particular source validator to a particular destination validator.'
    properties:
      delegator_address:
        description: delegator_address is the bech32-encoded address of the delegator.
        type: string
      entries:
        description: entries are the redelegation entries.
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntry'
        type: array
      validator_dst_address:
        description: validator_dst_address is the validator redelegation destination
          operator address.
        type: string
      validator_src_address:
        description: validator_src_address is the validator redelegation source operator
          address.
        type: string
    type: object
  cosmos.staking.v1beta1.RedelegationEntry:
    description: RedelegationEntry defines a redelegation object with relevant metadata.
    properties:
      completion_time:
        description: completion_time defines the unix time for redelegation completion.
        format: date-time
        type: string
      creation_height:
        description: creation_height  defines the height which the redelegation took
          place.
        format: int64
        type: string
      initial_balance:
        description: initial_balance defines the initial balance when redelegation
          started.
        type: string
      shares_dst:
        description: shares_dst is the amount of destination-validator shares created
          by redelegation.
        type: string
    type: object
  cosmos.staking.v1beta1.RedelegationEntryResponse:
    description: 'RedelegationEntryResponse is equivalent to a RedelegationEntry except
      that it

      contains a balance in addition to shares which is more suitable for client

      responses.'
    properties:
      balance:
        type: string
      redelegation_entry:
        $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntry'
    type: object
  cosmos.staking.v1beta1.RedelegationResponse:
    description: 'RedelegationResponse is equivalent to a Redelegation except that
      its entries

      contain a balance in addition to shares which is more suitable for client

      responses.'
    properties:
      entries:
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.RedelegationEntryResponse'
        type: array
      redelegation:
        $ref: '#/definitions/cosmos.staking.v1beta1.Redelegation'
    type: object
  cosmos.staking.v1beta1.UnbondingDelegation:
    description: 'UnbondingDelegation stores all of a single delegator''s unbonding
      bonds

      for a single validator in an time-ordered list.'
    properties:
      delegator_address:
        description: delegator_address is the bech32-encoded address of the delegator.
        type: string
      entries:
        description: entries are the unbonding delegation entries.
        items:
          $ref: '#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry'
        type: array
      validator_address:
        description: validator_address is the bech32-encoded address of the validator.
        type: string
    type: object
  cosmos.staking.v1beta1.UnbondingDelegationEntry:
    description: UnbondingDelegationEntry defines an unbonding object with relevant
      metadata.
    properties:
      balance:
        description: balance defines the tokens to receive at completion.
        type: string
      completion_time:
        description: completion_time is the unix time for unbonding completion.
        format: date-time
        type: string
      creation_height:
        description: creation_height is the height which the unbonding took place.
        format: int64
        type: string
      initial_balance:
        description: initial_balance defines the tokens initially scheduled to receive
          at completion.
        type: string
    type: object
  cosmos.staking.v1beta1.Validator:
    description: 'Validator defines a validator, together with the total amount of
      the

      Validator''s bond shares and their exchange rate to coins. Slashing results
      in

      a decrease in the exchange rate, allowing correct calculation of future

      undelegations without iterating over delegators. When coins are delegated to

      this validator, the validator is credited with a delegation whose number of

      bond shares is based on the amount of coins delegated divided by the current

      exchange rate. Voting power can be calculated as total bonded shares

      multiplied by exchange rate.'
    properties:
      commission:
        $ref: '#/definitions/cosmos.staking.v1beta1.Commission'
        description: commission defines the commission parameters.
      consensus_pubkey:
        $ref: '#/definitions/google.protobuf.Any'
        description: consensus_pubkey is the consensus public key of the validator,
          as a Protobuf Any.
      delegator_shares:
        description: delegator_shares defines total shares issued to a validator's
          delegators.
        type: string
      description:
        $ref: '#/definitions/cosmos.staking.v1beta1.Description'
        description: description defines the description terms for the validator.
      jailed:
        description: jailed defined whether the validator has been jailed from bonded
          status or not.
        type: boolean
      min_self_delegation:
        description: 'min_self_delegation is the validator''s self declared minimum
          self delegation.


          Since: cosmos-sdk 0.46'
        type: string
      operator_address:
        description: operator_address defines the address of the validator's operator;
          bech encoded in JSON.
        type: string
      status:
        $ref: '#/definitions/cosmos.staking.v1beta1.BondStatus'
        description: status is the validator status (bonded/unbonding/unbonded).
      tokens:
        description: tokens define the delegated tokens (incl. self-delegation).
        type: string
      unbonding_height:
        description: unbonding_height defines, if unbonding, the height at which this
          validator has begun unbonding.
        format: int64
        type: string
      unbonding_time:
        description: unbonding_time defines, if unbonding, the min time for the validator
          to complete unbonding.
        format: date-time
        type: string
    type: object
  cosmos.tx.signing.v1beta1.SignMode:
    default: SIGN_MODE_UNSPECIFIED
    description: "SignMode represents a signing mode with its own security guarantees.\n\
      \nThis enum should be considered a registry of all known sign modes\nin the\
      \ Cosmos ecosystem. Apps are not expected to support all known\nsign modes.\
      \ Apps that would like to support custom  sign modes are\nencouraged to open\
      \ a small PR against this file to add a new case\nto this SignMode enum describing\
      \ their sign mode so that different\napps have a consistent version of this\
      \ enum.\n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown\
      \ signing mode and will be\nrejected.\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT\
      \ specifies a signing mode which uses SignDoc and is\nverified with raw bytes\
      \ from Tx.\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode\
      \ that will verify some\nhuman-readable textual representation on top of the\
      \ binary representation\nfrom SIGN_MODE_DIRECT. It is currently not supported.\n\
      \ - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which\
      \ uses\nSignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does\
      \ not\nrequire signers signing over other signers' `signer_info`. It also allows\n\
      for adding Tips in transactions.\n\nSince: cosmos-sdk 0.46\n - SIGN_MODE_LEGACY_AMINO_JSON:\
      \ SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\n\
      Amino JSON and will be removed in the future.\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191\
      \ specifies the sign mode for EIP 191 signing on the Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\
      \nCurrently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\nbut\
      \ is not implemented on the SDK by default. To enable EIP-191, you need\nto\
      \ pass a custom `TxConfig` that has an implementation of\n`SignModeHandler`\
      \ for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\
      \nSince: cosmos-sdk 0.45.2"
    enum:
    - SIGN_MODE_UNSPECIFIED
    - SIGN_MODE_DIRECT
    - SIGN_MODE_TEXTUAL
    - SIGN_MODE_DIRECT_AUX
    - SIGN_MODE_LEGACY_AMINO_JSON
    - SIGN_MODE_EIP_191
    type: string
  cosmos.tx.v1beta1.AuthInfo:
    description: 'AuthInfo describes the fee and signer modes that are used to sign
      a

      transaction.'
    properties:
      fee:
        $ref: '#/definitions/cosmos.tx.v1beta1.Fee'
        description: 'Fee is the fee and gas limit for the transaction. The first
          signer is the

          primary signer and the one which pays the fee. The fee can be calculated

          based on the cost of evaluating the body and doing signature verification

          of the signers. This can be estimated via simulation.'
      signer_infos:
        description: 'signer_infos defines the signing modes for the required signers.
          The number

          and order of elements must match the required signers from TxBody''s

          messages. The first element is the primary signer and the one which pays

          the fee.'
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.SignerInfo'
        type: array
      tip:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tip'
        description: 'Tip is the optional tip used for transactions fees paid in another
          denom.


          This field is ignored if the chain didn''t enable tips, i.e. didn''t add
          the

          `TipDecorator` in its posthandler.


          Since: cosmos-sdk 0.46'
    type: object
  cosmos.tx.v1beta1.BroadcastMode:
    default: BROADCAST_MODE_UNSPECIFIED
    description: "BroadcastMode specifies the broadcast mode for the TxService.Broadcast\
      \ RPC method.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n\
      \ - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode\
      \ where the client waits for\nthe tx to be committed in a block.\n - BROADCAST_MODE_SYNC:\
      \ BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits\
      \ for\na CheckTx execution response only.\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC\
      \ defines a tx broadcasting mode where the client returns\nimmediately."
    enum:
    - BROADCAST_MODE_UNSPECIFIED
    - BROADCAST_MODE_BLOCK
    - BROADCAST_MODE_SYNC
    - BROADCAST_MODE_ASYNC
    type: string
  cosmos.tx.v1beta1.BroadcastTxRequest:
    description: 'BroadcastTxRequest is the request type for the Service.BroadcastTxRequest

      RPC method.'
    properties:
      mode:
        $ref: '#/definitions/cosmos.tx.v1beta1.BroadcastMode'
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.BroadcastTxResponse:
    description: 'BroadcastTxResponse is the response type for the

      Service.BroadcastTx method.'
    properties:
      tx_response:
        $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
        description: tx_response is the queried TxResponses.
    type: object
  cosmos.tx.v1beta1.Fee:
    description: 'Fee includes the amount of coins paid in fees and the maximum

      gas to be used by the transaction. The ratio yields an effective "gasprice",

      which must be above some miminum to be accepted into the mempool.'
    properties:
      amount:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        title: amount is the amount of coins to be paid as a fee
        type: array
      gas_limit:
        format: uint64
        title: 'gas_limit is the maximum gas that can be used in transaction processing

          before an out of gas error occurs'
        type: string
      granter:
        title: 'if set, the fee payer (either the first signer or the value of the
          payer field) requests that a fee grant be used

          to pay fees instead of the fee payer''s own balance. If an appropriate fee
          grant does not exist or the chain does

          not support fee grants, this will fail'
        type: string
      payer:
        description: 'if unset, the first signer is responsible for paying the fees.
          If set, the specified account must pay the fees.

          the payer must be a tx signer (and thus have signed this field in AuthInfo).

          setting this field does *not* change the ordering of required signers for
          the transaction.'
        type: string
    type: object
  cosmos.tx.v1beta1.GetBlockWithTxsResponse:
    description: 'GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs
      method.


      Since: cosmos-sdk 0.45.2'
    properties:
      block:
        $ref: '#/definitions/tendermint.types.Block'
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: pagination defines a pagination for the response.
      txs:
        description: txs are the transactions in the block.
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        type: array
    type: object
  cosmos.tx.v1beta1.GetTxResponse:
    description: GetTxResponse is the response type for the Service.GetTx method.
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: tx is the queried transaction.
      tx_response:
        $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
        description: tx_response is the queried TxResponses.
    type: object
  cosmos.tx.v1beta1.GetTxsEventResponse:
    description: 'GetTxsEventResponse is the response type for the Service.TxsByEvents

      RPC method.'
    properties:
      pagination:
        $ref: '#/definitions/cosmos.base.query.v1beta1.PageResponse'
        description: 'pagination defines a pagination for the response.

          Deprecated post v0.46.x: use total instead.'
      total:
        format: uint64
        title: total is total number of results available
        type: string
      tx_responses:
        description: tx_responses is the list of queried TxResponses.
        items:
          $ref: '#/definitions/cosmos.base.abci.v1beta1.TxResponse'
        type: array
      txs:
        description: txs is the list of queried transactions.
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        type: array
    type: object
  cosmos.tx.v1beta1.ModeInfo:
    description: ModeInfo describes the signing mode of a single or nested multisig
      signer.
    properties:
      multi:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi'
        title: multi represents a nested multisig signer
      single:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo.Single'
        title: single represents a single signer
    type: object
  cosmos.tx.v1beta1.ModeInfo.Multi:
    properties:
      bitarray:
        $ref: '#/definitions/cosmos.crypto.multisig.v1beta1.CompactBitArray'
        title: bitarray specifies which keys within the multisig are signing
      mode_infos:
        items:
          $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
        title: 'mode_infos is the corresponding modes of the signers of the multisig

          which could include nested multisig public keys'
        type: array
    title: Multi is the mode info for a multisig public key
    type: object
  cosmos.tx.v1beta1.ModeInfo.Single:
    properties:
      mode:
        $ref: '#/definitions/cosmos.tx.signing.v1beta1.SignMode'
        title: mode is the signing mode of the single signer
    title: 'Single is the mode info for a single signer. It is structured as a message

      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the

      future'
    type: object
  cosmos.tx.v1beta1.OrderBy:
    default: ORDER_BY_UNSPECIFIED
    description: "- ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown\
      \ sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC\
      \ defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending\
      \ order"
    enum:
    - ORDER_BY_UNSPECIFIED
    - ORDER_BY_ASC
    - ORDER_BY_DESC
    title: OrderBy defines the sorting order
    type: string
  cosmos.tx.v1beta1.SignerInfo:
    description: 'SignerInfo describes the public key and signing mode of a single
      top-level

      signer.'
    properties:
      mode_info:
        $ref: '#/definitions/cosmos.tx.v1beta1.ModeInfo'
        title: 'mode_info describes the signing mode of the signer and is a nested

          structure to support nested multisig pubkey''s'
      public_key:
        $ref: '#/definitions/google.protobuf.Any'
        description: 'public_key is the public key of the signer. It is optional for
          accounts

          that already exist in state. If unset, the verifier can use the required
          \

          signer address for this position and lookup the public key.'
      sequence:
        description: 'sequence is the sequence of the account, which describes the

          number of committed transactions signed by a given address. It is used to

          prevent replay attacks.'
        format: uint64
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateRequest:
    description: 'SimulateRequest is the request type for the Service.Simulate

      RPC method.'
    properties:
      tx:
        $ref: '#/definitions/cosmos.tx.v1beta1.Tx'
        description: 'tx is the transaction to simulate.

          Deprecated. Send raw tx bytes instead.'
      tx_bytes:
        description: 'tx_bytes is the raw transaction.


          Since: cosmos-sdk 0.43'
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateResponse:
    description: 'SimulateResponse is the response type for the

      Service.SimulateRPC method.'
    properties:
      gas_info:
        $ref: '#/definitions/cosmos.base.abci.v1beta1.GasInfo'
        description: gas_info is the information about gas used in the simulation.
      result:
        $ref: '#/definitions/cosmos.base.abci.v1beta1.Result'
        description: result is the result of the simulation.
    type: object
  cosmos.tx.v1beta1.Tip:
    description: 'Tip is the tip used for meta-transactions.


      Since: cosmos-sdk 0.46'
    properties:
      amount:
        items:
          $ref: '#/definitions/cosmos.base.v1beta1.Coin'
        title: amount is the amount of the tip
        type: array
      tipper:
        title: tipper is the address of the account paying for the tip
        type: string
    type: object
  cosmos.tx.v1beta1.Tx:
    description: Tx is the standard type used for broadcasting transactions.
    properties:
      auth_info:
        $ref: '#/definitions/cosmos.tx.v1beta1.AuthInfo'
        title: 'auth_info is the authorization related content of the transaction,

          specifically signers, signer modes and fee'
      body:
        $ref: '#/definitions/cosmos.tx.v1beta1.TxBody'
        title: body is the processable content of the transaction
      signatures:
        description: 'signatures is a list of signatures that matches the length and
          order of

          AuthInfo''s signer_infos to allow connecting signature meta information
          like

          public key and signing mode by position.'
        items:
          format: byte
          type: string
        type: array
    type: object
  cosmos.tx.v1beta1.TxBody:
    description: TxBody is the body of a transaction that all signers sign over.
    properties:
      extension_options:
        items:
          $ref: '#/definitions/google.protobuf.Any'
        title: 'extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are present

          and can''t be handled, the transaction will be rejected'
        type: array
      memo:
        description: 'memo is any arbitrary note/comment to be added to the transaction.

          WARNING: in clients, any publicly exposed text should not be called memo,

          but should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122).'
        type: string
      messages:
        description: 'messages is a list of messages to be executed. The required
          signers of

          those messages define the number and order of elements in AuthInfo''s

          signer_infos and Tx''s signatures. Each required signer address is added
          to

          the list only the first time it occurs.

          By convention, the first required signer (usually from the first message)

          is referred to as the primary signer and pays the fee for the whole

          transaction.'
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
      non_critical_extension_options:
        items:
          $ref: '#/definitions/google.protobuf.Any'
        title: 'extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are present

          and can''t be handled, they will be ignored'
        type: array
      timeout_height:
        format: uint64
        title: 'timeout is the block height after which this transaction will not

          be processed by the chain'
        type: string
    type: object
  cosmos.upgrade.v1beta1.ModuleVersion:
    description: 'ModuleVersion specifies a module and its consensus version.


      Since: cosmos-sdk 0.43'
    properties:
      name:
        title: name of the app module
        type: string
      version:
        format: uint64
        title: consensus version of the app module
        type: string
    type: object
  cosmos.upgrade.v1beta1.Plan:
    description: Plan specifies information about a planned upgrade and when it should
      occur.
    properties:
      height:
        description: 'The height at which the upgrade must be performed.

          Only used if Time is not set.'
        format: int64
        type: string
      info:
        title: 'Any application specific upgrade info to be included on-chain

          such as a git commit that validators could automatically upgrade to'
        type: string
      name:
        description: 'Sets the name for the upgrade. This name will be used by the
          upgraded

          version of the software to apply any special "on-upgrade" commands during

          the first BeginBlock method after the upgrade is applied. It is also used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will be

          assumed that the software is out-of-date when the upgrade Time or Height
          is

          reached and the software will exit.'
        type: string
      time:
        description: 'Deprecated: Time based upgrades have been deprecated. Time based
          upgrade logic

          has been removed from the SDK.

          If this field is not empty, an error will be thrown.'
        format: date-time
        type: string
      upgraded_client_state:
        $ref: '#/definitions/google.protobuf.Any'
        description: 'Deprecated: UpgradedClientState field has been deprecated. IBC
          upgrade logic has been

          moved to the IBC module in the sub module 02-client.

          If this field is not empty, an error will be thrown.'
    type: object
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
    description: 'QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
      RPC

      method.'
    properties:
      height:
        description: height is the block height at which the plan was applied.
        format: int64
        type: string
    type: object
  cosmos.upgrade.v1beta1.QueryAuthorityResponse:
    description: 'Since: cosmos-sdk 0.46'
    properties:
      address:
        type: string
    title: QueryAuthorityResponse is the response type for Query/Authority
    type: object
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
    description: 'QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
      RPC

      method.'
    properties:
      plan:
        $ref: '#/definitions/cosmos.upgrade.v1beta1.Plan'
        description: plan is the current upgrade plan.
    type: object
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
    description: 'QueryModuleVersionsResponse is the response type for the Query/ModuleVersions

      RPC method.


      Since: cosmos-sdk 0.43'
    properties:
      module_versions:
        description: module_versions is a list of module names with their consensus
          versions.
        items:
          $ref: '#/definitions/cosmos.upgrade.v1beta1.ModuleVersion'
        type: array
    type: object
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
    description: 'QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState

      RPC method.'
    properties:
      upgraded_consensus_state:
        format: byte
        title: 'Since: cosmos-sdk 0.43'
        type: string
    type: object
  google.protobuf.Any:
    properties:
      type_url:
        type: string
      value:
        format: byte
        type: string
    type: object
  grpc.gateway.runtime.Error:
    properties:
      code:
        format: int32
        type: integer
      details:
        items:
          $ref: '#/definitions/google.protobuf.Any'
        type: array
      error:
        type: string
      message:
        type: string
    type: object
  tendermint.abci.Event:
    description: 'Event allows application developers to attach additional information
      to

      ResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.

      Later, transactions may be queried using these events.'
    properties:
      attributes:
        items:
          $ref: '#/definitions/tendermint.abci.EventAttribute'
        type: array
      type:
        type: string
    type: object
  tendermint.abci.EventAttribute:
    description: EventAttribute is a single key-value pair, associated with an event.
    properties:
      index:
        type: boolean
      key:
        format: byte
        type: string
      value:
        format: byte
        type: string
    type: object
  tendermint.crypto.PublicKey:
    properties:
      ed25519:
        format: byte
        type: string
      secp256k1:
        format: byte
        type: string
    title: PublicKey defines the keys available for use with Validators
    type: object
  tendermint.p2p.DefaultNodeInfo:
    properties:
      channels:
        format: byte
        type: string
      default_node_id:
        type: string
      listen_addr:
        type: string
      moniker:
        type: string
      network:
        type: string
      other:
        $ref: '#/definitions/tendermint.p2p.DefaultNodeInfoOther'
      protocol_version:
        $ref: '#/definitions/tendermint.p2p.ProtocolVersion'
      version:
        type: string
    type: object
  tendermint.p2p.DefaultNodeInfoOther:
    properties:
      rpc_address:
        type: string
      tx_index:
        type: string
    type: object
  tendermint.p2p.ProtocolVersion:
    properties:
      app:
        format: uint64
        type: string
      block:
        format: uint64
        type: string
      p2p:
        format: uint64
        type: string
    type: object
  tendermint.types.Block:
    properties:
      data:
        $ref: '#/definitions/tendermint.types.Data'
      evidence:
        $ref: '#/definitions/tendermint.types.EvidenceList'
      header:
        $ref: '#/definitions/tendermint.types.Header'
      last_commit:
        $ref: '#/definitions/tendermint.types.Commit'
    type: object
  tendermint.types.BlockID:
    properties:
      hash:
        format: byte
        type: string
      part_set_header:
        $ref: '#/definitions/tendermint.types.PartSetHeader'
    title: BlockID
    type: object
  tendermint.types.BlockIDFlag:
    default: BLOCK_ID_FLAG_UNKNOWN
    enum:
    - BLOCK_ID_FLAG_UNKNOWN
    - BLOCK_ID_FLAG_ABSENT
    - BLOCK_ID_FLAG_COMMIT
    - BLOCK_ID_FLAG_NIL
    title: BlockIdFlag indicates which BlcokID the signature is for
    type: string
  tendermint.types.Commit:
    description: Commit contains the evidence that a block was committed by a set
      of validators.
    properties:
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      height:
        format: int64
        type: string
      round:
        format: int32
        type: integer
      signatures:
        items:
          $ref: '#/definitions/tendermint.types.CommitSig'
        type: array
    type: object
  tendermint.types.CommitSig:
    description: CommitSig is a part of the Vote included in a Commit.
    properties:
      block_id_flag:
        $ref: '#/definitions/tendermint.types.BlockIDFlag'
      signature:
        format: byte
        type: string
      timestamp:
        format: date-time
        type: string
      validator_address:
        format: byte
        type: string
    type: object
  tendermint.types.Data:
    properties:
      txs:
        description: 'Txs that will be applied by state @ block.Height+1.

          NOTE: not all txs here are valid.  We''re just agreeing on the order first.

          This means that block.AppHash does not include these txs.'
        items:
          format: byte
          type: string
        type: array
    title: Data contains the set of transactions included in the block
    type: object
  tendermint.types.DuplicateVoteEvidence:
    description: DuplicateVoteEvidence contains evidence of a validator signed two
      conflicting votes.
    properties:
      timestamp:
        format: date-time
        type: string
      total_voting_power:
        format: int64
        type: string
      validator_power:
        format: int64
        type: string
      vote_a:
        $ref: '#/definitions/tendermint.types.Vote'
      vote_b:
        $ref: '#/definitions/tendermint.types.Vote'
    type: object
  tendermint.types.Evidence:
    properties:
      duplicate_vote_evidence:
        $ref: '#/definitions/tendermint.types.DuplicateVoteEvidence'
      light_client_attack_evidence:
        $ref: '#/definitions/tendermint.types.LightClientAttackEvidence'
    type: object
  tendermint.types.EvidenceList:
    properties:
      evidence:
        items:
          $ref: '#/definitions/tendermint.types.Evidence'
        type: array
    type: object
  tendermint.types.Header:
    description: Header defines the structure of a block header.
    properties:
      app_hash:
        format: byte
        type: string
      chain_id:
        type: string
      consensus_hash:
        format: byte
        type: string
      data_hash:
        format: byte
        type: string
      evidence_hash:
        format: byte
        title: consensus info
        type: string
      height:
        format: int64
        type: string
      last_block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
        title: prev block info
      last_commit_hash:
        format: byte
        title: hashes of block data
        type: string
      last_results_hash:
        format: byte
        type: string
      next_validators_hash:
        format: byte
        type: string
      proposer_address:
        format: byte
        type: string
      time:
        format: date-time
        type: string
      validators_hash:
        format: byte
        title: hashes from the app output from the prev block
        type: string
      version:
        $ref: '#/definitions/tendermint.version.Consensus'
        title: basic block info
    type: object
  tendermint.types.LightBlock:
    properties:
      signed_header:
        $ref: '#/definitions/tendermint.types.SignedHeader'
      validator_set:
        $ref: '#/definitions/tendermint.types.ValidatorSet'
    type: object
  tendermint.types.LightClientAttackEvidence:
    description: LightClientAttackEvidence contains evidence of a set of validators
      attempting to mislead a light client.
    properties:
      byzantine_validators:
        items:
          $ref: '#/definitions/tendermint.types.Validator'
        type: array
      common_height:
        format: int64
        type: string
      conflicting_block:
        $ref: '#/definitions/tendermint.types.LightBlock'
      timestamp:
        format: date-time
        type: string
      total_voting_power:
        format: int64
        type: string
    type: object
  tendermint.types.PartSetHeader:
    properties:
      hash:
        format: byte
        type: string
      total:
        format: int64
        type: integer
    title: PartsetHeader
    type: object
  tendermint.types.SignedHeader:
    properties:
      commit:
        $ref: '#/definitions/tendermint.types.Commit'
      header:
        $ref: '#/definitions/tendermint.types.Header'
    type: object
  tendermint.types.SignedMsgType:
    default: SIGNED_MSG_TYPE_UNKNOWN
    description: "SignedMsgType is a type of signed message in the consensus.\n\n\
      \ - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
    enum:
    - SIGNED_MSG_TYPE_UNKNOWN
    - SIGNED_MSG_TYPE_PREVOTE
    - SIGNED_MSG_TYPE_PRECOMMIT
    - SIGNED_MSG_TYPE_PROPOSAL
    type: string
  tendermint.types.Validator:
    properties:
      address:
        format: byte
        type: string
      proposer_priority:
        format: int64
        type: string
      pub_key:
        $ref: '#/definitions/tendermint.crypto.PublicKey'
      voting_power:
        format: int64
        type: string
    type: object
  tendermint.types.ValidatorSet:
    properties:
      proposer:
        $ref: '#/definitions/tendermint.types.Validator'
      total_voting_power:
        format: int64
        type: string
      validators:
        items:
          $ref: '#/definitions/tendermint.types.Validator'
        type: array
    type: object
  tendermint.types.Vote:
    description: 'Vote represents a prevote, precommit, or commit vote from validators
      for

      consensus.'
    properties:
      block_id:
        $ref: '#/definitions/tendermint.types.BlockID'
      height:
        format: int64
        type: string
      round:
        format: int32
        type: integer
      signature:
        format: byte
        type: string
      timestamp:
        format: date-time
        type: string
      type:
        $ref: '#/definitions/tendermint.types.SignedMsgType'
      validator_address:
        format: byte
        type: string
      validator_index:
        format: int32
        type: integer
    type: object
  tendermint.version.Consensus:
    description: 'Consensus captures the consensus rules for processing a block in
      the blockchain,

      including all blockchain data structures and the rules of the application''s

      state transition machine.'
    properties:
      app:
        format: uint64
        type: string
      block:
        format: uint64
        type: string
    type: object
