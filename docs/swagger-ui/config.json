{
  "swagger": "2.0",
  "info": {
    "title": "Celestia gRPC Gateway API",
    "version": null
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cosmos/upgrade/v1beta1/applied_plan/{name}": {
      "get": {
        "summary": "AppliedPlan queries a previously applied upgrade plan by its name.",
        "operationId": "AppliedPlan_Z 3 S 4 U",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryAppliedPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "name is the name of the applied plan to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/authority": {
      "get": {
        "summary": "Returns the account with authority to conduct upgrades",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "Authority_1 B M 2 9",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryAuthorityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/current_plan": {
      "get": {
        "summary": "CurrentPlan queries the current upgrade plan.",
        "operationId": "CurrentPlan_L Z W 2 W",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryCurrentPlanResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/module_versions": {
      "get": {
        "summary": "ModuleVersions queries the list of module versions from state.",
        "description": "Since: cosmos-sdk 0.43",
        "operationId": "ModuleVersions_T B P Z I",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryModuleVersionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "module_name",
            "description": "module_name is a field to query a specific module\nconsensus version from state. Leaving this empty will\nfetch the full list of module versions from state.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}": {
      "get": {
        "summary": "UpgradedConsensusState queries the consensus state that will serve\nas a trusted kernel for the next version of this chain. It will only be\nstored at the last height of this chain.\nUpgradedConsensusState RPC not supported with legacy querier\nThis rpc is deprecated now that IBC has its own replacement\n(https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)",
        "operationId": "UpgradedConsensusState_2 0 7 L G",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "last_height",
            "description": "last height of the current chain must be sent in request\nas this is the height under which next consensus state is stored",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}": {
      "get": {
        "summary": "Allowance returns fee granted to the grantee by the granter.",
        "operationId": "Allowance_B Q B W S",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.feegrant.v1beta1.QueryAllowanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "granter",
            "description": "granter is the address of the user granting an allowance of their funds.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "grantee",
            "description": "grantee is the address of the user being granted an allowance of another user's funds.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/feegrant/v1beta1/allowances/{grantee}": {
      "get": {
        "summary": "Allowances returns all the grants for address.",
        "operationId": "Allowances_N X B 6 N",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "grantee",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/feegrant/v1beta1/issued/{granter}": {
      "get": {
        "summary": "AllowancesByGranter returns all the grants given by an address",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "AllowancesByGranter_I 5 N 4 M",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "granter",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/annual_provisions": {
      "get": {
        "summary": "AnnualProvisions returns the current annual provisions.",
        "operationId": "AnnualProvisions_V N 5 E G",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.mint.v1.QueryAnnualProvisionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/inflation": {
      "get": {
        "summary": "Inflation returns the current minting inflation value.",
        "operationId": "Inflation_X Q V Y C",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.mint.v1beta1.QueryInflationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/params": {
      "get": {
        "summary": "Params returns the total set of minting parameters.",
        "operationId": "Params_3 R 0 J 8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.mint.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/evidence/v1beta1/evidence": {
      "get": {
        "summary": "AllEvidence queries all evidence.",
        "operationId": "AllEvidence_9 W I 3 N",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.evidence.v1beta1.QueryAllEvidenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/evidence/v1beta1/evidence/{evidence_hash}": {
      "get": {
        "summary": "Evidence queries evidence based on evidence hash.",
        "operationId": "Evidence_L 6 N 2 N",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.evidence.v1beta1.QueryEvidenceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "evidence_hash",
            "description": "evidence_hash defines the hash of the requested evidence.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/balance/{owner}/{class_id}": {
      "get": {
        "summary": "Balance queries the number of NFTs of a given class owned by the owner, same as balanceOf in ERC721",
        "operationId": "Balance_4 N N R X",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/classes": {
      "get": {
        "summary": "Classes queries all NFT classes",
        "operationId": "Classes_A 1 7 5 Q",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryClassesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/classes/{class_id}": {
      "get": {
        "summary": "Class queries an NFT class based on its id",
        "operationId": "Class_I C T P 5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryClassResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/nfts": {
      "get": {
        "summary": "NFTs queries all NFTs of a given class or owner,choose at least one of the two, similar to tokenByIndex in\nERC721Enumerable",
        "operationId": "NFTs_4 4 M F E",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryNFTsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/nfts/{class_id}/{id}": {
      "get": {
        "summary": "NFT queries an NFT based on its class and id.",
        "operationId": "NFT_4 M R A C",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryNFTResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/owner/{class_id}/{id}": {
      "get": {
        "summary": "Owner queries the owner of the NFT based on its class and id, same as ownerOf in ERC721",
        "operationId": "Owner_P E B V W",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QueryOwnerResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/nft/v1beta1/supply/{class_id}": {
      "get": {
        "summary": "Supply queries the number of NFTs from the given class, same as totalSupply of ERC721.",
        "operationId": "Supply_W M N J W",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.nft.v1beta1.QuerySupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "class_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/accounts": {
      "get": {
        "summary": "Accounts returns all the existing accounts",
        "description": "Since: cosmos-sdk 0.43",
        "operationId": "Accounts_U D 4 O R",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/accounts/{address}": {
      "get": {
        "summary": "Account returns account details based on address.",
        "operationId": "Account_4 K 6 G 3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address defines the address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/address_by_id/{id}": {
      "get": {
        "summary": "AccountAddressByID returns account address based on account number.",
        "description": "Since: cosmos-sdk 0.46.2",
        "operationId": "AccountAddressByID_C A I B V",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryAccountAddressByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "id is the account number of the address to be queried. This field\nshould have been an uint64 (like all account numbers), and will be\nupdated to uint64 in a future version of the auth query.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/bech32": {
      "get": {
        "summary": "Bech32Prefix queries bech32Prefix",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "Bech32Prefix_0 Y P E W",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.Bech32PrefixResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/bech32/{address_bytes}": {
      "get": {
        "summary": "AddressBytesToString converts Account Address bytes to string",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "AddressBytesToString_8 7 J U P",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.AddressBytesToStringResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address_bytes",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/bech32/{address_string}": {
      "get": {
        "summary": "AddressStringToBytes converts Address string to bytes",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "AddressStringToBytes_E S X V 2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.AddressStringToBytesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address_string",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/module_accounts": {
      "get": {
        "summary": "ModuleAccounts returns all the existing module accounts.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "ModuleAccounts_N X 8 E D",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryModuleAccountsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/module_accounts/{name}": {
      "get": {
        "summary": "ModuleAccountByName returns the module account info by module name",
        "operationId": "ModuleAccountByName_J P 7 3 F",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryModuleAccountByNameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/auth/v1beta1/params": {
      "get": {
        "summary": "Params queries all parameters.",
        "operationId": "Params_D M J A T",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.auth.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_info/{group_id}": {
      "get": {
        "summary": "GroupInfo queries group info based on group id.",
        "operationId": "GroupInfo_O S P V U",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "description": "group_id is the unique ID of the group.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_members/{group_id}": {
      "get": {
        "summary": "GroupMembers queries members of a group",
        "operationId": "GroupMembers_T V Y 9 K",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupMembersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "description": "group_id is the unique ID of the group.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_policies_by_admin/{admin}": {
      "get": {
        "summary": "GroupsByAdmin queries group policies by admin address.",
        "operationId": "GroupPoliciesByAdmin_W L H 2 M",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupPoliciesByAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "admin",
            "description": "admin is the admin address of the group policy.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_policies_by_group/{group_id}": {
      "get": {
        "summary": "GroupPoliciesByGroup queries group policies by group id.",
        "operationId": "GroupPoliciesByGroup_Q G 3 B 3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupPoliciesByGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "group_id",
            "description": "group_id is the unique ID of the group policy's group.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/group_policy_info/{address}": {
      "get": {
        "summary": "GroupPolicyInfo queries group policy info based on account address of group policy.",
        "operationId": "GroupPolicyInfo_1 0 1 Z L",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupPolicyInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address is the account address of the group policy.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/groups": {
      "get": {
        "summary": "Groups queries all groups in state.",
        "description": "Since: cosmos-sdk 0.47.1",
        "operationId": "Groups_R 1 A G D",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/groups_by_admin/{admin}": {
      "get": {
        "summary": "GroupsByAdmin queries groups by admin address.",
        "operationId": "GroupsByAdmin_W T H U 5",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupsByAdminResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "admin",
            "description": "admin is the account address of a group's admin.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/groups_by_member/{address}": {
      "get": {
        "summary": "GroupsByMember queries groups by member address.",
        "operationId": "GroupsByMember_D N R R 8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryGroupsByMemberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address is the group member address.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/proposal/{proposal_id}": {
      "get": {
        "summary": "Proposal queries a proposal based on proposal id.",
        "operationId": "Proposal_R B C 2 P",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique ID of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/proposals/{proposal_id}/tally": {
      "get": {
        "summary": "TallyResult returns the tally result of a proposal. If the proposal is\nstill in voting period, then this query computes the current tally state,\nwhich might not be final. On the other hand, if the proposal is final,\nthen it simply returns the `final_tally_result` state stored in the\nproposal itself.",
        "operationId": "TallyResult_K K O 3 V",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique id of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/proposals_by_group_policy/{address}": {
      "get": {
        "summary": "ProposalsByGroupPolicy queries proposals based on account address of group policy.",
        "operationId": "ProposalsByGroupPolicy_3 B U O C",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryProposalsByGroupPolicyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address is the account address of the group policy related to proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/vote_by_proposal_voter/{proposal_id}/{voter}": {
      "get": {
        "summary": "VoteByProposalVoter queries a vote by proposal id and voter.",
        "operationId": "VoteByProposalVoter_9 Q H W Y",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryVoteByProposalVoterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique ID of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter is a proposal voter account address.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/votes_by_proposal/{proposal_id}": {
      "get": {
        "summary": "VotesByProposal queries a vote by proposal.",
        "operationId": "VotesByProposal_Y Z 9 O I",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryVotesByProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id is the unique ID of a proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/group/v1/votes_by_voter/{voter}": {
      "get": {
        "summary": "VotesByVoter queries a vote by voter.",
        "operationId": "VotesByVoter_O W M W Q",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.group.v1.QueryVotesByVoterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "voter",
            "description": "voter is a proposal voter account address.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/balances/{address}": {
      "get": {
        "summary": "AllBalances queries the balance of all coins for a single account.",
        "operationId": "AllBalances_K L Y 4 N",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryAllBalancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/balances/{address}/by_denom": {
      "get": {
        "summary": "Balance queries the balance of a single coin for a single account.",
        "operationId": "Balance_L B S X 8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denom is the coin denom to query balances for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/denom_owners/{denom}": {
      "get": {
        "summary": "DenomOwners queries for all account addresses that own a particular token\ndenomination.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "DenomOwners_N M W 9 S",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryDenomOwnersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "denom",
            "description": "denom defines the coin denomination to query all account holders for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/denoms_metadata": {
      "get": {
        "summary": "DenomsMetadata queries the client metadata for all registered coin\ndenominations.",
        "operationId": "DenomsMetadata_C 5 V 1 0",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryDenomsMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/denoms_metadata/{denom}": {
      "get": {
        "summary": "DenomsMetadata queries the client metadata of a given coin denomination.",
        "operationId": "DenomMetadata_K L G 2 E",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryDenomMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "denom",
            "description": "denom is the coin denom to query the metadata for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/params": {
      "get": {
        "summary": "Params queries the parameters of x/bank module.",
        "operationId": "Params_T R M D E",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/spendable_balances/{address}": {
      "get": {
        "summary": "SpendableBalances queries the spenable balance of all coins for a single\naccount.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "SpendableBalances_9 V E W H",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QuerySpendableBalancesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "address",
            "description": "address is the address to query spendable balances for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/supply": {
      "get": {
        "summary": "TotalSupply queries the total supply of all coins.",
        "operationId": "TotalSupply_B X Y 1 Y",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QueryTotalSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/bank/v1beta1/supply/by_denom": {
      "get": {
        "summary": "SupplyOf queries the supply of a single coin.",
        "operationId": "SupplyOf_7 M S G G",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.bank.v1beta1.QuerySupplyOfResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "denom",
            "description": "denom is the coin denom to query balances for.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/community_pool": {
      "get": {
        "summary": "CommunityPool queries the community pool coins.",
        "operationId": "CommunityPool_N W D 2 9",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryCommunityPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards": {
      "get": {
        "summary": "DelegationTotalRewards queries the total rewards accrued by a each\nvalidator.",
        "operationId": "DelegationTotalRewards_U 2 0 I W",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}": {
      "get": {
        "summary": "DelegationRewards queries the total rewards accrued by a delegation.",
        "operationId": "DelegationRewards_W W Q S 2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegationRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators": {
      "get": {
        "summary": "DelegatorValidators queries the validators of a delegator.",
        "operationId": "DelegatorValidators_R Q 3 G I",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address": {
      "get": {
        "summary": "DelegatorWithdrawAddress queries withdraw address of a delegator.",
        "operationId": "DelegatorWithdrawAddress_F X N 2 K",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_address",
            "description": "delegator_address defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/params": {
      "get": {
        "summary": "Params queries params of the distribution module.",
        "operationId": "Params_V S 0 G L",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}/commission": {
      "get": {
        "summary": "ValidatorCommission queries accumulated commission for a validator.",
        "operationId": "ValidatorCommission_L N H M H",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorCommissionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards": {
      "get": {
        "summary": "ValidatorOutstandingRewards queries rewards of a validator address.",
        "operationId": "ValidatorOutstandingRewards_A B A O C",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes": {
      "get": {
        "summary": "ValidatorSlashes queries slash events of a validator.",
        "operationId": "ValidatorSlashes_X 2 C 1 8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.distribution.v1beta1.QueryValidatorSlashesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_address",
            "description": "validator_address defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "starting_height",
            "description": "starting_height defines the optional starting height to query the slashes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "ending_height",
            "description": "starting_height defines the optional ending height to query the slashes.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/tx/v1beta1/simulate": {
      "post": {
        "summary": "Simulate simulates executing a transaction for estimating gas usage.",
        "operationId": "Simulate_S U U 4 P",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.SimulateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.SimulateRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/txs": {
      "get": {
        "summary": "GetTxsEvent fetches txs by event.",
        "operationId": "GetTxsEvent_X 9 A B 1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.GetTxsEventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "events",
            "description": "events is the list of transaction event type.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "order_by",
            "description": " - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending order",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ORDER_BY_UNSPECIFIED",
              "ORDER_BY_ASC",
              "ORDER_BY_DESC"
            ],
            "default": "ORDER_BY_UNSPECIFIED"
          },
          {
            "name": "page",
            "description": "page is the page number to query, starts at 1. If not provided, will default to first page.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Service"
        ]
      },
      "post": {
        "summary": "BroadcastTx broadcast transaction.",
        "operationId": "BroadcastTx_S V U G J",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.BroadcastTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.BroadcastTxRequest"
            }
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/txs/block/{height}": {
      "get": {
        "summary": "GetBlockWithTxs fetches a block with decoded txs.",
        "description": "Since: cosmos-sdk 0.45.2",
        "operationId": "GetBlockWithTxs_K F 4 Z Q",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.GetBlockWithTxsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "height is the height of the block to query.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/tx/v1beta1/txs/{hash}": {
      "get": {
        "summary": "GetTx fetches a tx by hash.",
        "operationId": "GetTx_F B H D U",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.tx.v1beta1.GetTxResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "description": "hash is the tx hash to query, encoded as a hex string.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegations/{delegator_addr}": {
      "get": {
        "summary": "DelegatorDelegations queries all delegations of a given delegator address.",
        "operationId": "DelegatorDelegations_D H Y 5 D",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations": {
      "get": {
        "summary": "Redelegations queries redelegations of given address.",
        "operationId": "Redelegations_X T 2 P A",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryRedelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "src_validator_addr",
            "description": "src_validator_addr defines the validator address to redelegate from.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dst_validator_addr",
            "description": "dst_validator_addr defines the validator address to redelegate to.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations": {
      "get": {
        "summary": "DelegatorUnbondingDelegations queries all unbonding delegations of a given\ndelegator address.",
        "operationId": "DelegatorUnbondingDelegations_U K 9 Q Z",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators": {
      "get": {
        "summary": "DelegatorValidators queries all validators info for given delegator\naddress.",
        "operationId": "DelegatorValidators_O O Q I B",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}": {
      "get": {
        "summary": "DelegatorValidator queries validator info for given delegator validator\npair.",
        "operationId": "DelegatorValidator_0 D O C U",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegatorValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/historical_info/{height}": {
      "get": {
        "summary": "HistoricalInfo queries the historical info for given height.",
        "operationId": "HistoricalInfo_0 W G T 0",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryHistoricalInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "description": "height defines at which height to query the historical info.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/params": {
      "get": {
        "summary": "Parameters queries the staking parameters.",
        "operationId": "Params_U H Z M F",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/pool": {
      "get": {
        "summary": "Pool queries the pool info.",
        "operationId": "Pool_J Z M X 1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators": {
      "get": {
        "summary": "Validators queries all validators that match the given status.",
        "operationId": "Validators_P U P X K",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "status",
            "description": "status enables to query for validators matching a given status.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}": {
      "get": {
        "summary": "Validator queries validator info for given validator address.",
        "operationId": "Validator_O 7 A F D",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations": {
      "get": {
        "summary": "ValidatorDelegations queries delegate info for given validator.",
        "operationId": "ValidatorDelegations_H L U C X",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}": {
      "get": {
        "summary": "Delegation queries delegate info for given validator delegator pair.",
        "operationId": "Delegation_W L G Z 9",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryDelegationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation": {
      "get": {
        "summary": "UnbondingDelegation queries unbonding info for given validator delegator\npair.",
        "operationId": "UnbondingDelegation_Q 7 0 X V",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryUnbondingDelegationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "delegator_addr",
            "description": "delegator_addr defines the delegator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations": {
      "get": {
        "summary": "ValidatorUnbondingDelegations queries unbonding delegations of a validator.",
        "operationId": "ValidatorUnbondingDelegations_V 7 E Y 9",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_addr",
            "description": "validator_addr defines the validator address to query for.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/params/v1beta1/params": {
      "get": {
        "summary": "Params queries a specific parameter of a module, given its subspace and\nkey.",
        "operationId": "Params_1 I C 8 N",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.params.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "subspace",
            "description": "subspace defines the module to query the parameter for.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "key",
            "description": "key defines the key of the parameter in the subspace.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/params/v1beta1/subspaces": {
      "get": {
        "summary": "Subspaces queries for all registered subspaces and all keys for a subspace.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "Subspaces_O A T V 8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.params.v1beta1.QuerySubspacesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/authz/v1beta1/grants": {
      "get": {
        "summary": "Returns list of `Authorization`, granted to the grantee by the granter.",
        "operationId": "Grants_Z A I 1 S",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.QueryGrantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "granter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "grantee",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "msg_type_url",
            "description": "Optional, msg_type_url, when set, will query only grants matching given msg type.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/authz/v1beta1/grants/grantee/{grantee}": {
      "get": {
        "summary": "GranteeGrants returns a list of `GrantAuthorization` by grantee.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GranteeGrants_3 O Q I X",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.QueryGranteeGrantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "grantee",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/authz/v1beta1/grants/granter/{granter}": {
      "get": {
        "summary": "GranterGrants returns list of `GrantAuthorization`, granted by granter.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "GranterGrants_6 1 H M R",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.authz.v1beta1.QueryGranterGrantsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "granter",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/slashing/v1beta1/params": {
      "get": {
        "summary": "Params queries the parameters of slashing module",
        "operationId": "Params_U I Q F 7",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.slashing.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/slashing/v1beta1/signing_infos": {
      "get": {
        "summary": "SigningInfos queries signing info of all validators",
        "operationId": "SigningInfos_K 5 5 9 Z",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.slashing.v1beta1.QuerySigningInfosResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/slashing/v1beta1/signing_infos/{cons_address}": {
      "get": {
        "summary": "SigningInfo queries the signing info of given cons address",
        "operationId": "SigningInfo_H K 5 F 3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.slashing.v1beta1.QuerySigningInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "cons_address",
            "description": "cons_address is the address to query signing info of",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/abci_query": {
      "get": {
        "summary": "ABCIQuery defines a query handler that supports ABCI queries directly to\nthe application, bypassing Tendermint completely. The ABCI query must\ncontain a valid and supported path, including app, custom, p2p, and store.",
        "description": "Since: cosmos-sdk 0.46",
        "operationId": "ABCIQuery_N A 2 1 A",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.ABCIQueryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "prove",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/blocks/latest": {
      "get": {
        "summary": "GetLatestBlock returns the latest block.",
        "operationId": "GetLatestBlock_I 3 U A O",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetLatestBlockResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/blocks/{height}": {
      "get": {
        "summary": "GetBlockByHeight queries block for given height.",
        "operationId": "GetBlockByHeight_O L H P V",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/node_info": {
      "get": {
        "summary": "GetNodeInfo queries the current node info.",
        "operationId": "GetNodeInfo_R R O N U",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetNodeInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/syncing": {
      "get": {
        "summary": "GetSyncing queries node syncing.",
        "operationId": "GetSyncing_D A I G 1",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetSyncingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/validatorsets/latest": {
      "get": {
        "summary": "GetLatestValidatorSet queries latest validator-set.",
        "operationId": "GetLatestValidatorSet_I W L W I",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/tendermint/v1beta1/validatorsets/{height}": {
      "get": {
        "summary": "GetValidatorSetByHeight queries validator-set at a given height.",
        "operationId": "GetValidatorSetByHeight_J 9 1 1 W",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/base/node/v1beta1/config": {
      "get": {
        "summary": "Config queries for the operator configuration.",
        "operationId": "Config_4 K I A L",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.base.node.v1beta1.ConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Service"
        ]
      }
    },
    "/cosmos/gov/v1/params/{params_type}": {
      "get": {
        "summary": "Params queries all parameters of the gov module.",
        "operationId": "Params_2 4 3 7 7",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "params_type",
            "description": "params_type defines which parameters to query for, can be one of \"voting\",\n\"tallying\" or \"deposit\".",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals": {
      "get": {
        "summary": "Proposals queries all proposals based on given status.",
        "operationId": "Proposals_2 W 2 1 8",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryProposalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_status",
            "description": "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PROPOSAL_STATUS_UNSPECIFIED",
              "PROPOSAL_STATUS_DEPOSIT_PERIOD",
              "PROPOSAL_STATUS_VOTING_PERIOD",
              "PROPOSAL_STATUS_PASSED",
              "PROPOSAL_STATUS_REJECTED",
              "PROPOSAL_STATUS_FAILED"
            ],
            "default": "PROPOSAL_STATUS_UNSPECIFIED"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}": {
      "get": {
        "summary": "Proposal queries proposal details based on ProposalID.",
        "operationId": "Proposal_S Y W 4 Y",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/deposits": {
      "get": {
        "summary": "Deposits queries all deposits of a single proposal.",
        "operationId": "Deposits_I I T K B",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryDepositsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/deposits/{depositor}": {
      "get": {
        "summary": "Deposit queries single deposit information based proposalID, depositAddr.",
        "operationId": "Deposit_F U Z J J",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryDepositResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/tally": {
      "get": {
        "summary": "TallyResult queries the tally of a proposal vote.",
        "operationId": "TallyResult_U 2 U 2 V",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/votes": {
      "get": {
        "summary": "Votes queries votes of a given proposal.",
        "operationId": "Votes_N C 1 H Z",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryVotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1/proposals/{proposal_id}/votes/{voter}": {
      "get": {
        "summary": "Vote queries voted information based on proposalID, voterAddr.",
        "operationId": "Vote_Q C C T N",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1.QueryVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/params/{params_type}": {
      "get": {
        "summary": "Params queries all parameters of the gov module.",
        "operationId": "Params_Q D L B X",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "params_type",
            "description": "params_type defines which parameters to query for, can be one of \"voting\",\n\"tallying\" or \"deposit\".",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals": {
      "get": {
        "summary": "Proposals queries all proposals based on given status.",
        "operationId": "Proposals_B A H A 3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryProposalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_status",
            "description": "proposal_status defines the status of the proposals.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PROPOSAL_STATUS_UNSPECIFIED",
              "PROPOSAL_STATUS_DEPOSIT_PERIOD",
              "PROPOSAL_STATUS_VOTING_PERIOD",
              "PROPOSAL_STATUS_PASSED",
              "PROPOSAL_STATUS_REJECTED",
              "PROPOSAL_STATUS_FAILED"
            ],
            "default": "PROPOSAL_STATUS_UNSPECIFIED"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}": {
      "get": {
        "summary": "Proposal queries proposal details based on ProposalID.",
        "operationId": "Proposal_X R D D X",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits": {
      "get": {
        "summary": "Deposits queries all deposits of a single proposal.",
        "operationId": "Deposits_8 G S T 3",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryDepositsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}": {
      "get": {
        "summary": "Deposit queries single deposit information based proposalID, depositAddr.",
        "operationId": "Deposit_F M E 6 F",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryDepositResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "depositor",
            "description": "depositor defines the deposit addresses from the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/tally": {
      "get": {
        "summary": "TallyResult queries the tally of a proposal vote.",
        "operationId": "TallyResult_J D S D Q",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryTallyResultResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes": {
      "get": {
        "summary": "Votes queries votes of a given proposal.",
        "operationId": "Votes_Z P 5 B F",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryVotesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.count_total",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}": {
      "get": {
        "summary": "Vote queries voted information based on proposalID, voterAddr.",
        "operationId": "Vote_H K D X C",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cosmos.gov.v1beta1.QueryVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "proposal_id",
            "description": "proposal_id defines the unique id of the proposal.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "voter",
            "description": "voter defines the voter address for the proposals.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/genesis_time": {
      "get": {
        "summary": "GenesisTime returns the genesis time.",
        "operationId": "GenesisTime_A 0 L F Z",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.mint.v1.QueryGenesisTimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/cosmos/mint/v1beta1/inflation_rate": {
      "get": {
        "summary": "InflationRate returns the current inflation rate.",
        "operationId": "InflationRate_N P K B 6",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.mint.v1.QueryInflationRateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/attestations/nonce/earliest": {
      "get": {
        "summary": "EarliestAttestationNonce queries the earliest attestation nonce.",
        "operationId": "EarliestAttestationNonce_S 9 Q O 7",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryEarliestAttestationNonceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/attestations/nonce/latest": {
      "get": {
        "summary": "LatestAttestationNonce queries latest attestation nonce.",
        "operationId": "LatestAttestationNonce_4 M D V D",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryLatestAttestationNonceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/attestations/requests/{nonce}": {
      "get": {
        "summary": "AttestationRequestByNonce queries attestation request by nonce.\nReturns nil if not found.",
        "operationId": "AttestationRequestByNonce_S I O G D",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryAttestationRequestByNonceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "nonce",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/data_commitment/latest": {
      "get": {
        "summary": "LatestDataCommitment returns the latest data commitment in store",
        "operationId": "LatestDataCommitment_G F L 6 K",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryLatestDataCommitmentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/data_commitment/range/height": {
      "get": {
        "summary": "DataCommitmentRangeForHeight returns the data commitment window\nthat includes the provided height",
        "operationId": "DataCommitmentRangeForHeight_7 J C O X",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryDataCommitmentRangeForHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "height",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/evm_address": {
      "get": {
        "summary": "EVMAddress returns the evm address associated with a supplied\nvalidator address",
        "operationId": "EVMAddress_T X M H I",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryEVMAddressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "validator_address",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/params": {
      "get": {
        "summary": "Params queries the current parameters for the blobstream module",
        "operationId": "Params_W I Z 1 0",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/unbonding": {
      "get": {
        "summary": "LatestUnbondingHeight returns the latest unbonding height",
        "operationId": "LatestUnbondingHeight_K 2 G K 2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryLatestUnbondingHeightResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/qgb/v1/valset/request/before/{nonce}": {
      "get": {
        "summary": "LatestValsetRequestBeforeNonce Queries latest Valset request before nonce.\nAnd, even if the current nonce is a valset, it will return the previous\none.\nIf the provided nonce is 1, it will return an error, because, there is\nno valset before nonce 1.",
        "operationId": "LatestValsetRequestBeforeNonce_A P E 3 7",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.qgb.v1.QueryLatestValsetRequestBeforeNonceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "nonce",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/blob/v1/params": {
      "get": {
        "summary": "Params queries the parameters of the module.",
        "operationId": "Params_K N N D C",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/celestia.blob.v1.QueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    }
  },
  "definitions": {
    "cosmos.upgrade.v1beta1.ModuleVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "name of the app module"
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "title": "consensus version of the app module"
        }
      },
      "description": "ModuleVersion specifies a module and its consensus version.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.upgrade.v1beta1.Plan": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Sets the name for the upgrade. This name will be used by the upgraded\nversion of the software to apply any special \"on-upgrade\" commands during\nthe first BeginBlock method after the upgrade is applied. It is also used\nto detect whether a software version can handle a given upgrade. If no\nupgrade handler with this name has been set in the software, it will be\nassumed that the software is out-of-date when the upgrade Time or Height is\nreached and the software will exit."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Deprecated: Time based upgrades have been deprecated. Time based upgrade logic\nhas been removed from the SDK.\nIf this field is not empty, an error will be thrown."
        },
        "height": {
          "type": "string",
          "format": "int64",
          "description": "The height at which the upgrade must be performed.\nOnly used if Time is not set."
        },
        "info": {
          "type": "string",
          "title": "Any application specific upgrade info to be included on-chain\nsuch as a git commit that validators could automatically upgrade to"
        },
        "upgraded_client_state": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "Deprecated: UpgradedClientState field has been deprecated. IBC upgrade logic has been\nmoved to the IBC module in the sub module 02-client.\nIf this field is not empty, an error will be thrown."
        }
      },
      "description": "Plan specifies information about a planned upgrade and when it should occur."
    },
    "cosmos.upgrade.v1beta1.QueryAppliedPlanResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64",
          "description": "height is the block height at which the plan was applied."
        }
      },
      "description": "QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC\nmethod."
    },
    "cosmos.upgrade.v1beta1.QueryAuthorityResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "description": "Since: cosmos-sdk 0.46",
      "title": "QueryAuthorityResponse is the response type for Query/Authority"
    },
    "cosmos.upgrade.v1beta1.QueryCurrentPlanResponse": {
      "type": "object",
      "properties": {
        "plan": {
          "$ref": "#/definitions/cosmos.upgrade.v1beta1.Plan",
          "description": "plan is the current upgrade plan."
        }
      },
      "description": "QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC\nmethod."
    },
    "cosmos.upgrade.v1beta1.QueryModuleVersionsResponse": {
      "type": "object",
      "properties": {
        "module_versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.upgrade.v1beta1.ModuleVersion"
          },
          "description": "module_versions is a list of module names with their consensus versions."
        }
      },
      "description": "QueryModuleVersionsResponse is the response type for the Query/ModuleVersions\nRPC method.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse": {
      "type": "object",
      "properties": {
        "upgraded_consensus_state": {
          "type": "string",
          "format": "byte",
          "title": "Since: cosmos-sdk 0.43"
        }
      },
      "description": "QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState\nRPC method."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "count_total": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "next_key": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "cosmos.feegrant.v1beta1.Grant": {
      "type": "object",
      "properties": {
        "granter": {
          "type": "string",
          "description": "granter is the address of the user granting an allowance of their funds."
        },
        "grantee": {
          "type": "string",
          "description": "grantee is the address of the user being granted an allowance of another user's funds."
        },
        "allowance": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "allowance can be any of basic, periodic, allowed fee allowance."
        }
      },
      "title": "Grant is stored in the KVStore to record a grant with full context"
    },
    "cosmos.feegrant.v1beta1.QueryAllowanceResponse": {
      "type": "object",
      "properties": {
        "allowance": {
          "$ref": "#/definitions/cosmos.feegrant.v1beta1.Grant",
          "description": "allowance is a allowance granted for grantee by granter."
        }
      },
      "description": "QueryAllowanceResponse is the response type for the Query/Allowance RPC method."
    },
    "cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse": {
      "type": "object",
      "properties": {
        "allowances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.feegrant.v1beta1.Grant"
          },
          "description": "allowances that have been issued by the granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryAllowancesByGranterResponse is the response type for the Query/AllowancesByGranter RPC method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.feegrant.v1beta1.QueryAllowancesResponse": {
      "type": "object",
      "properties": {
        "allowances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.feegrant.v1beta1.Grant"
          },
          "description": "allowances are allowance's granted for grantee by granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryAllowancesResponse is the response type for the Query/Allowances RPC method."
    },
    "cosmos.mint.v1beta1.Params": {
      "type": "object",
      "properties": {
        "mint_denom": {
          "type": "string",
          "title": "type of coin to mint"
        },
        "inflation_rate_change": {
          "type": "string",
          "title": "maximum annual change in inflation rate"
        },
        "inflation_max": {
          "type": "string",
          "title": "maximum inflation rate"
        },
        "inflation_min": {
          "type": "string",
          "title": "minimum inflation rate"
        },
        "goal_bonded": {
          "type": "string",
          "title": "goal of percent bonded atoms"
        },
        "blocks_per_year": {
          "type": "string",
          "format": "uint64",
          "title": "expected blocks per year"
        }
      },
      "description": "Params holds parameters for the mint module."
    },
    "cosmos.mint.v1beta1.QueryAnnualProvisionsResponse": {
      "type": "object",
      "properties": {
        "annual_provisions": {
          "type": "string",
          "format": "byte",
          "description": "annual_provisions is the current minting annual provisions value."
        }
      },
      "description": "QueryAnnualProvisionsResponse is the response type for the\nQuery/AnnualProvisions RPC method."
    },
    "cosmos.mint.v1beta1.QueryInflationResponse": {
      "type": "object",
      "properties": {
        "inflation": {
          "type": "string",
          "format": "byte",
          "description": "inflation is the current minting inflation value."
        }
      },
      "description": "QueryInflationResponse is the response type for the Query/Inflation RPC\nmethod."
    },
    "cosmos.mint.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.mint.v1beta1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.app.v1alpha1.Config": {
      "type": "object",
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.app.v1alpha1.ModuleConfig"
          },
          "description": "modules are the module configurations for the app."
        }
      },
      "description": "Config represents the configuration for a Cosmos SDK ABCI app.\nIt is intended that all state machine logic including the version of\nbaseapp and tx handlers (and possibly even Tendermint) that an app needs\ncan be described in a config object. For compatibility, the framework should\nallow a mixture of declarative and imperative app wiring, however, apps\nthat strive for the maximum ease of maintainability should be able to describe\ntheir state machine with a config object alone."
    },
    "cosmos.app.v1alpha1.ModuleConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the unique name of the module within the app. It should be a name\nthat persists between different versions of a module so that modules\ncan be smoothly upgraded to new versions.\n\nFor example, for the module cosmos.bank.module.v1.Module, we may chose\nto simply name the module \"bank\" in the app. When we upgrade to\ncosmos.bank.module.v2.Module, the app-specific name \"bank\" stays the same\nand the framework knows that the v2 module should receive all the same state\nthat the v1 module had. Note: modules should provide info on which versions\nthey can migrate from in the ModuleDescriptor.can_migration_from field."
        },
        "config": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "config is the config object for the module. Module config messages should\ndefine a ModuleDescriptor using the cosmos.app.v1alpha1.is_module extension."
        }
      },
      "description": "ModuleConfig is a module configuration for an app."
    },
    "cosmos.app.v1alpha1.QueryConfigResponse": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/cosmos.app.v1alpha1.Config",
          "description": "config is the current app config."
        }
      },
      "description": "QueryConfigRequest is the Query/Config response type."
    },
    "cosmos.evidence.v1beta1.QueryAllEvidenceResponse": {
      "type": "object",
      "properties": {
        "evidence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "evidence returns all evidences."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC\nmethod."
    },
    "cosmos.evidence.v1beta1.QueryEvidenceResponse": {
      "type": "object",
      "properties": {
        "evidence": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "evidence returns the requested evidence."
        }
      },
      "description": "QueryEvidenceResponse is the response type for the Query/Evidence RPC method."
    },
    "cosmos.nft.v1beta1.Class": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id defines the unique identifier of the NFT classification, similar to the contract address of ERC721"
        },
        "name": {
          "type": "string",
          "title": "name defines the human-readable name of the NFT classification. Optional"
        },
        "symbol": {
          "type": "string",
          "title": "symbol is an abbreviated name for nft classification. Optional"
        },
        "description": {
          "type": "string",
          "title": "description is a brief description of nft classification. Optional"
        },
        "uri": {
          "type": "string",
          "title": "uri for the class metadata stored off chain. It can define schema for Class and NFT `Data` attributes. Optional"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri. Optional"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is the app specific metadata of the NFT class. Optional"
        }
      },
      "description": "Class defines the class of the nft type."
    },
    "cosmos.nft.v1beta1.NFT": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string",
          "title": "class_id associated with the NFT, similar to the contract address of ERC721"
        },
        "id": {
          "type": "string",
          "title": "id is a unique identifier of the NFT"
        },
        "uri": {
          "type": "string",
          "title": "uri for the NFT metadata stored off chain"
        },
        "uri_hash": {
          "type": "string",
          "title": "uri_hash is a hash of the document pointed by uri"
        },
        "data": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "data is an app specific data of the NFT. Optional"
        }
      },
      "description": "NFT defines the NFT."
    },
    "cosmos.nft.v1beta1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QueryBalanceResponse is the response type for the Query/Balance RPC method"
    },
    "cosmos.nft.v1beta1.QueryClassResponse": {
      "type": "object",
      "properties": {
        "class": {
          "$ref": "#/definitions/cosmos.nft.v1beta1.Class"
        }
      },
      "title": "QueryClassResponse is the response type for the Query/Class RPC method"
    },
    "cosmos.nft.v1beta1.QueryClassesResponse": {
      "type": "object",
      "properties": {
        "classes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.nft.v1beta1.Class"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QueryClassesResponse is the response type for the Query/Classes RPC method"
    },
    "cosmos.nft.v1beta1.QueryNFTResponse": {
      "type": "object",
      "properties": {
        "nft": {
          "$ref": "#/definitions/cosmos.nft.v1beta1.NFT"
        }
      },
      "title": "QueryNFTResponse is the response type for the Query/NFT RPC method"
    },
    "cosmos.nft.v1beta1.QueryNFTsResponse": {
      "type": "object",
      "properties": {
        "nfts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.nft.v1beta1.NFT"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QueryNFTsResponse is the response type for the Query/NFTs RPC methods"
    },
    "cosmos.nft.v1beta1.QueryOwnerResponse": {
      "type": "object",
      "properties": {
        "owner": {
          "type": "string"
        }
      },
      "title": "QueryOwnerResponse is the response type for the Query/Owner RPC method"
    },
    "cosmos.nft.v1beta1.QuerySupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QuerySupplyResponse is the response type for the Query/Supply RPC method"
    },
    "cosmos.auth.v1beta1.AddressBytesToStringResponse": {
      "type": "object",
      "properties": {
        "address_string": {
          "type": "string"
        }
      },
      "description": "AddressBytesToStringResponse is the response type for AddressString rpc method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.AddressStringToBytesResponse": {
      "type": "object",
      "properties": {
        "address_bytes": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "AddressStringToBytesResponse is the response type for AddressBytes rpc method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.Bech32PrefixResponse": {
      "type": "object",
      "properties": {
        "bech32_prefix": {
          "type": "string"
        }
      },
      "description": "Bech32PrefixResponse is the response type for Bech32Prefix rpc method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.Params": {
      "type": "object",
      "properties": {
        "max_memo_characters": {
          "type": "string",
          "format": "uint64"
        },
        "tx_sig_limit": {
          "type": "string",
          "format": "uint64"
        },
        "tx_size_cost_per_byte": {
          "type": "string",
          "format": "uint64"
        },
        "sig_verify_cost_ed25519": {
          "type": "string",
          "format": "uint64"
        },
        "sig_verify_cost_secp256k1": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Params defines the parameters for the auth module."
    },
    "cosmos.auth.v1beta1.QueryAccountAddressByIDResponse": {
      "type": "object",
      "properties": {
        "account_address": {
          "type": "string"
        }
      },
      "description": "Since: cosmos-sdk 0.46.2",
      "title": "QueryAccountAddressByIDResponse is the response type for AccountAddressByID rpc method"
    },
    "cosmos.auth.v1beta1.QueryAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "account defines the account of the corresponding address."
        }
      },
      "description": "QueryAccountResponse is the response type for the Query/Account RPC method."
    },
    "cosmos.auth.v1beta1.QueryAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "title": "accounts are the existing accounts"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryAccountsResponse is the response type for the Query/Accounts RPC method.\n\nSince: cosmos-sdk 0.43"
    },
    "cosmos.auth.v1beta1.QueryModuleAccountByNameResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/google.protobuf.Any"
        }
      },
      "description": "QueryModuleAccountByNameResponse is the response type for the Query/ModuleAccountByName RPC method."
    },
    "cosmos.auth.v1beta1.QueryModuleAccountsResponse": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      },
      "description": "QueryModuleAccountsResponse is the response type for the Query/ModuleAccounts RPC method.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.auth.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.auth.v1beta1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.group.v1.GroupInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id is the unique ID of the group."
        },
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group's admin."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata to attached to the group."
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "title": "version is used to track changes to a group's membership structure that\nwould break existing proposals. Whenever any members weight is changed,\nor any member is added or removed this version is incremented and will\ncause proposals based on older versions of this group to fail"
        },
        "total_weight": {
          "type": "string",
          "description": "total_weight is the sum of the group members' weights."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is a timestamp specifying when a group was created."
        }
      },
      "description": "GroupInfo represents the high-level on-chain information for a group."
    },
    "cosmos.group.v1.GroupMember": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "member": {
          "$ref": "#/definitions/cosmos.group.v1.Member",
          "description": "member is the member data."
        }
      },
      "description": "GroupMember represents the relationship between a group and a member."
    },
    "cosmos.group.v1.GroupPolicyInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the account address of group policy."
        },
        "group_id": {
          "type": "string",
          "format": "uint64",
          "description": "group_id is the unique ID of the group."
        },
        "admin": {
          "type": "string",
          "description": "admin is the account address of the group admin."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata to attached to the group policy."
        },
        "version": {
          "type": "string",
          "format": "uint64",
          "description": "version is used to track changes to a group's GroupPolicyInfo structure that\nwould create a different result on a running proposal."
        },
        "decision_policy": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "decision_policy specifies the group policy's decision policy."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "created_at is a timestamp specifying when a group policy was created."
        }
      },
      "description": "GroupPolicyInfo represents the high-level on-chain information for a group policy."
    },
    "cosmos.group.v1.Member": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address is the member's account address."
        },
        "weight": {
          "type": "string",
          "description": "weight is the member's voting weight that should be greater than 0."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the member."
        },
        "added_at": {
          "type": "string",
          "format": "date-time",
          "description": "added_at is a timestamp specifying when a member was added."
        }
      },
      "description": "Member represents a group member with an account address,\nnon-zero weight, metadata and added_at timestamp."
    },
    "cosmos.group.v1.Proposal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64",
          "description": "id is the unique id of the proposal."
        },
        "group_policy_address": {
          "type": "string",
          "description": "group_policy_address is the account address of group policy."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata to attached to the proposal."
        },
        "proposers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "proposers are the account addresses of the proposers."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time",
          "description": "submit_time is a timestamp specifying when a proposal was submitted."
        },
        "group_version": {
          "type": "string",
          "format": "uint64",
          "description": "group_version tracks the version of the group at proposal submission.\nThis field is here for informational purposes only."
        },
        "group_policy_version": {
          "type": "string",
          "format": "uint64",
          "description": "group_policy_version tracks the version of the group policy at proposal submission.\nWhen a decision policy is changed, existing proposals from previous policy\nversions will become invalid with the `ABORTED` status.\nThis field is here for informational purposes only."
        },
        "status": {
          "$ref": "#/definitions/cosmos.group.v1.ProposalStatus",
          "description": "status represents the high level position in the life cycle of the proposal. Initial value is Submitted."
        },
        "final_tally_result": {
          "$ref": "#/definitions/cosmos.group.v1.TallyResult",
          "description": "final_tally_result contains the sums of all weighted votes for this\nproposal for each vote option. It is empty at submission, and only\npopulated after tallying, at voting period end or at proposal execution,\nwhichever happens first."
        },
        "voting_period_end": {
          "type": "string",
          "format": "date-time",
          "description": "voting_period_end is the timestamp before which voting must be done.\nUnless a successfull MsgExec is called before (to execute a proposal whose\ntally is successful before the voting period ends), tallying will be done\nat this point, and the `final_tally_result`and `status` fields will be\naccordingly updated."
        },
        "executor_result": {
          "$ref": "#/definitions/cosmos.group.v1.ProposalExecutorResult",
          "description": "executor_result is the final result of the proposal execution. Initial value is NotRun."
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "messages is a list of `sdk.Msg`s that will be executed if the proposal passes."
        }
      },
      "description": "Proposal defines a group proposal. Any member of a group can submit a proposal\nfor a group policy to decide upon.\nA proposal consists of a set of `sdk.Msg`s that will be executed if the proposal\npasses as well as some optional metadata associated with the proposal."
    },
    "cosmos.group.v1.ProposalExecutorResult": {
      "type": "string",
      "enum": [
        "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",
        "PROPOSAL_EXECUTOR_RESULT_NOT_RUN",
        "PROPOSAL_EXECUTOR_RESULT_SUCCESS",
        "PROPOSAL_EXECUTOR_RESULT_FAILURE"
      ],
      "default": "PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED",
      "description": "ProposalExecutorResult defines types of proposal executor results.\n\n - PROPOSAL_EXECUTOR_RESULT_UNSPECIFIED: An empty value is not allowed.\n - PROPOSAL_EXECUTOR_RESULT_NOT_RUN: We have not yet run the executor.\n - PROPOSAL_EXECUTOR_RESULT_SUCCESS: The executor was successful and proposed action updated state.\n - PROPOSAL_EXECUTOR_RESULT_FAILURE: The executor returned an error and proposed action didn't update state."
    },
    "cosmos.group.v1.ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_SUBMITTED",
        "PROPOSAL_STATUS_ACCEPTED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_ABORTED",
        "PROPOSAL_STATUS_WITHDRAWN"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "ProposalStatus defines proposal statuses.\n\n - PROPOSAL_STATUS_UNSPECIFIED: An empty value is invalid and not allowed.\n - PROPOSAL_STATUS_SUBMITTED: Initial status of a proposal when submitted.\n - PROPOSAL_STATUS_ACCEPTED: Final status of a proposal when the final tally is done and the outcome\npasses the group policy's decision policy.\n - PROPOSAL_STATUS_REJECTED: Final status of a proposal when the final tally is done and the outcome\nis rejected by the group policy's decision policy.\n - PROPOSAL_STATUS_ABORTED: Final status of a proposal when the group policy is modified before the\nfinal tally.\n - PROPOSAL_STATUS_WITHDRAWN: A proposal can be withdrawn before the voting start time by the owner.\nWhen this happens the final status is Withdrawn."
    },
    "cosmos.group.v1.QueryGroupInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/cosmos.group.v1.GroupInfo",
          "description": "info is the GroupInfo for the group."
        }
      },
      "description": "QueryGroupInfoResponse is the Query/GroupInfo response type."
    },
    "cosmos.group.v1.QueryGroupMembersResponse": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.GroupMember"
          },
          "description": "members are the members of the group with given group_id."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupMembersResponse is the Query/GroupMembersResponse response type."
    },
    "cosmos.group.v1.QueryGroupPoliciesByAdminResponse": {
      "type": "object",
      "properties": {
        "group_policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.GroupPolicyInfo"
          },
          "description": "group_policies are the group policies info with provided admin."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupPoliciesByAdminResponse is the Query/GroupPoliciesByAdmin response type."
    },
    "cosmos.group.v1.QueryGroupPoliciesByGroupResponse": {
      "type": "object",
      "properties": {
        "group_policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.GroupPolicyInfo"
          },
          "description": "group_policies are the group policies info associated with the provided group."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupPoliciesByGroupResponse is the Query/GroupPoliciesByGroup response type."
    },
    "cosmos.group.v1.QueryGroupPolicyInfoResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/cosmos.group.v1.GroupPolicyInfo",
          "description": "info is the GroupPolicyInfo for the group policy."
        }
      },
      "description": "QueryGroupPolicyInfoResponse is the Query/GroupPolicyInfo response type."
    },
    "cosmos.group.v1.QueryGroupsByAdminResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.GroupInfo"
          },
          "description": "groups are the groups info with the provided admin."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupsByAdminResponse is the Query/GroupsByAdminResponse response type."
    },
    "cosmos.group.v1.QueryGroupsByMemberResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.GroupInfo"
          },
          "description": "groups are the groups info with the provided group member."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupsByMemberResponse is the Query/GroupsByMember response type."
    },
    "cosmos.group.v1.QueryGroupsResponse": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.GroupInfo"
          },
          "description": "`groups` is all the groups present in state."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryGroupsResponse is the Query/Groups response type.\n\nSince: cosmos-sdk 0.47.1"
    },
    "cosmos.group.v1.QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/cosmos.group.v1.Proposal",
          "description": "proposal is the proposal info."
        }
      },
      "description": "QueryProposalResponse is the Query/Proposal response type."
    },
    "cosmos.group.v1.QueryProposalsByGroupPolicyResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.Proposal"
          },
          "description": "proposals are the proposals with given group policy."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsByGroupPolicyResponse is the Query/ProposalByGroupPolicy response type."
    },
    "cosmos.group.v1.QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/cosmos.group.v1.TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the Query/TallyResult response type."
    },
    "cosmos.group.v1.QueryVoteByProposalVoterResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/cosmos.group.v1.Vote",
          "description": "vote is the vote with given proposal_id and voter."
        }
      },
      "description": "QueryVoteByProposalVoterResponse is the Query/VoteByProposalVoter response type."
    },
    "cosmos.group.v1.QueryVotesByProposalResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.Vote"
          },
          "description": "votes are the list of votes for given proposal_id."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesByProposalResponse is the Query/VotesByProposal response type."
    },
    "cosmos.group.v1.QueryVotesByVoterResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.group.v1.Vote"
          },
          "description": "votes are the list of votes by given voter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesByVoterResponse is the Query/VotesByVoter response type."
    },
    "cosmos.group.v1.TallyResult": {
      "type": "object",
      "properties": {
        "yes_count": {
          "type": "string",
          "description": "yes_count is the weighted sum of yes votes."
        },
        "abstain_count": {
          "type": "string",
          "description": "abstain_count is the weighted sum of abstainers."
        },
        "no_count": {
          "type": "string",
          "description": "no_count is the weighted sum of no votes."
        },
        "no_with_veto_count": {
          "type": "string",
          "description": "no_with_veto_count is the weighted sum of veto."
        }
      },
      "description": "TallyResult represents the sum of weighted votes for each vote option."
    },
    "cosmos.group.v1.Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64",
          "description": "proposal is the unique ID of the proposal."
        },
        "voter": {
          "type": "string",
          "description": "voter is the account address of the voter."
        },
        "option": {
          "$ref": "#/definitions/cosmos.group.v1.VoteOption",
          "description": "option is the voter's choice on the proposal."
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata to attached to the vote."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time",
          "description": "submit_time is the timestamp when the vote was submitted."
        }
      },
      "description": "Vote represents a vote for a proposal."
    },
    "cosmos.group.v1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines an unspecified vote option which will\nreturn an error.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.bank.v1beta1.DenomOwner": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address defines the address that owns a particular denomination."
        },
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "balance is the balance of the denominated coin for an account."
        }
      },
      "description": "DenomOwner defines structure representing an account that owns or holds a\nparticular denominated token. It contains the account address and account\nbalance of the denominated token.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.bank.v1beta1.DenomUnit": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string",
          "description": "denom represents the string name of the given denom unit (e.g uatom)."
        },
        "exponent": {
          "type": "integer",
          "format": "int64",
          "description": "exponent represents power of 10 exponent that one must\nraise the base_denom to in order to equal the given DenomUnit's denom\n1 denom = 10^exponent base_denom\n(e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom' with\nexponent = 6, thus: 1 atom = 10^6 uatom)."
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "aliases is a list of string aliases for the given denom"
        }
      },
      "description": "DenomUnit represents a struct that describes a given\ndenomination unit of the basic token."
    },
    "cosmos.bank.v1beta1.Metadata": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "denom_units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.bank.v1beta1.DenomUnit"
          },
          "title": "denom_units represents the list of DenomUnit's for a given coin"
        },
        "base": {
          "type": "string",
          "description": "base represents the base denom (should be the DenomUnit with exponent = 0)."
        },
        "display": {
          "type": "string",
          "description": "display indicates the suggested denom that should be\ndisplayed in clients."
        },
        "name": {
          "type": "string",
          "description": "Since: cosmos-sdk 0.43",
          "title": "name defines the name of the token (eg: Cosmos Atom)"
        },
        "symbol": {
          "type": "string",
          "description": "symbol is the token symbol usually shown on exchanges (eg: ATOM). This can\nbe the same as the display.\n\nSince: cosmos-sdk 0.43"
        },
        "uri": {
          "type": "string",
          "description": "URI to a document (on or off-chain) that contains additional information. Optional.\n\nSince: cosmos-sdk 0.46"
        },
        "uri_hash": {
          "type": "string",
          "description": "URIHash is a sha256 hash of a document pointed by URI. It's used to verify that\nthe document didn't change. Optional.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "Metadata represents a struct that describes\na basic token."
    },
    "cosmos.bank.v1beta1.Params": {
      "type": "object",
      "properties": {
        "send_enabled": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.bank.v1beta1.SendEnabled"
          }
        },
        "default_send_enabled": {
          "type": "boolean"
        }
      },
      "description": "Params defines the parameters for the bank module."
    },
    "cosmos.bank.v1beta1.QueryAllBalancesResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "balances is the balances of all the coins."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryAllBalancesResponse is the response type for the Query/AllBalances RPC\nmethod."
    },
    "cosmos.bank.v1beta1.QueryBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "balance is the balance of the coin."
        }
      },
      "description": "QueryBalanceResponse is the response type for the Query/Balance RPC method."
    },
    "cosmos.bank.v1beta1.QueryDenomMetadataResponse": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/cosmos.bank.v1beta1.Metadata",
          "description": "metadata describes and provides all the client information for the requested token."
        }
      },
      "description": "QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC\nmethod."
    },
    "cosmos.bank.v1beta1.QueryDenomOwnersResponse": {
      "type": "object",
      "properties": {
        "denom_owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.bank.v1beta1.DenomOwner"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC query.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.bank.v1beta1.QueryDenomsMetadataResponse": {
      "type": "object",
      "properties": {
        "metadatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.bank.v1beta1.Metadata"
          },
          "description": "metadata provides the client information for all the registered tokens."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC\nmethod."
    },
    "cosmos.bank.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.bank.v1beta1.Params"
        }
      },
      "description": "QueryParamsResponse defines the response type for querying x/bank parameters."
    },
    "cosmos.bank.v1beta1.QuerySpendableBalancesResponse": {
      "type": "object",
      "properties": {
        "balances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "balances is the spendable balances of all the coins."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QuerySpendableBalancesResponse defines the gRPC response structure for querying\nan account's spendable balances.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.bank.v1beta1.QuerySupplyOfResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin",
          "description": "amount is the supply of the coin."
        }
      },
      "description": "QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method."
    },
    "cosmos.bank.v1beta1.QueryTotalSupplyResponse": {
      "type": "object",
      "properties": {
        "supply": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "supply is the supply of the coins"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "title": "QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC\nmethod"
    },
    "cosmos.bank.v1beta1.SendEnabled": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      },
      "description": "SendEnabled maps coin denom to a send_enabled status (whether a denom is\nsendable)."
    },
    "cosmos.base.v1beta1.Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.base.v1beta1.DecCoin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "DecCoin defines a token with a denomination and a decimal amount.\n\nNOTE: The amount field is an Dec which implements the custom method\nsignatures required by gogoproto."
    },
    "cosmos.distribution.v1beta1.DelegationDelegatorReward": {
      "type": "object",
      "properties": {
        "validator_address": {
          "type": "string"
        },
        "reward": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        }
      },
      "description": "DelegationDelegatorReward represents the properties\nof a delegator's delegation reward."
    },
    "cosmos.distribution.v1beta1.Params": {
      "type": "object",
      "properties": {
        "community_tax": {
          "type": "string"
        },
        "base_proposer_reward": {
          "type": "string"
        },
        "bonus_proposer_reward": {
          "type": "string"
        },
        "withdraw_addr_enabled": {
          "type": "boolean"
        }
      },
      "description": "Params defines the set of params for the distribution module."
    },
    "cosmos.distribution.v1beta1.QueryCommunityPoolResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "pool defines community pool's coins."
        }
      },
      "description": "QueryCommunityPoolResponse is the response type for the Query/CommunityPool\nRPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegationRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "rewards defines the rewards accrued by a delegation."
        }
      },
      "description": "QueryDelegationRewardsResponse is the response type for the\nQuery/DelegationRewards RPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.distribution.v1beta1.DelegationDelegatorReward"
          },
          "description": "rewards defines all the rewards accrued by a delegator."
        },
        "total": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          },
          "description": "total defines the sum of all the rewards."
        }
      },
      "description": "QueryDelegationTotalRewardsResponse is the response type for the\nQuery/DelegationTotalRewards RPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "validators defines the validators a delegator is delegating for."
        }
      },
      "description": "QueryDelegatorValidatorsResponse is the response type for the\nQuery/DelegatorValidators RPC method."
    },
    "cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse": {
      "type": "object",
      "properties": {
        "withdraw_address": {
          "type": "string",
          "description": "withdraw_address defines the delegator address to query for."
        }
      },
      "description": "QueryDelegatorWithdrawAddressResponse is the response type for the\nQuery/DelegatorWithdrawAddress RPC method."
    },
    "cosmos.distribution.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.distribution.v1beta1.Params",
          "description": "params defines the parameters of the module."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.distribution.v1beta1.QueryValidatorCommissionResponse": {
      "type": "object",
      "properties": {
        "commission": {
          "$ref": "#/definitions/cosmos.distribution.v1beta1.ValidatorAccumulatedCommission",
          "description": "commission defines the commision the validator received."
        }
      },
      "title": "QueryValidatorCommissionResponse is the response type for the\nQuery/ValidatorCommission RPC method"
    },
    "cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse": {
      "type": "object",
      "properties": {
        "rewards": {
          "$ref": "#/definitions/cosmos.distribution.v1beta1.ValidatorOutstandingRewards"
        }
      },
      "description": "QueryValidatorOutstandingRewardsResponse is the response type for the\nQuery/ValidatorOutstandingRewards RPC method."
    },
    "cosmos.distribution.v1beta1.QueryValidatorSlashesResponse": {
      "type": "object",
      "properties": {
        "slashes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.distribution.v1beta1.ValidatorSlashEvent"
          },
          "description": "slashes defines the slashes the validator received."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryValidatorSlashesResponse is the response type for the\nQuery/ValidatorSlashes RPC method."
    },
    "cosmos.distribution.v1beta1.ValidatorAccumulatedCommission": {
      "type": "object",
      "properties": {
        "commission": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        }
      },
      "description": "ValidatorAccumulatedCommission represents accumulated commission\nfor a validator kept as a running counter, can be withdrawn at any time."
    },
    "cosmos.distribution.v1beta1.ValidatorOutstandingRewards": {
      "type": "object",
      "properties": {
        "rewards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.DecCoin"
          }
        }
      },
      "description": "ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards\nfor a validator inexpensive to track, allows simple sanity checks."
    },
    "cosmos.distribution.v1beta1.ValidatorSlashEvent": {
      "type": "object",
      "properties": {
        "validator_period": {
          "type": "string",
          "format": "uint64"
        },
        "fraction": {
          "type": "string"
        }
      },
      "description": "ValidatorSlashEvent represents a validator slash event.\nHeight is implicit within the store key.\nThis is needed to calculate appropriate amount of staking tokens\nfor delegations which are withdrawn after a slash has occurred."
    },
    "cosmos.base.abci.v1beta1.ABCIMessageLog": {
      "type": "object",
      "properties": {
        "msg_index": {
          "type": "integer",
          "format": "int64"
        },
        "log": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.StringEvent"
          },
          "description": "Events contains a slice of Event objects that were emitted during some\nexecution."
        }
      },
      "description": "ABCIMessageLog defines a structure containing an indexed tx ABCI message log."
    },
    "cosmos.base.abci.v1beta1.Attribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "Attribute defines an attribute wrapper where the key and value are\nstrings instead of raw bytes."
    },
    "cosmos.base.abci.v1beta1.GasInfo": {
      "type": "object",
      "properties": {
        "gas_wanted": {
          "type": "string",
          "format": "uint64",
          "description": "GasWanted is the maximum units of work we allow this tx to perform."
        },
        "gas_used": {
          "type": "string",
          "format": "uint64",
          "description": "GasUsed is the amount of gas actually consumed."
        }
      },
      "description": "GasInfo defines tx execution gas context."
    },
    "cosmos.base.abci.v1beta1.Result": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Data is any data returned from message or handler execution. It MUST be\nlength prefixed in order to separate data from multiple message executions.\nDeprecated. This field is still populated, but prefer msg_response instead\nbecause it also contains the Msg response typeURL."
        },
        "log": {
          "type": "string",
          "description": "Log contains the log information from message or handler execution."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.abci.Event"
          },
          "description": "Events contains a slice of Event objects that were emitted during message\nor handler execution."
        },
        "msg_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "msg_responses contains the Msg handler responses type packed in Anys.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "Result is the union of ResponseFormat and ResponseCheckTx."
    },
    "cosmos.base.abci.v1beta1.StringEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.Attribute"
          }
        }
      },
      "description": "StringEvent defines en Event object wrapper where all the attributes\ncontain key/value pairs that are strings instead of raw bytes."
    },
    "cosmos.base.abci.v1beta1.TxResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64",
          "title": "The block height"
        },
        "txhash": {
          "type": "string",
          "description": "The transaction hash."
        },
        "codespace": {
          "type": "string",
          "title": "Namespace for the Code"
        },
        "code": {
          "type": "integer",
          "format": "int64",
          "description": "Response code."
        },
        "data": {
          "type": "string",
          "description": "Result bytes, if any."
        },
        "raw_log": {
          "type": "string",
          "description": "The output of the application's logger (raw string). May be\nnon-deterministic."
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.ABCIMessageLog"
          },
          "description": "The output of the application's logger (typed). May be non-deterministic."
        },
        "info": {
          "type": "string",
          "description": "Additional information. May be non-deterministic."
        },
        "gas_wanted": {
          "type": "string",
          "format": "int64",
          "description": "Amount of gas requested for transaction."
        },
        "gas_used": {
          "type": "string",
          "format": "int64",
          "description": "Amount of gas consumed by transaction."
        },
        "tx": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "The request transaction bytes."
        },
        "timestamp": {
          "type": "string",
          "description": "Time of the previous block. For heights > 1, it's the weighted median of\nthe timestamps of the valid votes in the block.LastCommit. For height == 1,\nit's genesis time."
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.abci.Event"
          },
          "description": "Events defines all the events emitted by processing a transaction. Note,\nthese events include those emitted by processing all the messages and those\nemitted from the ante. Whereas Logs contains the events, with\nadditional metadata, emitted only by processing the messages.\n\nSince: cosmos-sdk 0.42.11, 0.44.5, 0.45"
        }
      },
      "description": "TxResponse defines a structure containing relevant tx data and metadata. The\ntags are stringified and the log is JSON decoded."
    },
    "cosmos.crypto.multisig.v1beta1.CompactBitArray": {
      "type": "object",
      "properties": {
        "extra_bits_stored": {
          "type": "integer",
          "format": "int64"
        },
        "elems": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "CompactBitArray is an implementation of a space efficient bit array.\nThis is used to ensure that the encoded data takes up a minimal amount of\nspace after proto encoding.\nThis is not thread safe, and is not intended for concurrent usage."
    },
    "cosmos.tx.signing.v1beta1.SignMode": {
      "type": "string",
      "enum": [
        "SIGN_MODE_UNSPECIFIED",
        "SIGN_MODE_DIRECT",
        "SIGN_MODE_TEXTUAL",
        "SIGN_MODE_DIRECT_AUX",
        "SIGN_MODE_LEGACY_AMINO_JSON",
        "SIGN_MODE_EIP_191"
      ],
      "default": "SIGN_MODE_UNSPECIFIED",
      "description": "SignMode represents a signing mode with its own security guarantees.\n\nThis enum should be considered a registry of all known sign modes\nin the Cosmos ecosystem. Apps are not expected to support all known\nsign modes. Apps that would like to support custom  sign modes are\nencouraged to open a small PR against this file to add a new case\nto this SignMode enum describing their sign mode so that different\napps have a consistent version of this enum.\n\n - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be\nrejected.\n - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is\nverified with raw bytes from Tx.\n - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some\nhuman-readable textual representation on top of the binary representation\nfrom SIGN_MODE_DIRECT. It is currently not supported.\n - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses\nSignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not\nrequire signers signing over other signers' `signer_info`. It also allows\nfor adding Tips in transactions.\n\nSince: cosmos-sdk 0.46\n - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses\nAmino JSON and will be removed in the future.\n - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos\nSDK. Ref: https://eips.ethereum.org/EIPS/eip-191\n\nCurrently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,\nbut is not implemented on the SDK by default. To enable EIP-191, you need\nto pass a custom `TxConfig` that has an implementation of\n`SignModeHandler` for EIP-191. The SDK may decide to fully support\nEIP-191 in the future.\n\nSince: cosmos-sdk 0.45.2"
    },
    "cosmos.tx.v1beta1.AuthInfo": {
      "type": "object",
      "properties": {
        "signer_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.tx.v1beta1.SignerInfo"
          },
          "description": "signer_infos defines the signing modes for the required signers. The number\nand order of elements must match the required signers from TxBody's\nmessages. The first element is the primary signer and the one which pays\nthe fee."
        },
        "fee": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Fee",
          "description": "Fee is the fee and gas limit for the transaction. The first signer is the\nprimary signer and the one which pays the fee. The fee can be calculated\nbased on the cost of evaluating the body and doing signature verification\nof the signers. This can be estimated via simulation."
        },
        "tip": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tip",
          "description": "Tip is the optional tip used for transactions fees paid in another denom.\n\nThis field is ignored if the chain didn't enable tips, i.e. didn't add the\n`TipDecorator` in its posthandler.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "AuthInfo describes the fee and signer modes that are used to sign a\ntransaction."
    },
    "cosmos.tx.v1beta1.BroadcastMode": {
      "type": "string",
      "enum": [
        "BROADCAST_MODE_UNSPECIFIED",
        "BROADCAST_MODE_BLOCK",
        "BROADCAST_MODE_SYNC",
        "BROADCAST_MODE_ASYNC"
      ],
      "default": "BROADCAST_MODE_UNSPECIFIED",
      "description": "BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC method.\n\n - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering\n - BROADCAST_MODE_BLOCK: BROADCAST_MODE_BLOCK defines a tx broadcasting mode where the client waits for\nthe tx to be committed in a block.\n - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits for\na CheckTx execution response only.\n - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client returns\nimmediately."
    },
    "cosmos.tx.v1beta1.BroadcastTxRequest": {
      "type": "object",
      "properties": {
        "tx_bytes": {
          "type": "string",
          "format": "byte",
          "description": "tx_bytes is the raw transaction."
        },
        "mode": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.BroadcastMode"
        }
      },
      "description": "BroadcastTxRequest is the request type for the Service.BroadcastTxRequest\nRPC method."
    },
    "cosmos.tx.v1beta1.BroadcastTxResponse": {
      "type": "object",
      "properties": {
        "tx_response": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse",
          "description": "tx_response is the queried TxResponses."
        }
      },
      "description": "BroadcastTxResponse is the response type for the\nService.BroadcastTx method."
    },
    "cosmos.tx.v1beta1.Fee": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "amount is the amount of coins to be paid as a fee"
        },
        "gas_limit": {
          "type": "string",
          "format": "uint64",
          "title": "gas_limit is the maximum gas that can be used in transaction processing\nbefore an out of gas error occurs"
        },
        "payer": {
          "type": "string",
          "description": "if unset, the first signer is responsible for paying the fees. If set, the specified account must pay the fees.\nthe payer must be a tx signer (and thus have signed this field in AuthInfo).\nsetting this field does *not* change the ordering of required signers for the transaction."
        },
        "granter": {
          "type": "string",
          "title": "if set, the fee payer (either the first signer or the value of the payer field) requests that a fee grant be used\nto pay fees instead of the fee payer's own balance. If an appropriate fee grant does not exist or the chain does\nnot support fee grants, this will fail"
        }
      },
      "description": "Fee includes the amount of coins paid in fees and the maximum\ngas to be used by the transaction. The ratio yields an effective \"gasprice\",\nwhich must be above some miminum to be accepted into the mempool."
    },
    "cosmos.tx.v1beta1.GetBlockWithTxsResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.tx.v1beta1.Tx"
          },
          "description": "txs are the transactions in the block."
        },
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "block": {
          "$ref": "#/definitions/tendermint.types.Block"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines a pagination for the response."
        }
      },
      "description": "GetBlockWithTxsResponse is the response type for the Service.GetBlockWithTxs method.\n\nSince: cosmos-sdk 0.45.2"
    },
    "cosmos.tx.v1beta1.GetTxResponse": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tx",
          "description": "tx is the queried transaction."
        },
        "tx_response": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse",
          "description": "tx_response is the queried TxResponses."
        }
      },
      "description": "GetTxResponse is the response type for the Service.GetTx method."
    },
    "cosmos.tx.v1beta1.GetTxsEventResponse": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.tx.v1beta1.Tx"
          },
          "description": "txs is the list of queried transactions."
        },
        "tx_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.abci.v1beta1.TxResponse"
          },
          "description": "tx_responses is the list of queried TxResponses."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines a pagination for the response.\nDeprecated post v0.46.x: use total instead."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available"
        }
      },
      "description": "GetTxsEventResponse is the response type for the Service.TxsByEvents\nRPC method."
    },
    "cosmos.tx.v1beta1.ModeInfo": {
      "type": "object",
      "properties": {
        "single": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo.Single",
          "title": "single represents a single signer"
        },
        "multi": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo.Multi",
          "title": "multi represents a nested multisig signer"
        }
      },
      "description": "ModeInfo describes the signing mode of a single or nested multisig signer."
    },
    "cosmos.tx.v1beta1.ModeInfo.Multi": {
      "type": "object",
      "properties": {
        "bitarray": {
          "$ref": "#/definitions/cosmos.crypto.multisig.v1beta1.CompactBitArray",
          "title": "bitarray specifies which keys within the multisig are signing"
        },
        "mode_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo"
          },
          "title": "mode_infos is the corresponding modes of the signers of the multisig\nwhich could include nested multisig public keys"
        }
      },
      "title": "Multi is the mode info for a multisig public key"
    },
    "cosmos.tx.v1beta1.ModeInfo.Single": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/cosmos.tx.signing.v1beta1.SignMode",
          "title": "mode is the signing mode of the single signer"
        }
      },
      "title": "Single is the mode info for a single signer. It is structured as a message\nto allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the\nfuture"
    },
    "cosmos.tx.v1beta1.OrderBy": {
      "type": "string",
      "enum": [
        "ORDER_BY_UNSPECIFIED",
        "ORDER_BY_ASC",
        "ORDER_BY_DESC"
      ],
      "default": "ORDER_BY_UNSPECIFIED",
      "description": "- ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults to ASC in this case.\n - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order\n - ORDER_BY_DESC: ORDER_BY_DESC defines descending order",
      "title": "OrderBy defines the sorting order"
    },
    "cosmos.tx.v1beta1.SignerInfo": {
      "type": "object",
      "properties": {
        "public_key": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "public_key is the public key of the signer. It is optional for accounts\nthat already exist in state. If unset, the verifier can use the required \\\nsigner address for this position and lookup the public key."
        },
        "mode_info": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.ModeInfo",
          "title": "mode_info describes the signing mode of the signer and is a nested\nstructure to support nested multisig pubkey's"
        },
        "sequence": {
          "type": "string",
          "format": "uint64",
          "description": "sequence is the sequence of the account, which describes the\nnumber of committed transactions signed by a given address. It is used to\nprevent replay attacks."
        }
      },
      "description": "SignerInfo describes the public key and signing mode of a single top-level\nsigner."
    },
    "cosmos.tx.v1beta1.SimulateRequest": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.Tx",
          "description": "tx is the transaction to simulate.\nDeprecated. Send raw tx bytes instead."
        },
        "tx_bytes": {
          "type": "string",
          "format": "byte",
          "description": "tx_bytes is the raw transaction.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "SimulateRequest is the request type for the Service.Simulate\nRPC method."
    },
    "cosmos.tx.v1beta1.SimulateResponse": {
      "type": "object",
      "properties": {
        "gas_info": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.GasInfo",
          "description": "gas_info is the information about gas used in the simulation."
        },
        "result": {
          "$ref": "#/definitions/cosmos.base.abci.v1beta1.Result",
          "description": "result is the result of the simulation."
        }
      },
      "description": "SimulateResponse is the response type for the\nService.SimulateRPC method."
    },
    "cosmos.tx.v1beta1.Tip": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "title": "amount is the amount of the tip"
        },
        "tipper": {
          "type": "string",
          "title": "tipper is the address of the account paying for the tip"
        }
      },
      "description": "Tip is the tip used for meta-transactions.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.tx.v1beta1.Tx": {
      "type": "object",
      "properties": {
        "body": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.TxBody",
          "title": "body is the processable content of the transaction"
        },
        "auth_info": {
          "$ref": "#/definitions/cosmos.tx.v1beta1.AuthInfo",
          "title": "auth_info is the authorization related content of the transaction,\nspecifically signers, signer modes and fee"
        },
        "signatures": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "signatures is a list of signatures that matches the length and order of\nAuthInfo's signer_infos to allow connecting signature meta information like\npublic key and signing mode by position."
        }
      },
      "description": "Tx is the standard type used for broadcasting transactions."
    },
    "cosmos.tx.v1beta1.TxBody": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "description": "messages is a list of messages to be executed. The required signers of\nthose messages define the number and order of elements in AuthInfo's\nsigner_infos and Tx's signatures. Each required signer address is added to\nthe list only the first time it occurs.\nBy convention, the first required signer (usually from the first message)\nis referred to as the primary signer and pays the fee for the whole\ntransaction."
        },
        "memo": {
          "type": "string",
          "description": "memo is any arbitrary note/comment to be added to the transaction.\nWARNING: in clients, any publicly exposed text should not be called memo,\nbut should be called `note` instead (see https://github.com/cosmos/cosmos-sdk/issues/9122)."
        },
        "timeout_height": {
          "type": "string",
          "format": "uint64",
          "title": "timeout is the block height after which this transaction will not\nbe processed by the chain"
        },
        "extension_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "title": "extension_options are arbitrary options that can be added by chains\nwhen the default options are not sufficient. If any of these are present\nand can't be handled, the transaction will be rejected"
        },
        "non_critical_extension_options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          },
          "title": "extension_options are arbitrary options that can be added by chains\nwhen the default options are not sufficient. If any of these are present\nand can't be handled, they will be ignored"
        }
      },
      "description": "TxBody is the body of a transaction that all signers sign over."
    },
    "tendermint.abci.Event": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.abci.EventAttribute"
          }
        }
      },
      "description": "Event allows application developers to attach additional information to\nResponseBeginBlock, ResponseEndBlock, ResponseCheckTx and ResponseDeliverTx.\nLater, transactions may be queried using these events."
    },
    "tendermint.abci.EventAttribute": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "boolean"
        }
      },
      "description": "EventAttribute is a single key-value pair, associated with an event."
    },
    "tendermint.crypto.PublicKey": {
      "type": "object",
      "properties": {
        "ed25519": {
          "type": "string",
          "format": "byte"
        },
        "secp256k1": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "PublicKey defines the keys available for use with Validators"
    },
    "tendermint.types.Block": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/tendermint.types.Header"
        },
        "data": {
          "$ref": "#/definitions/tendermint.types.Data"
        },
        "evidence": {
          "$ref": "#/definitions/tendermint.types.EvidenceList"
        },
        "last_commit": {
          "$ref": "#/definitions/tendermint.types.Commit"
        }
      }
    },
    "tendermint.types.BlockID": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte"
        },
        "part_set_header": {
          "$ref": "#/definitions/tendermint.types.PartSetHeader"
        }
      },
      "title": "BlockID"
    },
    "tendermint.types.BlockIDFlag": {
      "type": "string",
      "enum": [
        "BLOCK_ID_FLAG_UNKNOWN",
        "BLOCK_ID_FLAG_ABSENT",
        "BLOCK_ID_FLAG_COMMIT",
        "BLOCK_ID_FLAG_NIL"
      ],
      "default": "BLOCK_ID_FLAG_UNKNOWN",
      "title": "BlockIdFlag indicates which BlcokID the signature is for"
    },
    "tendermint.types.Commit": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "int64"
        },
        "round": {
          "type": "integer",
          "format": "int32"
        },
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "signatures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.types.CommitSig"
          }
        }
      },
      "description": "Commit contains the evidence that a block was committed by a set of validators."
    },
    "tendermint.types.CommitSig": {
      "type": "object",
      "properties": {
        "block_id_flag": {
          "$ref": "#/definitions/tendermint.types.BlockIDFlag"
        },
        "validator_address": {
          "type": "string",
          "format": "byte"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "CommitSig is a part of the Vote included in a Commit."
    },
    "tendermint.types.Data": {
      "type": "object",
      "properties": {
        "txs": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "Txs that will be applied by state @ block.Height+1.\nNOTE: not all txs here are valid.  We're just agreeing on the order first.\nThis means that block.AppHash does not include these txs."
        }
      },
      "title": "Data contains the set of transactions included in the block"
    },
    "tendermint.types.DuplicateVoteEvidence": {
      "type": "object",
      "properties": {
        "vote_a": {
          "$ref": "#/definitions/tendermint.types.Vote"
        },
        "vote_b": {
          "$ref": "#/definitions/tendermint.types.Vote"
        },
        "total_voting_power": {
          "type": "string",
          "format": "int64"
        },
        "validator_power": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "DuplicateVoteEvidence contains evidence of a validator signed two conflicting votes."
    },
    "tendermint.types.Evidence": {
      "type": "object",
      "properties": {
        "duplicate_vote_evidence": {
          "$ref": "#/definitions/tendermint.types.DuplicateVoteEvidence"
        },
        "light_client_attack_evidence": {
          "$ref": "#/definitions/tendermint.types.LightClientAttackEvidence"
        }
      }
    },
    "tendermint.types.EvidenceList": {
      "type": "object",
      "properties": {
        "evidence": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.types.Evidence"
          }
        }
      }
    },
    "tendermint.types.Header": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/tendermint.version.Consensus",
          "title": "basic block info"
        },
        "chain_id": {
          "type": "string"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "last_block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID",
          "title": "prev block info"
        },
        "last_commit_hash": {
          "type": "string",
          "format": "byte",
          "title": "hashes of block data"
        },
        "data_hash": {
          "type": "string",
          "format": "byte"
        },
        "validators_hash": {
          "type": "string",
          "format": "byte",
          "title": "hashes from the app output from the prev block"
        },
        "next_validators_hash": {
          "type": "string",
          "format": "byte"
        },
        "consensus_hash": {
          "type": "string",
          "format": "byte"
        },
        "app_hash": {
          "type": "string",
          "format": "byte"
        },
        "last_results_hash": {
          "type": "string",
          "format": "byte"
        },
        "evidence_hash": {
          "type": "string",
          "format": "byte",
          "title": "consensus info"
        },
        "proposer_address": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Header defines the structure of a block header."
    },
    "tendermint.types.LightBlock": {
      "type": "object",
      "properties": {
        "signed_header": {
          "$ref": "#/definitions/tendermint.types.SignedHeader"
        },
        "validator_set": {
          "$ref": "#/definitions/tendermint.types.ValidatorSet"
        }
      }
    },
    "tendermint.types.LightClientAttackEvidence": {
      "type": "object",
      "properties": {
        "conflicting_block": {
          "$ref": "#/definitions/tendermint.types.LightBlock"
        },
        "common_height": {
          "type": "string",
          "format": "int64"
        },
        "byzantine_validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.types.Validator"
          }
        },
        "total_voting_power": {
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "LightClientAttackEvidence contains evidence of a set of validators attempting to mislead a light client."
    },
    "tendermint.types.PartSetHeader": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "hash": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "PartsetHeader"
    },
    "tendermint.types.SignedHeader": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/tendermint.types.Header"
        },
        "commit": {
          "$ref": "#/definitions/tendermint.types.Commit"
        }
      }
    },
    "tendermint.types.SignedMsgType": {
      "type": "string",
      "enum": [
        "SIGNED_MSG_TYPE_UNKNOWN",
        "SIGNED_MSG_TYPE_PREVOTE",
        "SIGNED_MSG_TYPE_PRECOMMIT",
        "SIGNED_MSG_TYPE_PROPOSAL"
      ],
      "default": "SIGNED_MSG_TYPE_UNKNOWN",
      "description": "SignedMsgType is a type of signed message in the consensus.\n\n - SIGNED_MSG_TYPE_PREVOTE: Votes\n - SIGNED_MSG_TYPE_PROPOSAL: Proposals"
    },
    "tendermint.types.Validator": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "pub_key": {
          "$ref": "#/definitions/tendermint.crypto.PublicKey"
        },
        "voting_power": {
          "type": "string",
          "format": "int64"
        },
        "proposer_priority": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "tendermint.types.ValidatorSet": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/tendermint.types.Validator"
          }
        },
        "proposer": {
          "$ref": "#/definitions/tendermint.types.Validator"
        },
        "total_voting_power": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "tendermint.types.Vote": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/tendermint.types.SignedMsgType"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "round": {
          "type": "integer",
          "format": "int32"
        },
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "validator_address": {
          "type": "string",
          "format": "byte"
        },
        "validator_index": {
          "type": "integer",
          "format": "int32"
        },
        "signature": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Vote represents a prevote, precommit, or commit vote from validators for\nconsensus."
    },
    "tendermint.version.Consensus": {
      "type": "object",
      "properties": {
        "block": {
          "type": "string",
          "format": "uint64"
        },
        "app": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Consensus captures the consensus rules for processing a block in the blockchain,\nincluding all blockchain data structures and the rules of the application's\nstate transition machine."
    },
    "cosmos.staking.v1beta1.BondStatus": {
      "type": "string",
      "enum": [
        "BOND_STATUS_UNSPECIFIED",
        "BOND_STATUS_UNBONDED",
        "BOND_STATUS_UNBONDING",
        "BOND_STATUS_BONDED"
      ],
      "default": "BOND_STATUS_UNSPECIFIED",
      "description": "BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded."
    },
    "cosmos.staking.v1beta1.Commission": {
      "type": "object",
      "properties": {
        "commission_rates": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.CommissionRates",
          "description": "commission_rates defines the initial commission rates to be used for creating a validator."
        },
        "update_time": {
          "type": "string",
          "format": "date-time",
          "description": "update_time is the last time the commission rate was changed."
        }
      },
      "description": "Commission defines commission parameters for a given validator."
    },
    "cosmos.staking.v1beta1.CommissionRates": {
      "type": "object",
      "properties": {
        "rate": {
          "type": "string",
          "description": "rate is the commission rate charged to delegators, as a fraction."
        },
        "max_rate": {
          "type": "string",
          "description": "max_rate defines the maximum commission rate which validator can ever charge, as a fraction."
        },
        "max_change_rate": {
          "type": "string",
          "description": "max_change_rate defines the maximum daily increase of the validator commission, as a fraction."
        }
      },
      "description": "CommissionRates defines the initial commission rates to be used for creating\na validator."
    },
    "cosmos.staking.v1beta1.Delegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string",
          "description": "delegator_address is the bech32-encoded address of the delegator."
        },
        "validator_address": {
          "type": "string",
          "description": "validator_address is the bech32-encoded address of the validator."
        },
        "shares": {
          "type": "string",
          "description": "shares define the delegation shares received."
        }
      },
      "description": "Delegation represents the bond with tokens held by an account. It is\nowned by one delegator, and is associated with the voting power of one\nvalidator."
    },
    "cosmos.staking.v1beta1.DelegationResponse": {
      "type": "object",
      "properties": {
        "delegation": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Delegation"
        },
        "balance": {
          "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
        }
      },
      "description": "DelegationResponse is equivalent to Delegation except that it contains a\nbalance in addition to shares which is more suitable for client responses."
    },
    "cosmos.staking.v1beta1.Description": {
      "type": "object",
      "properties": {
        "moniker": {
          "type": "string",
          "description": "moniker defines a human-readable name for the validator."
        },
        "identity": {
          "type": "string",
          "description": "identity defines an optional identity signature (ex. UPort or Keybase)."
        },
        "website": {
          "type": "string",
          "description": "website defines an optional website link."
        },
        "security_contact": {
          "type": "string",
          "description": "security_contact defines an optional email for security contact."
        },
        "details": {
          "type": "string",
          "description": "details define other optional details."
        }
      },
      "description": "Description defines a validator description."
    },
    "cosmos.staking.v1beta1.HistoricalInfo": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/tendermint.types.Header"
        },
        "valset": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.Validator"
          }
        }
      },
      "description": "HistoricalInfo contains header and validator information for a given block.\nIt is stored as part of staking module's state, which persists the `n` most\nrecent HistoricalInfo\n(`n` is set by the staking module's `historical_entries` parameter)."
    },
    "cosmos.staking.v1beta1.Params": {
      "type": "object",
      "properties": {
        "unbonding_time": {
          "type": "string",
          "description": "unbonding_time is the time duration of unbonding."
        },
        "max_validators": {
          "type": "integer",
          "format": "int64",
          "description": "max_validators is the maximum number of validators."
        },
        "max_entries": {
          "type": "integer",
          "format": "int64",
          "description": "max_entries is the max entries for either unbonding delegation or redelegation (per pair/trio)."
        },
        "historical_entries": {
          "type": "integer",
          "format": "int64",
          "description": "historical_entries is the number of historical entries to persist."
        },
        "bond_denom": {
          "type": "string",
          "description": "bond_denom defines the bondable coin denomination."
        },
        "min_commission_rate": {
          "type": "string",
          "title": "min_commission_rate is the chain-wide minimum commission rate that a validator can charge their delegators"
        }
      },
      "description": "Params defines the parameters for the staking module."
    },
    "cosmos.staking.v1beta1.Pool": {
      "type": "object",
      "properties": {
        "not_bonded_tokens": {
          "type": "string"
        },
        "bonded_tokens": {
          "type": "string"
        }
      },
      "description": "Pool is used for tracking bonded and not-bonded token supply of the bond\ndenomination."
    },
    "cosmos.staking.v1beta1.QueryDelegationResponse": {
      "type": "object",
      "properties": {
        "delegation_response": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.DelegationResponse",
          "description": "delegation_responses defines the delegation info of a delegation."
        }
      },
      "description": "QueryDelegationResponse is response type for the Query/Delegation RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse": {
      "type": "object",
      "properties": {
        "delegation_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.DelegationResponse"
          },
          "description": "delegation_responses defines all the delegations' info of a delegator."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDelegatorDelegationsResponse is response type for the\nQuery/DelegatorDelegations RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse": {
      "type": "object",
      "properties": {
        "unbonding_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegation"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryUnbondingDelegatorDelegationsResponse is response type for the\nQuery/UnbondingDelegatorDelegations RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Validator",
          "description": "validator defines the validator info."
        }
      },
      "description": "QueryDelegatorValidatorResponse response type for the\nQuery/DelegatorValidator RPC method."
    },
    "cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.Validator"
          },
          "description": "validators defines the validators' info of a delegator."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDelegatorValidatorsResponse is response type for the\nQuery/DelegatorValidators RPC method."
    },
    "cosmos.staking.v1beta1.QueryHistoricalInfoResponse": {
      "type": "object",
      "properties": {
        "hist": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.HistoricalInfo",
          "description": "hist defines the historical info at the given height."
        }
      },
      "description": "QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC\nmethod."
    },
    "cosmos.staking.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Params",
          "description": "params holds all the parameters of this module."
        }
      },
      "description": "QueryParamsResponse is response type for the Query/Params RPC method."
    },
    "cosmos.staking.v1beta1.QueryPoolResponse": {
      "type": "object",
      "properties": {
        "pool": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Pool",
          "description": "pool defines the pool info."
        }
      },
      "description": "QueryPoolResponse is response type for the Query/Pool RPC method."
    },
    "cosmos.staking.v1beta1.QueryRedelegationsResponse": {
      "type": "object",
      "properties": {
        "redelegation_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryRedelegationsResponse is response type for the Query/Redelegations RPC\nmethod."
    },
    "cosmos.staking.v1beta1.QueryUnbondingDelegationResponse": {
      "type": "object",
      "properties": {
        "unbond": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegation",
          "description": "unbond defines the unbonding information of a delegation."
        }
      },
      "description": "QueryDelegationResponse is response type for the Query/UnbondingDelegation\nRPC method."
    },
    "cosmos.staking.v1beta1.QueryValidatorDelegationsResponse": {
      "type": "object",
      "properties": {
        "delegation_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.DelegationResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryValidatorDelegationsResponse is response type for the\nQuery/ValidatorDelegations RPC method"
    },
    "cosmos.staking.v1beta1.QueryValidatorResponse": {
      "type": "object",
      "properties": {
        "validator": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Validator",
          "description": "validator defines the validator info."
        }
      },
      "title": "QueryValidatorResponse is response type for the Query/Validator RPC method"
    },
    "cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse": {
      "type": "object",
      "properties": {
        "unbonding_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegation"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryValidatorUnbondingDelegationsResponse is response type for the\nQuery/ValidatorUnbondingDelegations RPC method."
    },
    "cosmos.staking.v1beta1.QueryValidatorsResponse": {
      "type": "object",
      "properties": {
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.Validator"
          },
          "description": "validators contains all the queried validators."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryValidatorsResponse is response type for the Query/Validators RPC method"
    },
    "cosmos.staking.v1beta1.Redelegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string",
          "description": "delegator_address is the bech32-encoded address of the delegator."
        },
        "validator_src_address": {
          "type": "string",
          "description": "validator_src_address is the validator redelegation source operator address."
        },
        "validator_dst_address": {
          "type": "string",
          "description": "validator_dst_address is the validator redelegation destination operator address."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationEntry"
          },
          "description": "entries are the redelegation entries."
        }
      },
      "description": "Redelegation contains the list of a particular delegator's redelegating bonds\nfrom a particular source validator to a particular destination validator."
    },
    "cosmos.staking.v1beta1.RedelegationEntry": {
      "type": "object",
      "properties": {
        "creation_height": {
          "type": "string",
          "format": "int64",
          "description": "creation_height  defines the height which the redelegation took place."
        },
        "completion_time": {
          "type": "string",
          "format": "date-time",
          "description": "completion_time defines the unix time for redelegation completion."
        },
        "initial_balance": {
          "type": "string",
          "description": "initial_balance defines the initial balance when redelegation started."
        },
        "shares_dst": {
          "type": "string",
          "description": "shares_dst is the amount of destination-validator shares created by redelegation."
        }
      },
      "description": "RedelegationEntry defines a redelegation object with relevant metadata."
    },
    "cosmos.staking.v1beta1.RedelegationEntryResponse": {
      "type": "object",
      "properties": {
        "redelegation_entry": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationEntry"
        },
        "balance": {
          "type": "string"
        }
      },
      "description": "RedelegationEntryResponse is equivalent to a RedelegationEntry except that it\ncontains a balance in addition to shares which is more suitable for client\nresponses."
    },
    "cosmos.staking.v1beta1.RedelegationResponse": {
      "type": "object",
      "properties": {
        "redelegation": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Redelegation"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.RedelegationEntryResponse"
          }
        }
      },
      "description": "RedelegationResponse is equivalent to a Redelegation except that its entries\ncontain a balance in addition to shares which is more suitable for client\nresponses."
    },
    "cosmos.staking.v1beta1.UnbondingDelegation": {
      "type": "object",
      "properties": {
        "delegator_address": {
          "type": "string",
          "description": "delegator_address is the bech32-encoded address of the delegator."
        },
        "validator_address": {
          "type": "string",
          "description": "validator_address is the bech32-encoded address of the validator."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.staking.v1beta1.UnbondingDelegationEntry"
          },
          "description": "entries are the unbonding delegation entries."
        }
      },
      "description": "UnbondingDelegation stores all of a single delegator's unbonding bonds\nfor a single validator in an time-ordered list."
    },
    "cosmos.staking.v1beta1.UnbondingDelegationEntry": {
      "type": "object",
      "properties": {
        "creation_height": {
          "type": "string",
          "format": "int64",
          "description": "creation_height is the height which the unbonding took place."
        },
        "completion_time": {
          "type": "string",
          "format": "date-time",
          "description": "completion_time is the unix time for unbonding completion."
        },
        "initial_balance": {
          "type": "string",
          "description": "initial_balance defines the tokens initially scheduled to receive at completion."
        },
        "balance": {
          "type": "string",
          "description": "balance defines the tokens to receive at completion."
        }
      },
      "description": "UnbondingDelegationEntry defines an unbonding object with relevant metadata."
    },
    "cosmos.staking.v1beta1.Validator": {
      "type": "object",
      "properties": {
        "operator_address": {
          "type": "string",
          "description": "operator_address defines the address of the validator's operator; bech encoded in JSON."
        },
        "consensus_pubkey": {
          "$ref": "#/definitions/google.protobuf.Any",
          "description": "consensus_pubkey is the consensus public key of the validator, as a Protobuf Any."
        },
        "jailed": {
          "type": "boolean",
          "description": "jailed defined whether the validator has been jailed from bonded status or not."
        },
        "status": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.BondStatus",
          "description": "status is the validator status (bonded/unbonding/unbonded)."
        },
        "tokens": {
          "type": "string",
          "description": "tokens define the delegated tokens (incl. self-delegation)."
        },
        "delegator_shares": {
          "type": "string",
          "description": "delegator_shares defines total shares issued to a validator's delegators."
        },
        "description": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Description",
          "description": "description defines the description terms for the validator."
        },
        "unbonding_height": {
          "type": "string",
          "format": "int64",
          "description": "unbonding_height defines, if unbonding, the height at which this validator has begun unbonding."
        },
        "unbonding_time": {
          "type": "string",
          "format": "date-time",
          "description": "unbonding_time defines, if unbonding, the min time for the validator to complete unbonding."
        },
        "commission": {
          "$ref": "#/definitions/cosmos.staking.v1beta1.Commission",
          "description": "commission defines the commission parameters."
        },
        "min_self_delegation": {
          "type": "string",
          "description": "min_self_delegation is the validator's self declared minimum self delegation.\n\nSince: cosmos-sdk 0.46"
        }
      },
      "description": "Validator defines a validator, together with the total amount of the\nValidator's bond shares and their exchange rate to coins. Slashing results in\na decrease in the exchange rate, allowing correct calculation of future\nundelegations without iterating over delegators. When coins are delegated to\nthis validator, the validator is credited with a delegation whose number of\nbond shares is based on the amount of coins delegated divided by the current\nexchange rate. Voting power can be calculated as total bonded shares\nmultiplied by exchange rate."
    },
    "cosmos.params.v1beta1.ParamChange": {
      "type": "object",
      "properties": {
        "subspace": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "ParamChange defines an individual parameter change, for use in\nParameterChangeProposal."
    },
    "cosmos.params.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "param": {
          "$ref": "#/definitions/cosmos.params.v1beta1.ParamChange",
          "description": "param defines the queried parameter."
        }
      },
      "description": "QueryParamsResponse is response type for the Query/Params RPC method."
    },
    "cosmos.params.v1beta1.QuerySubspacesResponse": {
      "type": "object",
      "properties": {
        "subspaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.params.v1beta1.Subspace"
          }
        }
      },
      "description": "QuerySubspacesResponse defines the response types for querying for all\nregistered subspaces and all keys for a subspace.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.params.v1beta1.Subspace": {
      "type": "object",
      "properties": {
        "subspace": {
          "type": "string"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Subspace defines a parameter subspace name and all the keys that exist for\nthe subspace.\n\nSince: cosmos-sdk 0.46"
    },
    "cosmos.authz.v1beta1.Grant": {
      "type": "object",
      "properties": {
        "authorization": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "title": "time when the grant will expire and will be pruned. If null, then the grant\ndoesn't have a time expiration (other conditions  in `authorization`\nmay apply to invalidate the grant)"
        }
      },
      "description": "Grant gives permissions to execute\nthe provide method with expiration time."
    },
    "cosmos.authz.v1beta1.GrantAuthorization": {
      "type": "object",
      "properties": {
        "granter": {
          "type": "string"
        },
        "grantee": {
          "type": "string"
        },
        "authorization": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "expiration": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "GrantAuthorization extends a grant with both the addresses of the grantee and granter.\nIt is used in genesis.proto and query.proto"
    },
    "cosmos.authz.v1beta1.QueryGranteeGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.authz.v1beta1.GrantAuthorization"
          },
          "description": "grants is a list of grants granted to the grantee."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method."
    },
    "cosmos.authz.v1beta1.QueryGranterGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.authz.v1beta1.GrantAuthorization"
          },
          "description": "grants is a list of grants granted by the granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method."
    },
    "cosmos.authz.v1beta1.QueryGrantsResponse": {
      "type": "object",
      "properties": {
        "grants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.authz.v1beta1.Grant"
          },
          "description": "authorizations is a list of grants granted for grantee by granter."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "QueryGrantsResponse is the response type for the Query/Authorizations RPC method."
    },
    "cosmos.slashing.v1beta1.Params": {
      "type": "object",
      "properties": {
        "signed_blocks_window": {
          "type": "string",
          "format": "int64"
        },
        "min_signed_per_window": {
          "type": "string",
          "format": "byte"
        },
        "downtime_jail_duration": {
          "type": "string"
        },
        "slash_fraction_double_sign": {
          "type": "string",
          "format": "byte"
        },
        "slash_fraction_downtime": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Params represents the parameters used for by the slashing module."
    },
    "cosmos.slashing.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/cosmos.slashing.v1beta1.Params"
        }
      },
      "title": "QueryParamsResponse is the response type for the Query/Params RPC method"
    },
    "cosmos.slashing.v1beta1.QuerySigningInfoResponse": {
      "type": "object",
      "properties": {
        "val_signing_info": {
          "$ref": "#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo",
          "title": "val_signing_info is the signing info of requested val cons address"
        }
      },
      "title": "QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC\nmethod"
    },
    "cosmos.slashing.v1beta1.QuerySigningInfosResponse": {
      "type": "object",
      "properties": {
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.slashing.v1beta1.ValidatorSigningInfo"
          },
          "title": "info is the signing info of all validators"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse"
        }
      },
      "title": "QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC\nmethod"
    },
    "cosmos.slashing.v1beta1.ValidatorSigningInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "start_height": {
          "type": "string",
          "format": "int64",
          "title": "Height at which validator was first a candidate OR was unjailed"
        },
        "index_offset": {
          "type": "string",
          "format": "int64",
          "description": "Index which is incremented each time the validator was a bonded\nin a block and may have signed a precommit or not. This in conjunction with the\n`SignedBlocksWindow` param determines the index in the `MissedBlocksBitArray`."
        },
        "jailed_until": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp until which the validator is jailed due to liveness downtime."
        },
        "tombstoned": {
          "type": "boolean",
          "description": "Whether or not a validator has been tombstoned (killed out of validator set). It is set\nonce the validator commits an equivocation or for any other configured misbehiavor."
        },
        "missed_blocks_counter": {
          "type": "string",
          "format": "int64",
          "description": "A counter kept to avoid unnecessary array reads.\nNote that `Sum(MissedBlocksBitArray)` always equals `MissedBlocksCounter`."
        }
      },
      "description": "ValidatorSigningInfo defines a validator's signing info for monitoring their\nliveness activity."
    },
    "cosmos.base.tendermint.v1beta1.ABCIQueryResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "log": {
          "type": "string"
        },
        "info": {
          "type": "string"
        },
        "index": {
          "type": "string",
          "format": "int64"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "value": {
          "type": "string",
          "format": "byte"
        },
        "proof_ops": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.ProofOps"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "codespace": {
          "type": "string"
        }
      },
      "description": "ABCIQueryResponse defines the response structure for the ABCIQuery gRPC\nquery.\n\nNote: This type is a duplicate of the ResponseQuery proto type defined in\nTendermint."
    },
    "cosmos.base.tendermint.v1beta1.Block": {
      "type": "object",
      "properties": {
        "header": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Header"
        },
        "data": {
          "$ref": "#/definitions/tendermint.types.Data"
        },
        "last_commit": {
          "$ref": "#/definitions/tendermint.types.Commit"
        }
      },
      "description": "Block is tendermint type Block, with the Header proposer address\nfield converted to bech32 string."
    },
    "cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse": {
      "type": "object",
      "properties": {
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "block": {
          "$ref": "#/definitions/tendermint.types.Block",
          "title": "Deprecated: please use `sdk_block` instead"
        },
        "sdk_block": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Block",
          "title": "Since: cosmos-sdk 0.47"
        }
      },
      "description": "GetBlockByHeightResponse is the response type for the Query/GetBlockByHeight\nRPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetLatestBlockResponse": {
      "type": "object",
      "properties": {
        "block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID"
        },
        "block": {
          "$ref": "#/definitions/tendermint.types.Block",
          "title": "Deprecated: please use `sdk_block` instead"
        },
        "sdk_block": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Block",
          "title": "Since: cosmos-sdk 0.47"
        }
      },
      "description": "GetLatestBlockResponse is the response type for the Query/GetLatestBlock RPC\nmethod."
    },
    "cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "string",
          "format": "int64"
        },
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Validator"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "GetLatestValidatorSetResponse is the response type for the\nQuery/GetValidatorSetByHeight RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetNodeInfoResponse": {
      "type": "object",
      "properties": {
        "default_node_info": {
          "$ref": "#/definitions/tendermint.p2p.DefaultNodeInfo"
        },
        "application_version": {
          "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.VersionInfo"
        }
      },
      "description": "GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC\nmethod."
    },
    "cosmos.base.tendermint.v1beta1.GetSyncingResponse": {
      "type": "object",
      "properties": {
        "syncing": {
          "type": "boolean"
        }
      },
      "description": "GetSyncingResponse is the response type for the Query/GetSyncing RPC method."
    },
    "cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse": {
      "type": "object",
      "properties": {
        "block_height": {
          "type": "string",
          "format": "int64"
        },
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Validator"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines an pagination for the response."
        }
      },
      "description": "GetValidatorSetByHeightResponse is the response type for the\nQuery/GetValidatorSetByHeight RPC method."
    },
    "cosmos.base.tendermint.v1beta1.Header": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/tendermint.version.Consensus",
          "title": "basic block info"
        },
        "chain_id": {
          "type": "string"
        },
        "height": {
          "type": "string",
          "format": "int64"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        },
        "last_block_id": {
          "$ref": "#/definitions/tendermint.types.BlockID",
          "title": "prev block info"
        },
        "last_commit_hash": {
          "type": "string",
          "format": "byte",
          "title": "hashes of block data"
        },
        "data_hash": {
          "type": "string",
          "format": "byte"
        },
        "validators_hash": {
          "type": "string",
          "format": "byte",
          "title": "hashes from the app output from the prev block"
        },
        "next_validators_hash": {
          "type": "string",
          "format": "byte"
        },
        "consensus_hash": {
          "type": "string",
          "format": "byte"
        },
        "app_hash": {
          "type": "string",
          "format": "byte"
        },
        "last_results_hash": {
          "type": "string",
          "format": "byte"
        },
        "evidence_hash": {
          "type": "string",
          "format": "byte",
          "title": "consensus info"
        },
        "proposer_address": {
          "type": "string",
          "description": "proposer_address is the original block proposer address, formatted as a Bech32 string.\nIn Tendermint, this type is `bytes`, but in the SDK, we convert it to a Bech32 string\nfor better UX."
        }
      },
      "description": "Header defines the structure of a Tendermint block header."
    },
    "cosmos.base.tendermint.v1beta1.Module": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "module path"
        },
        "version": {
          "type": "string",
          "title": "module version"
        },
        "sum": {
          "type": "string",
          "title": "checksum"
        }
      },
      "title": "Module is the type for VersionInfo"
    },
    "cosmos.base.tendermint.v1beta1.ProofOp": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "key": {
          "type": "string",
          "format": "byte"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "ProofOp defines an operation used for calculating Merkle root. The data could\nbe arbitrary format, providing nessecary data for example neighbouring node\nhash.\n\nNote: This type is a duplicate of the ProofOp proto type defined in\nTendermint."
    },
    "cosmos.base.tendermint.v1beta1.ProofOps": {
      "type": "object",
      "properties": {
        "ops": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.ProofOp"
          }
        }
      },
      "description": "ProofOps is Merkle proof defined by the list of ProofOps.\n\nNote: This type is a duplicate of the ProofOps proto type defined in\nTendermint."
    },
    "cosmos.base.tendermint.v1beta1.Validator": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "pub_key": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "voting_power": {
          "type": "string",
          "format": "int64"
        },
        "proposer_priority": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Validator is the type for the validator-set."
    },
    "cosmos.base.tendermint.v1beta1.VersionInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "app_name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "git_commit": {
          "type": "string"
        },
        "build_tags": {
          "type": "string"
        },
        "go_version": {
          "type": "string"
        },
        "build_deps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.tendermint.v1beta1.Module"
          }
        },
        "cosmos_sdk_version": {
          "type": "string",
          "title": "Since: cosmos-sdk 0.43"
        }
      },
      "description": "VersionInfo is the type for the GetNodeInfoResponse message."
    },
    "tendermint.p2p.DefaultNodeInfo": {
      "type": "object",
      "properties": {
        "protocol_version": {
          "$ref": "#/definitions/tendermint.p2p.ProtocolVersion"
        },
        "default_node_id": {
          "type": "string"
        },
        "listen_addr": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "channels": {
          "type": "string",
          "format": "byte"
        },
        "moniker": {
          "type": "string"
        },
        "other": {
          "$ref": "#/definitions/tendermint.p2p.DefaultNodeInfoOther"
        }
      }
    },
    "tendermint.p2p.DefaultNodeInfoOther": {
      "type": "object",
      "properties": {
        "tx_index": {
          "type": "string"
        },
        "rpc_address": {
          "type": "string"
        }
      }
    },
    "tendermint.p2p.ProtocolVersion": {
      "type": "object",
      "properties": {
        "p2p": {
          "type": "string",
          "format": "uint64"
        },
        "block": {
          "type": "string",
          "format": "uint64"
        },
        "app": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "cosmos.base.node.v1beta1.ConfigResponse": {
      "type": "object",
      "properties": {
        "minimum_gas_price": {
          "type": "string"
        }
      },
      "description": "ConfigResponse defines the response structure for the Config gRPC query."
    },
    "cosmos.gov.v1.Deposit": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "depositor": {
          "type": "string"
        },
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          }
        }
      },
      "description": "Deposit defines an amount deposited by an account address to an active\nproposal."
    },
    "cosmos.gov.v1.DepositParams": {
      "type": "object",
      "properties": {
        "min_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "Minimum deposit for a proposal to enter voting period."
        },
        "max_deposit_period": {
          "type": "string",
          "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2\n months."
        }
      },
      "description": "DepositParams defines the params for deposits on governance proposals."
    },
    "cosmos.gov.v1.Proposal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        },
        "status": {
          "$ref": "#/definitions/cosmos.gov.v1.ProposalStatus"
        },
        "final_tally_result": {
          "$ref": "#/definitions/cosmos.gov.v1.TallyResult",
          "description": "final_tally_result is the final tally result of the proposal. When\nquerying a proposal via gRPC, this field is not populated until the\nproposal's voting period has ended."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time"
        },
        "deposit_end_time": {
          "type": "string",
          "format": "date-time"
        },
        "total_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          }
        },
        "voting_start_time": {
          "type": "string",
          "format": "date-time"
        },
        "voting_end_time": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any arbitrary metadata attached to the proposal."
        }
      },
      "description": "Proposal defines the core field members of a governance proposal."
    },
    "cosmos.gov.v1.ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
        "PROPOSAL_STATUS_VOTING_PERIOD",
        "PROPOSAL_STATUS_PASSED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_FAILED"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed."
    },
    "cosmos.gov.v1.QueryDepositResponse": {
      "type": "object",
      "properties": {
        "deposit": {
          "$ref": "#/definitions/cosmos.gov.v1.Deposit",
          "description": "deposit defines the requested deposit."
        }
      },
      "description": "QueryDepositResponse is the response type for the Query/Deposit RPC method."
    },
    "cosmos.gov.v1.QueryDepositsResponse": {
      "type": "object",
      "properties": {
        "deposits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1.Deposit"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDepositsResponse is the response type for the Query/Deposits RPC method."
    },
    "cosmos.gov.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "voting_params": {
          "$ref": "#/definitions/cosmos.gov.v1.VotingParams",
          "description": "voting_params defines the parameters related to voting."
        },
        "deposit_params": {
          "$ref": "#/definitions/cosmos.gov.v1.DepositParams",
          "description": "deposit_params defines the parameters related to deposit."
        },
        "tally_params": {
          "$ref": "#/definitions/cosmos.gov.v1.TallyParams",
          "description": "tally_params defines the parameters related to tally."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.gov.v1.QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/cosmos.gov.v1.Proposal"
        }
      },
      "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
    },
    "cosmos.gov.v1.QueryProposalsResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1.Proposal"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsResponse is the response type for the Query/Proposals RPC\nmethod."
    },
    "cosmos.gov.v1.QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/cosmos.gov.v1.TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the response type for the Query/Tally RPC method."
    },
    "cosmos.gov.v1.QueryVoteResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/cosmos.gov.v1.Vote",
          "description": "vote defined the queried vote."
        }
      },
      "description": "QueryVoteResponse is the response type for the Query/Vote RPC method."
    },
    "cosmos.gov.v1.QueryVotesResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1.Vote"
          },
          "description": "votes defined the queried votes."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesResponse is the response type for the Query/Votes RPC method."
    },
    "cosmos.gov.v1.TallyParams": {
      "type": "object",
      "properties": {
        "quorum": {
          "type": "string",
          "description": "Minimum percentage of total stake needed to vote for a result to be\n considered valid."
        },
        "threshold": {
          "type": "string",
          "description": "Minimum proportion of Yes votes for proposal to pass. Default value: 0.5."
        },
        "veto_threshold": {
          "type": "string",
          "description": "Minimum value of Veto votes to Total votes ratio for proposal to be\n vetoed. Default value: 1/3."
        }
      },
      "description": "TallyParams defines the params for tallying votes on governance proposals."
    },
    "cosmos.gov.v1.TallyResult": {
      "type": "object",
      "properties": {
        "yes_count": {
          "type": "string"
        },
        "abstain_count": {
          "type": "string"
        },
        "no_count": {
          "type": "string"
        },
        "no_with_veto_count": {
          "type": "string"
        }
      },
      "description": "TallyResult defines a standard tally for a governance proposal."
    },
    "cosmos.gov.v1.Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "voter": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1.WeightedVoteOption"
          }
        },
        "metadata": {
          "type": "string",
          "description": "metadata is any  arbitrary metadata to attached to the vote."
        }
      },
      "description": "Vote defines a vote on a governance proposal.\nA Vote consists of a proposal ID, the voter, and the vote option."
    },
    "cosmos.gov.v1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.gov.v1.VotingParams": {
      "type": "object",
      "properties": {
        "voting_period": {
          "type": "string",
          "description": "Length of the voting period."
        }
      },
      "description": "VotingParams defines the params for voting on governance proposals."
    },
    "cosmos.gov.v1.WeightedVoteOption": {
      "type": "object",
      "properties": {
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1.VoteOption"
        },
        "weight": {
          "type": "string"
        }
      },
      "description": "WeightedVoteOption defines a unit of vote for vote split."
    },
    "cosmos.gov.v1beta1.Deposit": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "depositor": {
          "type": "string"
        },
        "amount": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          }
        }
      },
      "description": "Deposit defines an amount deposited by an account address to an active\nproposal."
    },
    "cosmos.gov.v1beta1.DepositParams": {
      "type": "object",
      "properties": {
        "min_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          },
          "description": "Minimum deposit for a proposal to enter voting period."
        },
        "max_deposit_period": {
          "type": "string",
          "description": "Maximum period for Atom holders to deposit on a proposal. Initial value: 2\n months."
        }
      },
      "description": "DepositParams defines the params for deposits on governance proposals."
    },
    "cosmos.gov.v1beta1.Proposal": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "content": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "status": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.ProposalStatus"
        },
        "final_tally_result": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.TallyResult",
          "description": "final_tally_result is the final tally result of the proposal. When\nquerying a proposal via gRPC, this field is not populated until the\nproposal's voting period has ended."
        },
        "submit_time": {
          "type": "string",
          "format": "date-time"
        },
        "deposit_end_time": {
          "type": "string",
          "format": "date-time"
        },
        "total_deposit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.base.v1beta1.Coin"
          }
        },
        "voting_start_time": {
          "type": "string",
          "format": "date-time"
        },
        "voting_end_time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Proposal defines the core field members of a governance proposal."
    },
    "cosmos.gov.v1beta1.ProposalStatus": {
      "type": "string",
      "enum": [
        "PROPOSAL_STATUS_UNSPECIFIED",
        "PROPOSAL_STATUS_DEPOSIT_PERIOD",
        "PROPOSAL_STATUS_VOTING_PERIOD",
        "PROPOSAL_STATUS_PASSED",
        "PROPOSAL_STATUS_REJECTED",
        "PROPOSAL_STATUS_FAILED"
      ],
      "default": "PROPOSAL_STATUS_UNSPECIFIED",
      "description": "ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed."
    },
    "cosmos.gov.v1beta1.QueryDepositResponse": {
      "type": "object",
      "properties": {
        "deposit": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.Deposit",
          "description": "deposit defines the requested deposit."
        }
      },
      "description": "QueryDepositResponse is the response type for the Query/Deposit RPC method."
    },
    "cosmos.gov.v1beta1.QueryDepositsResponse": {
      "type": "object",
      "properties": {
        "deposits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1beta1.Deposit"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryDepositsResponse is the response type for the Query/Deposits RPC method."
    },
    "cosmos.gov.v1beta1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "voting_params": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VotingParams",
          "description": "voting_params defines the parameters related to voting."
        },
        "deposit_params": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.DepositParams",
          "description": "deposit_params defines the parameters related to deposit."
        },
        "tally_params": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.TallyParams",
          "description": "tally_params defines the parameters related to tally."
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    },
    "cosmos.gov.v1beta1.QueryProposalResponse": {
      "type": "object",
      "properties": {
        "proposal": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.Proposal"
        }
      },
      "description": "QueryProposalResponse is the response type for the Query/Proposal RPC method."
    },
    "cosmos.gov.v1beta1.QueryProposalsResponse": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1beta1.Proposal"
          }
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryProposalsResponse is the response type for the Query/Proposals RPC\nmethod."
    },
    "cosmos.gov.v1beta1.QueryTallyResultResponse": {
      "type": "object",
      "properties": {
        "tally": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.TallyResult",
          "description": "tally defines the requested tally."
        }
      },
      "description": "QueryTallyResultResponse is the response type for the Query/Tally RPC method."
    },
    "cosmos.gov.v1beta1.QueryVoteResponse": {
      "type": "object",
      "properties": {
        "vote": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.Vote",
          "description": "vote defined the queried vote."
        }
      },
      "description": "QueryVoteResponse is the response type for the Query/Vote RPC method."
    },
    "cosmos.gov.v1beta1.QueryVotesResponse": {
      "type": "object",
      "properties": {
        "votes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1beta1.Vote"
          },
          "description": "votes defined the queried votes."
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "description": "QueryVotesResponse is the response type for the Query/Votes RPC method."
    },
    "cosmos.gov.v1beta1.TallyParams": {
      "type": "object",
      "properties": {
        "quorum": {
          "type": "string",
          "format": "byte",
          "description": "Minimum percentage of total stake needed to vote for a result to be\n considered valid."
        },
        "threshold": {
          "type": "string",
          "format": "byte",
          "description": "Minimum proportion of Yes votes for proposal to pass. Default value: 0.5."
        },
        "veto_threshold": {
          "type": "string",
          "format": "byte",
          "description": "Minimum value of Veto votes to Total votes ratio for proposal to be\n vetoed. Default value: 1/3."
        }
      },
      "description": "TallyParams defines the params for tallying votes on governance proposals."
    },
    "cosmos.gov.v1beta1.TallyResult": {
      "type": "object",
      "properties": {
        "yes": {
          "type": "string"
        },
        "abstain": {
          "type": "string"
        },
        "no": {
          "type": "string"
        },
        "no_with_veto": {
          "type": "string"
        }
      },
      "description": "TallyResult defines a standard tally for a governance proposal."
    },
    "cosmos.gov.v1beta1.Vote": {
      "type": "object",
      "properties": {
        "proposal_id": {
          "type": "string",
          "format": "uint64"
        },
        "voter": {
          "type": "string"
        },
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VoteOption",
          "description": "Deprecated: Prefer to use `options` instead. This field is set in queries\nif and only if `len(options) == 1` and that option has weight 1. In all\nother cases, this field will default to VOTE_OPTION_UNSPECIFIED."
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cosmos.gov.v1beta1.WeightedVoteOption"
          },
          "title": "Since: cosmos-sdk 0.43"
        }
      },
      "description": "Vote defines a vote on a governance proposal.\nA Vote consists of a proposal ID, the voter, and the vote option."
    },
    "cosmos.gov.v1beta1.VoteOption": {
      "type": "string",
      "enum": [
        "VOTE_OPTION_UNSPECIFIED",
        "VOTE_OPTION_YES",
        "VOTE_OPTION_ABSTAIN",
        "VOTE_OPTION_NO",
        "VOTE_OPTION_NO_WITH_VETO"
      ],
      "default": "VOTE_OPTION_UNSPECIFIED",
      "description": "VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option."
    },
    "cosmos.gov.v1beta1.VotingParams": {
      "type": "object",
      "properties": {
        "voting_period": {
          "type": "string",
          "description": "Length of the voting period."
        }
      },
      "description": "VotingParams defines the params for voting on governance proposals."
    },
    "cosmos.gov.v1beta1.WeightedVoteOption": {
      "type": "object",
      "properties": {
        "option": {
          "$ref": "#/definitions/cosmos.gov.v1beta1.VoteOption"
        },
        "weight": {
          "type": "string"
        }
      },
      "description": "WeightedVoteOption defines a unit of vote for vote split.\n\nSince: cosmos-sdk 0.43"
    },
    "celestia.mint.v1.QueryAnnualProvisionsResponse": {
      "type": "object",
      "properties": {
        "annual_provisions": {
          "type": "string",
          "format": "byte",
          "description": "AnnualProvisions is the current annual provisions."
        }
      },
      "description": "QueryAnnualProvisionsResponse is the response type for the\nQuery/AnnualProvisions RPC method."
    },
    "celestia.mint.v1.QueryGenesisTimeResponse": {
      "type": "object",
      "properties": {
        "genesis_time": {
          "type": "string",
          "format": "date-time",
          "description": "GenesisTime is the timestamp associated with the first block."
        }
      },
      "description": "QueryGenesisTimeResponse is the response type for the Query/GenesisTime RPC\nmethod."
    },
    "celestia.mint.v1.QueryInflationRateResponse": {
      "type": "object",
      "properties": {
        "inflation_rate": {
          "type": "string",
          "format": "byte",
          "description": "InflationRate is the current inflation rate."
        }
      },
      "description": "QueryInflationRateResponse is the response type for the Query/InflationRate\nRPC method."
    },
    "celestia.qgb.v1.BridgeValidator": {
      "type": "object",
      "properties": {
        "power": {
          "type": "string",
          "format": "uint64",
          "description": "Voting power of the validator."
        },
        "evm_address": {
          "type": "string",
          "description": "EVM address that will be used by the validator to sign messages."
        }
      },
      "title": "BridgeValidator represents a validator's ETH address and its power"
    },
    "celestia.qgb.v1.DataCommitment": {
      "type": "object",
      "properties": {
        "nonce": {
          "type": "string",
          "format": "uint64",
          "title": "Universal nonce defined under:\nhttps://github.com/celestiaorg/celestia-app/pull/464"
        },
        "begin_block": {
          "type": "string",
          "format": "uint64",
          "description": "First block defining the ordered set of blocks used to create the\ncommitment."
        },
        "end_block": {
          "type": "string",
          "format": "uint64",
          "description": "End exclusive last block defining the ordered set of blocks used to create\nthe commitment."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "title": "Block time where this data commitment was created"
        }
      },
      "description": "DataCommitment is the data commitment request message that will be signed\nusing orchestrators.\nIt does not contain a `commitment` field as this message will be created\ninside the state machine and it doesn't make sense to ask tendermint for the\ncommitment there.\nThe range defined by begin_block and end_block is end exclusive."
    },
    "celestia.qgb.v1.Params": {
      "type": "object",
      "properties": {
        "data_commitment_window": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Params represent Blobstream genesis and store parameters."
    },
    "celestia.qgb.v1.QueryAttestationRequestByNonceResponse": {
      "type": "object",
      "properties": {
        "attestation": {
          "$ref": "#/definitions/google.protobuf.Any",
          "title": "AttestationRequestI is either a Data Commitment or a Valset.\nThis was decided as part of the universal nonce approach under:\nhttps://github.com/celestiaorg/celestia-app/issues/468#issuecomment-1156887715"
        }
      },
      "title": "QueryAttestationRequestByNonceResponse"
    },
    "celestia.qgb.v1.QueryDataCommitmentRangeForHeightResponse": {
      "type": "object",
      "properties": {
        "data_commitment": {
          "$ref": "#/definitions/celestia.qgb.v1.DataCommitment"
        }
      },
      "title": "QueryDataCommitmentRangeForHeightResponse"
    },
    "celestia.qgb.v1.QueryEVMAddressResponse": {
      "type": "object",
      "properties": {
        "evm_address": {
          "type": "string"
        }
      },
      "title": "QueryEVMAddressResponse"
    },
    "celestia.qgb.v1.QueryEarliestAttestationNonceResponse": {
      "type": "object",
      "properties": {
        "nonce": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QueryEarliestAttestationNonceResponse earliest attestation nonce response"
    },
    "celestia.qgb.v1.QueryLatestAttestationNonceResponse": {
      "type": "object",
      "properties": {
        "nonce": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QueryLatestAttestationNonceResponse latest attestation nonce response"
    },
    "celestia.qgb.v1.QueryLatestDataCommitmentResponse": {
      "type": "object",
      "properties": {
        "data_commitment": {
          "$ref": "#/definitions/celestia.qgb.v1.DataCommitment"
        }
      },
      "title": "QueryLatestDataCommitmentResponse"
    },
    "celestia.qgb.v1.QueryLatestUnbondingHeightResponse": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "QueryLatestUnbondingHeightResponse"
    },
    "celestia.qgb.v1.QueryLatestValsetRequestBeforeNonceResponse": {
      "type": "object",
      "properties": {
        "valset": {
          "$ref": "#/definitions/celestia.qgb.v1.Valset"
        }
      },
      "title": "QueryLatestValsetRequestBeforeNonceResponse latest Valset request before\nheight response"
    },
    "celestia.qgb.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/celestia.qgb.v1.Params"
        }
      },
      "title": "QueryParamsResponse"
    },
    "celestia.qgb.v1.Valset": {
      "type": "object",
      "properties": {
        "nonce": {
          "type": "string",
          "format": "uint64",
          "title": "Universal nonce defined under:\nhttps://github.com/celestiaorg/celestia-app/pull/464"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/celestia.qgb.v1.BridgeValidator"
          },
          "description": "List of BridgeValidator containing the current validator set."
        },
        "height": {
          "type": "string",
          "format": "uint64",
          "title": "Current chain height"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "title": "Block time where this valset was created"
        }
      },
      "title": "Valset is the EVM Bridge Multsig Set, each Blobstream validator also\nmaintains an ETH key to sign messages, these are used to check signatures on\nETH because of the significant gas savings"
    },
    "celestia.blob.v1.Params": {
      "type": "object",
      "properties": {
        "gas_per_blob_byte": {
          "type": "integer",
          "format": "int64"
        },
        "gov_max_square_size": {
          "type": "string",
          "format": "uint64"
        }
      },
      "description": "Params defines the parameters for the module."
    },
    "celestia.blob.v1.QueryParamsResponse": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/celestia.blob.v1.Params"
        }
      },
      "description": "QueryParamsResponse is the response type for the Query/Params RPC method."
    }
  }
}