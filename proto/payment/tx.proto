syntax = "proto3";
package payment;

import "google/api/annotations.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/payment/types";

// Msg defines the payment Msg service.
service Msg {
  // PayForData allows the user to pay for the inclusion of a message
  rpc PayForData(MsgPayForData) returns (MsgPayForDataResponse) {
    option (google.api.http).get = "/celestia/payment/payfordata";
  }
}

// MsgWirePayForData is the format of data that is sent over the wire.
message MsgWirePayForData {
  string signer = 1;
  bytes message_namespace_id = 2; // assume this is 8 bytes!
  uint64 message_size = 3;
  bytes message = 4;
  ShareCommitAndSignature message_share_commitment = 6;
}

// MsgWirePayForDataResponse is the response returned after the submission of a
// MsgWirePayForData.
message MsgWirePayForDataResponse {}

message ShareCommitAndSignature {
  bytes share_commitment = 2;
  bytes signature = 3;
}

// MsgPayForData is the message that gets included in the block.
message MsgPayForData {
  string signer = 1;
  bytes message_namespace_id = 2;
  uint64 message_size = 3;
  bytes message_share_commitment = 4;
}

// MsgPayForDataResponse is the response returned after the submission of a
// MsgPayForData.
message MsgPayForDataResponse {}
