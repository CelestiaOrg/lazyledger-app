syntax = "proto3";
package qgb;
import "gogoproto/gogo.proto";
option go_package = "github.com/celestiaorg/celestia-app/x/qgb/types";

// BridgeValidator represents a validator's ETH address and its power
message BridgeValidator {
  // Voting power of the validator.
  uint64 power = 1;
  // Ethereum address that will be used by the validator to sign messages.
  string ethereum_address = 2;
}

// Valset is the Ethereum Bridge Multsig Set, each gravity validator also
// maintains an ETH key to sign messages, these are used to check signatures on
// ETH because of the significant gas savings
message Valset {
  // Unique number referencing the `ValSet`.
  uint64 nonce = 1;
  // List of BridgeValidator containing the current validator set.
  repeated BridgeValidator members = 2 [ (gogoproto.nullable) = false ];
  // Current chain height
  uint64 height = 3;
}

// Valset is the Ethereum Bridge Multsig Set, each gravity validator also
// maintains an ETH key to sign messages, these are used to check signatures on
// ETH because of the significant gas savings
message DataCommitment {
  // Unique number referencing the `DataCommitment`.
  uint64 nonce = 1;
  // Merkle root over a merkle tree containing the data roots of the set of
  // blocks starting in `begin_block` and ending at `end_block`.
  string commitment = 2;
  // First block defining the ordered set of blocks used to create the
  // commitment.
  int64 begin_block = 3;
  // Last block defining the ordered set of blocks used to create the
  // commitment.
  int64 end_block = 4;
}
