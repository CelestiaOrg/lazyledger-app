syntax = "proto3";
package celestia.blob.v1;

import "google/api/annotations.proto";
import "celestia/blob/v1/params.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/upgrade";

// Query defines the upgrade Query service.
service Query {
  // Params allows the querying of the params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/upgrade/v1/params";
  }

  // UpgradeStatus allows the querying of the tally of voting power by all
  // validators that have signalled for each version
  rpc UpgradeStatus(QueryUpgradeStatusRequest)
      returns (QueryUpgradeStatusResponse) {
    option (google.api.http).get = "/upgrade/v1/status";
  }
}

// QueryParamsRequest is the request type for the Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Params RPC method.
message QueryParamsResponse { Params params = 1; }

// QueryUpgradeStatusRequest is the request type for the UpgradeStatus RPC
// method.
message QueryUpgradeStatusRequest { uint64 version = 1; }

// QueryUpgradeStatusResponse is the response type for the UpgradeStatus RPC
// method.
message QueryUpgradeStatusResponse { uint64 voting_power = 1; }
