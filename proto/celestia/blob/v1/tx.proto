syntax = "proto3";
package celestia.blob.v1;

import "google/api/annotations.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/blob/types";

// Msg defines the blob Msg service.
service Msg {
  // PayForBlobs allows the user to pay for the inclusion of one or more blobs
  rpc PayForBlobs(MsgPayForBlobs) returns (MsgPayForBlobsResponse) {
    option (google.api.http).get = "/blob/v1/payforblobs";
  }
}

// MsgPayForBlobs pays for the inclusion of a blob in the block.
message MsgPayForBlobs {
  // signer is the bech32 encoded signer address. See
  // https://en.bitcoin.it/wiki/Bech32.
  string signer = 1;
  // 2 was previously used for namespaces.
  reserved 2;
  // blob_sizes is a list of blob sizes (one per blob). Each size is in bytes.
  repeated uint32 blob_sizes = 3;
  // share_commitments is a list of share commitments (one per blob).
  repeated bytes share_commitments = 4;
  // 8 was previously used for share_versions;
  reserved 8;
}

// MsgPayForBlobsResponse describes the response returned after the submission
// of a PayForBlobs
message MsgPayForBlobsResponse {}
