syntax = "proto3";
package celestia.staking.v1beta1;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "gogoproto/gogo.proto";

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/qgb/types";

service Msg {
  // RegisterEVMAddress records an evm address for the validator which is used
  // by the relayer to aggregate signatures. A validator can only register a
  // single EVM address. The EVM address can be overridden by a later message.
  // There are no validity checks of the EVM addresses existence on the Ethereum
  // state machine
  rpc RegisterEVMAddress(MsgRegisterEVMAddress)
      returns (MsgRegisterEVMAddressResponse);
}

message MsgRegisterEVMAddress {
  option (cosmos.msg.v1.signer) = "validator_address";

  // The address of the validator
  string validator_address = 1
      [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // The matching address of the EVM
  string evm_address = 2;
}

message MsgRegisterEVMAddressResponse {}
