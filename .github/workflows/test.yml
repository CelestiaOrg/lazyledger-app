name: Tests / Code Coverage
#  Tests / Code Coverage workflow runs unit tests and uploads a code coverage
#  report
#  This workflow is run on pushes to main & every Pull Requests where a .go,
#  .mod, .sum have been changed
on:
  workflow_call:

concurrency:
  # do not cancel jobs from earlier commits for tags or the main branch
  group: ${{ github.workflow }}-${{ !startsWith(github.ref, 'refs/tags/') &&
      github.ref != 'refs/heads/main' }}
  cancel-in-progress: true

jobs:
  install-tparse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - name: Display go version
        run: go version
      - name: install tparse
        run: >
          export GO111MODULE="on" &&
          go install github.com/mfridman/tparse@v0.8.3
      - uses: actions/cache@v3.3.1
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-tparse-binary

  # don't use cosmovisor until we have tests
  # test-cosmovisor:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: 1.19
  #     - name: Display go version
  #       run: go version
  #     - uses: technote-space/get-diff-action@v6.1.2
  #       id: git_diff
  #       with:
  #         PREFIX_FILTER: |
  #           cosmovisor
  #         PATTERNS: |
  #           **/**.go
  #           go.mod
  #           go.sum
  #     - name: Run cosmovisor tests
  #       run: cd cosmovisor; make
  #       if: env.GIT_DIFF

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: test & coverage report creation
        run: go test -mod=readonly -timeout 30m -coverprofile=coverage.out -covermode=atomic
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v3
        with:
          name: "${{ github.sha }}-coverage"
          path: ./coverage.out

  upload-coverage-report:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-00-coverage"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-01-coverage"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-02-coverage"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-03-coverage"
        if: env.GIT_DIFF
      - run: |
          cat ./*profile.out | grep -v "mode: atomic" >> coverage.txt
        if: env.GIT_DIFF
      - name: filter out DONTCOVER
        # yamllint disable
        run: |
          (find . -type f -name '*.go' | xargs grep -l 'DONTCOVER') > excludelist.txt
          find . -type f -name '*.pb.*' >> excludelist.txt
          find . -type f -path './tests/mocks/*.go' >> excludelist.txt
          while IFS= read -r filename; do
            # trim filename
            trimmedname=$(echo $filename | xargs)
            echo "Excluding ${trimmedname} from coverage report..."
            sed -i.bak "/$(echo $trimmedname | sed 's/\//\\\//g')/d" coverage.txt
          done < excludelist.txt
        # yamllint enable
        if: env.GIT_DIFF
      - uses: codecov/codecov-action@v3
        with:
          file: ./coverage.txt
        if: env.GIT_DIFF

  test-race:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - uses: technote-space/get-diff-action@v6.1.2
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - name: test & coverage report creation
        run: go test -mod=readonly -json -timeout 30m -race -test.short > race-output.txt
        if: env.GIT_DIFF
      - uses: actions/upload-artifact@v3
        with:
          name: "${{ github.sha }}-race-output"
          path: ./race-output.txt

  race-detector-report:
    runs-on: ubuntu-latest
    needs: [test-race, install-tparse]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.1.2
        id: git_diff
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-00-race-output"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-01-race-output"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-02-race-output"
        if: env.GIT_DIFF
      - uses: actions/download-artifact@v3
        with:
          name: "${{ github.sha }}-03-race-output"
        if: env.GIT_DIFF
      - uses: actions/cache@v3.3.1
        with:
          path: ~/go/bin
          key: ${{ runner.os }}-go-tparse-binary
        if: env.GIT_DIFF
      - name: Generate test report (go test -race)
        run: cat ./*-race-output.txt | ~/go/bin/tparse
        if: env.GIT_DIFF

  # # todo(evan) add later
  # liveness-test:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-go@v4
  #       with:
  #         go-version: 1.19
  #     - uses: technote-space/get-diff-action@v6.1.2
  #       id: git_diff
  #       with:
  #         PATTERNS: |
  #           **/**.go
  #           go.mod
  #           go.sum
  #     - name: start localnet
  #       run: |
  #         make clean build-simd-linux localnet-start
  #       if: env.GIT_DIFF
  #     - name: test liveness
  #       run: |
  #         ./contrib/localnet_liveness.sh 100 5 50 localhost
  #       if: env.GIT_DIFF
